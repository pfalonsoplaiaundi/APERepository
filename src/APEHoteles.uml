<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_jwLfQOimEe-n_bccIa6R9w" name="APEHoteles">
    <eAnnotations xmi:id="_jxfG0OimEe-n_bccIa6R9w" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_jxhjEOimEe-n_bccIa6R9w" source="codegen">
        <details xmi:id="_jxhjEeimEe-n_bccIa6R9w" key="codegenDirectory" value="/APEHoteles/src"/>
        <details xmi:id="_nJ4mAOimEe-n_bccIa6R9w" key="AssociatedSourceCode" value="/APEHoteles/src/auxi/Input.java;4062323312/1;/APEHoteles/src/auxi/StringDate.java;2476410678/1;/APEHoteles/src/conectores/ConectMySQL.java;158918339/1;/APEHoteles/src/conectores/RepoCliente.java;3924953542/1;/APEHoteles/src/conectores/RepoEspacioComun.java;1732650331/1;/APEHoteles/src/conectores/RepoHabitacion.java;3432395498/1;/APEHoteles/src/conectores/RepoHotel.java;3950940006/1;/APEHoteles/src/conectores/RepoReserva.java;1199605398/1;/APEHoteles/src/conectores/RepoSala.java;3283889434/1;/APEHoteles/src/conectores/RepoSalaReunion.java;1838901764/1;/APEHoteles/src/menu/Login.java;1008285735/1;/APEHoteles/src/menu/MenuAdmin.java;2459275710/1;/APEHoteles/src/menu/MenuCarrito.java;3283827268/1;/APEHoteles/src/menu/MenuPrincipal.java;175533854/1;/APEHoteles/src/menu/MenuProductos.java;1783126282/1;/APEHoteles/src/menu/MenuReserva.java;887154218/1;/APEHoteles/src/model/Cliente.java;2035766958/1;/APEHoteles/src/model/EspacioComun.java;393015089/1;/APEHoteles/src/model/HabDisponible.java;544419656/1;/APEHoteles/src/model/HabReserva.java;1196145074/1;/APEHoteles/src/model/Habitacion.java;2321834053/1;/APEHoteles/src/model/Hotel.java;2983873740/1;/APEHoteles/src/model/Reserva.java;4067567625/1;/APEHoteles/src/model/Sala.java;2730191580/1;/APEHoteles/src/model/SalaReunion.java;3341375556/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_kGyBYOimEe-n_bccIa6R9w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_kGyocOimEe-n_bccIa6R9w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_kGyoceimEe-n_bccIa6R9w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_kGyocuimEe-n_bccIa6R9w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_kGyoc-imEe-n_bccIa6R9w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_kGyodOimEe-n_bccIa6R9w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_kGzPgOimEe-n_bccIa6R9w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_kGzPgeimEe-n_bccIa6R9w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_kGzPguimEe-n_bccIa6R9w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_kG1rwOimEe-n_bccIa6R9w" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_kG1rweimEe-n_bccIa6R9w" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_kVi2IOimEe-n_bccIa6R9w" name="Console"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_kG1rwuimEe-n_bccIa6R9w" name="sql">
        <packagedElement xmi:type="uml:DataType" xmi:id="_kVkrUOimEe-n_bccIa6R9w" name="Date"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_kV1KAOimEe-n_bccIa6R9w" name="PreparedStatement"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_kV2YIOimEe-n_bccIa6R9w" name="ResultSet"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_kV2YIuimEe-n_bccIa6R9w" name="SQLException"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_kXAOsOimEe-n_bccIa6R9w" name="Connection"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_kG1rw-imEe-n_bccIa6R9w" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_kVmggOimEe-n_bccIa6R9w" name="InputMismatchException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_kVnHkOimEe-n_bccIa6R9w" name="Scanner"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_kVvqcOimEe-n_bccIa6R9w" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_kWdcIOimEe-n_bccIa6R9w" name="Objects"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_kHE8UOimEe-n_bccIa6R9w" name="time">
        <packagedElement xmi:type="uml:Package" xmi:id="_kHE8UeimEe-n_bccIa6R9w" name="format">
          <packagedElement xmi:type="uml:Class" xmi:id="_kVt1QeimEe-n_bccIa6R9w" name="DateTimeFormatter"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_kVtOMOimEe-n_bccIa6R9w" name="LocalDate"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_kXIxkOimEe-n_bccIa6R9w" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_kXJYoOimEe-n_bccIa6R9w" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_kG2S0OimEe-n_bccIa6R9w" name="model">
      <packagedElement xmi:type="uml:Package" xmi:id="_kHZFYOimEe-n_bccIa6R9w" name="Habitacion">
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_kWClYOimEe-n_bccIa6R9w" name="tipoHab"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_kHZFYeimEe-n_bccIa6R9w" name="Sala">
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_kWClYuimEe-n_bccIa6R9w" name="tSala"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kKqb0uimEe-n_bccIa6R9w" name="Cliente">
        <ownedComment xmi:id="_kYte4-imEe-n_bccIa6R9w">
          <body>Objeto que almacena los datos de cliente</body>
        </ownedComment>
        <ownedAttribute xmi:id="_kXjBQ-imEe-n_bccIa6R9w" name="DNI">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kXjBROimEe-n_bccIa6R9w" name="nombre">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kXjoUOimEe-n_bccIa6R9w" name="apellidos">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kXjoUeimEe-n_bccIa6R9w" name="telefono">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kXjoUuimEe-n_bccIa6R9w" name="email">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kXjoU-imEe-n_bccIa6R9w" name="tarifa" type="_kKrp8OimEe-n_bccIa6R9w" association="_kYutAOimEe-n_bccIa6R9w"/>
        <ownedAttribute xmi:id="_kXkPYOimEe-n_bccIa6R9w" name="bTrabajador" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kXkPYuimEe-n_bccIa6R9w" name="pass">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYbLAOimEe-n_bccIa6R9w" name="Cliente" specification="_kKv7YOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYbLAeimEe-n_bccIa6R9w" name="DNI">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYbLAuimEe-n_bccIa6R9w" name="nombre">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYbLA-imEe-n_bccIa6R9w" name="apellidos">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYbLBOimEe-n_bccIa6R9w" name="telefono">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYbLBeimEe-n_bccIa6R9w" name="email">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYbLBuimEe-n_bccIa6R9w" name="bTrabajador">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYbLB-imEe-n_bccIa6R9w" name="pass">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYbLCOimEe-n_bccIa6R9w" type="_kKqb0uimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>super();&#xD;
		this.DNI = DNI;&#xD;
		this.nombre = nombre;&#xD;
		this.apellidos = apellidos;&#xD;
		this.telefono = telefono;&#xD;
		this.email = email;&#xD;
		this.bTrabajador = bTrabajador;&#xD;
		this.pass = pass;&#xD;
		this.tarifa = selectorTarifa();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYbLCeimEe-n_bccIa6R9w" name="Cliente" specification="_kKxwkOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYbLCuimEe-n_bccIa6R9w" name="DNI">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYbLC-imEe-n_bccIa6R9w" name="nombre">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYbLDOimEe-n_bccIa6R9w" name="apellidos">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYbLDeimEe-n_bccIa6R9w" name="telefono">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYbLDuimEe-n_bccIa6R9w" name="email">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYbLD-imEe-n_bccIa6R9w" name="bTrabajador">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYbLEOimEe-n_bccIa6R9w" name="tarifa">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYbLEeimEe-n_bccIa6R9w" name="pass">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYbLEuimEe-n_bccIa6R9w" type="_kKqb0uimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>super();&#xD;
		this.DNI = DNI;&#xD;
		this.nombre = nombre;&#xD;
		this.apellidos = apellidos;&#xD;
		this.telefono = telefono;&#xD;
		this.email = email;&#xD;
		this.bTrabajador = bTrabajador;&#xD;
		this.pass = pass;&#xD;
		this.tarifa = selectorTarifa(tarifa);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYbLE-imEe-n_bccIa6R9w" name="isbTrabajador" specification="_kKyXp-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYbLFOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return bTrabajador;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYbyEOimEe-n_bccIa6R9w" name="setbTrabajador" specification="_kKy-seimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYbyEeimEe-n_bccIa6R9w" name="bTrabajador">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>this.bTrabajador = bTrabajador;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYbyEuimEe-n_bccIa6R9w" name="hashCode" specification="_kKzlweimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYbyE-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return Objects.hash(DNI);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYbyFOimEe-n_bccIa6R9w" name="equals" specification="_kXJ_sOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYbyFeimEe-n_bccIa6R9w" name="obj" type="_kXJYoOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYbyFuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if (this == obj)&#xD;
			return true;&#xD;
		if (obj == null)&#xD;
			return false;&#xD;
		if (getClass() != obj.getClass())&#xD;
			return false;&#xD;
		Cliente other = (Cliente) obj;&#xD;
		return Objects.equals(DNI, other.DNI);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYbyF-imEe-n_bccIa6R9w" name="toString" specification="_kK7hkOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYbyGOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;\n------ &quot;&#xD;
				+ (isbTrabajador() ? &quot;Trabajador&quot; : &quot;Cliente&quot;)&#xD;
				+ &quot; ------\n&quot;&#xD;
				+ &quot;DNI: \t\t&quot; + DNI + &quot;\n&quot;&#xD;
				+ &quot;Nombre: \t&quot; + nombre + &quot; &quot; + apellidos + &quot;\n&quot;&#xD;
				+ &quot;Telefono: \t&quot; + telefono + &quot;\n&quot;&#xD;
				+ &quot;Email: \t\t&quot; + email + &quot;\n&quot;&#xD;
				+ &quot;Tarifa: \t&quot; + tarifa + &quot;\n&quot;&#xD;
				+ &quot;---------------------&quot;;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYbyGeimEe-n_bccIa6R9w" name="verificacionDNI" specification="_kK8vsOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYbyGuimEe-n_bccIa6R9w" name="DNI">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYbyG-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>// Verificar que el DNI tenga 9 caracteres&#xD;
     if (DNI == null || DNI.length() != 9) {&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     // Separar los dígitos y la letra&#xD;
     String numeros = DNI.substring(0, 8);&#xD;
     char letra = DNI.charAt(8);&#xD;
&#xD;
     // Verificar que los primeros 8 caracteres sean dígitos&#xD;
     if (!numeros.matches(&quot;\\d{8}&quot;)) {&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     // Calcular la letra correcta&#xD;
     String letras = &quot;TRWAGMYFPDXBNJZSQVHLCKE&quot;;&#xD;
     int numero = Integer.parseInt(numeros);&#xD;
     char letraCorrecta = letras.charAt(numero % 23);&#xD;
&#xD;
     // Comparar la letra calculada con la letra proporcionada&#xD;
     return letra == letraCorrecta;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYcZIOimEe-n_bccIa6R9w" name="tieneNumeros" specification="_kK8vs-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYcZIeimEe-n_bccIa6R9w" name="pass">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYcZIuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>// Comprueba que pass no este vacio&#xD;
 	if (pass == null) {&#xD;
         return false;&#xD;
     }&#xD;
 	&#xD;
 	// Revisa caracter a caracter si hay un numero, si llega al final y no lo hay devuelve false&#xD;
     for (char c : pass.toCharArray()) {&#xD;
         if (Character.isDigit(c)) {&#xD;
             return true;&#xD;
         }&#xD;
     }&#xD;
     return false;&#xD;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYcZI-imEe-n_bccIa6R9w" name="tieneMayus" specification="_kK9WwOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYcZJOimEe-n_bccIa6R9w" name="pass">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYcZJeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>// Comprueba que pass no este vacio&#xD;
 	if (pass == null) {&#xD;
         return false;&#xD;
     }&#xD;
 	&#xD;
 	// Revisa caracter a caracter si hay una mayuscula, si llega al final y no la hay devuelve false&#xD;
     for (char c : pass.toCharArray()) {&#xD;
         if (Character.isUpperCase(c)) {&#xD;
             return true;&#xD;
         }&#xD;
     }&#xD;
     return false;&#xD;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYcZJuimEe-n_bccIa6R9w" name="tieneMinus" specification="_kK9Ww-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYcZJ-imEe-n_bccIa6R9w" name="pass">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYcZKOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>// Comprueba que pass no este vacio&#xD;
 	if (pass == null) {&#xD;
         return false;&#xD;
     }&#xD;
 	&#xD;
 	// Revisa caracter a caracter si hay una minuscula, si llega al final y no la hay devuelva false&#xD;
     for (char c : pass.toCharArray()) {&#xD;
         if (Character.isLowerCase(c)) {&#xD;
             return true;&#xD;
         }&#xD;
     }&#xD;
     return false;&#xD;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYcZKeimEe-n_bccIa6R9w" name="tiene8caracteres" specification="_kK990OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYcZKuimEe-n_bccIa6R9w" name="pass">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYcZK-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>// Comprueba que pass no este vacio&#xD;
 	if (pass == null) {&#xD;
         return false;&#xD;
     }&#xD;
 	&#xD;
 	// Revisa caracter a caracter si hay una minuscula, si llega al final y no la hay devuelva false&#xD;
 	return pass.length()>=8;&#xD;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYcZLOimEe-n_bccIa6R9w" name="verificacionPass" specification="_kK990-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYcZLeimEe-n_bccIa6R9w" name="pass">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYcZLuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return tieneNumeros(pass) &amp;&amp; tieneMayus(pass) &amp;&amp; tieneMinus(pass) &amp;&amp; tiene8caracteres(pass) ;&#xD;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYdAMOimEe-n_bccIa6R9w" name="selectorTarifa" specification="_kK991uimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYdAMeimEe-n_bccIa6R9w" type="_kKrp8OimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>if (bTrabajador) {&#xD;
         return tarifas.dctoTrabajador;&#xD;
     } else {&#xD;
         return tarifas.dctoNewCliente;&#xD;
     }&#xD;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYdAMuimEe-n_bccIa6R9w" name="selectorTarifa" specification="_kK-k4OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYdAM-imEe-n_bccIa6R9w" name="tarifa">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYdANOimEe-n_bccIa6R9w" type="_kKrp8OimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>ArrayList&lt;String> t = new ArrayList&lt;>();&#xD;
		t.add(&quot;estandar&quot;);&#xD;
		t.add(&quot;dctoTrabajador&quot;);&#xD;
		t.add(&quot;dcto5&quot;);&#xD;
		t.add(&quot;dcto10&quot;);&#xD;
		t.add(&quot;dcto5por&quot;);&#xD;
		t.add(&quot;dcto10por&quot;);&#xD;
		t.add(&quot;dctoNewCliente&quot;);&#xD;
		&#xD;
		// Comparto lo que me pasan con el array de arriba y lo transformo en el enumerado&#xD;
		switch (t.indexOf(tarifa)) {&#xD;
		case 0:&#xD;
			return tarifas.estandar;&#xD;
		case 1:&#xD;
			return tarifas.dctoTrabajador;&#xD;
		case 2:&#xD;
			return tarifas.dcto5;&#xD;
		case 3:&#xD;
			return tarifas.dcto10;&#xD;
		case 4:&#xD;
			return tarifas.dcto5por;&#xD;
		case 5:&#xD;
			return tarifas.dcto10por;&#xD;
		case 6:&#xD;
			return tarifas.dctoNewCliente;&#xD;
		default:&#xD;
			return tarifas.estandar;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYdANeimEe-n_bccIa6R9w" name="aplicarDcto" specification="_kK_L8OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYdANuimEe-n_bccIa6R9w" name="pvp">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYdAN-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>ArrayList&lt;String> t = new ArrayList&lt;>();&#xD;
		t.add(&quot;estandar&quot;);&#xD;
		t.add(&quot;dctoTrabajador&quot;);&#xD;
		t.add(&quot;dcto5&quot;);&#xD;
		t.add(&quot;dcto10&quot;);&#xD;
		t.add(&quot;dcto5por&quot;);&#xD;
		t.add(&quot;dcto10por&quot;);&#xD;
		t.add(&quot;dctoNewCliente&quot;);&#xD;
		&#xD;
		// Comparto lo que me pasan con el array de arriba y lo transformo en el enumerado&#xD;
		switch (t.indexOf(Login.user.getTarifa().toString())) {&#xD;
		case 0:&#xD;
			return pvp;&#xD;
		case 1:&#xD;
			return pvp*0.8;&#xD;
		case 2:&#xD;
			return pvp-5;&#xD;
		case 3:&#xD;
			return pvp-10;&#xD;
		case 4:&#xD;
			return pvp*0.95;&#xD;
		case 5:&#xD;
			return pvp*0.9;&#xD;
		case 6:&#xD;
			return pvp*0.85;&#xD;
		default:&#xD;
			return pvp;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kKv7YOimEe-n_bccIa6R9w" name="Cliente" method="_kYbLAOimEe-n_bccIa6R9w">
          <eAnnotations xmi:id="_kKwidOimEe-n_bccIa6R9w" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kKwideimEe-n_bccIa6R9w" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_kYutAuimEe-n_bccIa6R9w">
            <body>Constructor de cliente en el que la tarifa se pone automaticamente&#xD;
	 * @param DNI&#xD;
	 * @param nombre&#xD;
	 * @param apellidos&#xD;
	 * @param telefono&#xD;
	 * @param email&#xD;
	 * @param bTrabajador&#xD;
	 * @param pass</body>
          </ownedComment>
          <ownedParameter xmi:id="_kKv7YeimEe-n_bccIa6R9w" name="DNI">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kKv7YuimEe-n_bccIa6R9w" name="nombre">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kKv7Y-imEe-n_bccIa6R9w" name="apellidos">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kKwicOimEe-n_bccIa6R9w" name="telefono">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kKwiceimEe-n_bccIa6R9w" name="email">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kKwicuimEe-n_bccIa6R9w" name="bTrabajador">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kKwic-imEe-n_bccIa6R9w" name="pass">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kKwiduimEe-n_bccIa6R9w" type="_kKqb0uimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kKxwkOimEe-n_bccIa6R9w" name="Cliente" method="_kYbLCeimEe-n_bccIa6R9w">
          <eAnnotations xmi:id="_kKyXpOimEe-n_bccIa6R9w" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kKyXpeimEe-n_bccIa6R9w" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_kYvUEOimEe-n_bccIa6R9w">
            <body>Constructor de cliente en el que la tarifa se da en String&#xD;
	 * @param DNI&#xD;
	 * @param nombre&#xD;
	 * @param apellidos&#xD;
	 * @param telefono&#xD;
	 * @param email&#xD;
	 * @param bTrabajador&#xD;
	 * @param tarifa&#xD;
	 * @param pass</body>
          </ownedComment>
          <ownedParameter xmi:id="_kKxwkeimEe-n_bccIa6R9w" name="DNI">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kKxwkuimEe-n_bccIa6R9w" name="nombre">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kKxwk-imEe-n_bccIa6R9w" name="apellidos">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kKxwlOimEe-n_bccIa6R9w" name="telefono">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kKyXoOimEe-n_bccIa6R9w" name="email">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kKyXoeimEe-n_bccIa6R9w" name="bTrabajador">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kKyXouimEe-n_bccIa6R9w" name="tarifa">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kKyXo-imEe-n_bccIa6R9w" name="pass">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kKyXpuimEe-n_bccIa6R9w" type="_kKqb0uimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kKyXp-imEe-n_bccIa6R9w" name="isbTrabajador" method="_kYbLE-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKy-sOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kKy-seimEe-n_bccIa6R9w" name="setbTrabajador" method="_kYbyEOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKzlwOimEe-n_bccIa6R9w" name="bTrabajador">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kKzlweimEe-n_bccIa6R9w" name="hashCode" method="_kYbyEuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKzlwuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kK7hkOimEe-n_bccIa6R9w" name="toString" method="_kYbyF-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kK8IoOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kK8vsOimEe-n_bccIa6R9w" name="verificacionDNI" isStatic="true" method="_kYbyGeimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYvUEeimEe-n_bccIa6R9w">
            <body>Verifica si un DNI es correcto o no&#xD;
	 * @param DNI&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kK8vseimEe-n_bccIa6R9w" name="DNI">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kK8vsuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kK8vs-imEe-n_bccIa6R9w" name="tieneNumeros" isStatic="true" method="_kYcZIOimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYvUEuimEe-n_bccIa6R9w">
            <body>Funcion que comprueba que haya numeros en un string</body>
          </ownedComment>
          <ownedParameter xmi:id="_kK8vtOimEe-n_bccIa6R9w" name="pass">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kK8vteimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kK9WwOimEe-n_bccIa6R9w" name="tieneMayus" isStatic="true" method="_kYcZI-imEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYvUE-imEe-n_bccIa6R9w">
            <body>Funcion que comprueba que haya mayusculas en un string</body>
          </ownedComment>
          <ownedParameter xmi:id="_kK9WweimEe-n_bccIa6R9w" name="pass">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kK9WwuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kK9Ww-imEe-n_bccIa6R9w" name="tieneMinus" isStatic="true" method="_kYcZJuimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYvUFOimEe-n_bccIa6R9w">
            <body>Funcion que comprueba que haya minusculas en un string</body>
          </ownedComment>
          <ownedParameter xmi:id="_kK9WxOimEe-n_bccIa6R9w" name="pass">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kK9WxeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kK990OimEe-n_bccIa6R9w" name="tiene8caracteres" isStatic="true" method="_kYcZKeimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYvUFeimEe-n_bccIa6R9w">
            <body>Comprueba que la contraseña tenga al menos 8 caracteres&#xD;
     * @param pass&#xD;
     * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kK990eimEe-n_bccIa6R9w" name="pass">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kK990uimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kK990-imEe-n_bccIa6R9w" name="verificacionPass" isStatic="true" method="_kYcZLOimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYvUFuimEe-n_bccIa6R9w">
            <body>Comprueba que se cumplan todas las condiciones de la contraseña</body>
          </ownedComment>
          <ownedParameter xmi:id="_kK991OimEe-n_bccIa6R9w" name="pass">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kK991eimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kK991uimEe-n_bccIa6R9w" name="selectorTarifa" visibility="private" method="_kYdAMOimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYvUF-imEe-n_bccIa6R9w">
            <body>Al construir un nuevo cliente le asigna su tarifa&#xD;
	 * segun si es trabajador o nuevo cliente.</body>
          </ownedComment>
          <ownedParameter xmi:id="_kWf4YOimEe-n_bccIa6R9w" type="_kKrp8OimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kK-k4OimEe-n_bccIa6R9w" name="selectorTarifa" visibility="private" method="_kYdAMuimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYvUGOimEe-n_bccIa6R9w">
            <body>Transforma una tarifa en string en una tarifa en enum.&#xD;
     * @param tarifa&#xD;
     * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kK-k4eimEe-n_bccIa6R9w" name="tarifa">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWf4YeimEe-n_bccIa6R9w" type="_kKrp8OimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kK_L8OimEe-n_bccIa6R9w" name="aplicarDcto" method="_kYdANeimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYv7IOimEe-n_bccIa6R9w">
            <body>Transforma una tarifa en un descuento sobre el pvp&#xD;
	 * @param pvp&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kK_L8eimEe-n_bccIa6R9w" name="pvp">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kK_L8uimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kXJ_sOimEe-n_bccIa6R9w" name="equals" method="_kYbyFOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kXJ_seimEe-n_bccIa6R9w" name="obj" type="_kXJYoOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kXJ_suimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_kKrp8OimEe-n_bccIa6R9w" name="tarifas">
          <eAnnotations xmi:id="_kKrp8eimEe-n_bccIa6R9w" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kKrp8uimEe-n_bccIa6R9w" key="static"/>
          </eAnnotations>
          <ownedLiteral xmi:id="_kKs4EOimEe-n_bccIa6R9w" name="estandar"/>
          <ownedLiteral xmi:id="_kKtfIOimEe-n_bccIa6R9w" name="dctoTrabajador"/>
          <ownedLiteral xmi:id="_kKtfIeimEe-n_bccIa6R9w" name="dcto5"/>
          <ownedLiteral xmi:id="_kKtfIuimEe-n_bccIa6R9w" name="dcto10"/>
          <ownedLiteral xmi:id="_kKtfI-imEe-n_bccIa6R9w" name="dcto5por"/>
          <ownedLiteral xmi:id="_kKuGMOimEe-n_bccIa6R9w" name="dcto10por"/>
          <ownedLiteral xmi:id="_kKuGMeimEe-n_bccIa6R9w" name="dctoNewCliente"/>
        </nestedClassifier>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kLBoMOimEe-n_bccIa6R9w" name="EspacioComun">
        <ownedComment xmi:id="_kYv7IeimEe-n_bccIa6R9w">
          <body>Objeto que almacena los datos de los espacios comunes</body>
        </ownedComment>
        <generalization xmi:id="_kWjiwOimEe-n_bccIa6R9w" general="_kLT8EOimEe-n_bccIa6R9w"/>
        <ownedAttribute xmi:id="_kXldgOimEe-n_bccIa6R9w" name="tipo">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYeOUOimEe-n_bccIa6R9w" name="EspacioComun" specification="_kWi7sOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYeOUeimEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYeOUuimEe-n_bccIa6R9w" name="capacidad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYeOU-imEe-n_bccIa6R9w" name="tlfno">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYeOVOimEe-n_bccIa6R9w" name="pvp">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYeOVeimEe-n_bccIa6R9w" name="hotel" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYeOVuimEe-n_bccIa6R9w" name="tipo">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYeOV-imEe-n_bccIa6R9w" type="_kLBoMOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>super(num, capacidad, tlfno, pvp, hotel, Sala.tSala.EspaciosComunes);&#xD;
		this.tipo = tipo;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYeOWOimEe-n_bccIa6R9w" name="toString" specification="_kLDdYOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYeOWeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return super.toString() &#xD;
			+ &quot;Tipo: &quot; + tipo + &quot;\n&quot;&#xD;
			+ &quot;----------------------------&quot;;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kLDdYOimEe-n_bccIa6R9w" name="toString" method="_kYeOWOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kLDdYeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kWi7sOimEe-n_bccIa6R9w" name="EspacioComun" method="_kYeOUOimEe-n_bccIa6R9w">
          <eAnnotations xmi:id="_kWi7t-imEe-n_bccIa6R9w" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kWi7uOimEe-n_bccIa6R9w" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_kWi7seimEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWi7suimEe-n_bccIa6R9w" name="capacidad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWi7s-imEe-n_bccIa6R9w" name="tlfno">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWi7tOimEe-n_bccIa6R9w" name="pvp">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWi7teimEe-n_bccIa6R9w" name="hotel" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWi7tuimEe-n_bccIa6R9w" name="tipo">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWi7ueimEe-n_bccIa6R9w" type="_kLBoMOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kLFSkOimEe-n_bccIa6R9w" name="HabDisponible">
        <ownedComment xmi:id="_kYwiMOimEe-n_bccIa6R9w">
          <body>Objeto que almacena la informacion de habitacion y su disponibilidad</body>
        </ownedComment>
        <ownedAttribute xmi:id="_kXldgeimEe-n_bccIa6R9w" name="habitacion" type="_kLIV4OimEe-n_bccIa6R9w" association="_kYwiMeimEe-n_bccIa6R9w"/>
        <ownedAttribute xmi:id="_kXldguimEe-n_bccIa6R9w" name="disponible">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYeOWuimEe-n_bccIa6R9w" name="HabDisponible" specification="_kWkJ0OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYeOW-imEe-n_bccIa6R9w" name="habitacion" type="_kLIV4OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYeOXOimEe-n_bccIa6R9w" name="disponible">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYeOXeimEe-n_bccIa6R9w" type="_kLFSkOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>super();&#xD;
		this.habitacion = habitacion;&#xD;
		this.disponible = disponible;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYeOXuimEe-n_bccIa6R9w" name="toString" specification="_kLF5oOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYeOX-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;HabDisponible [habitacion=&quot; + habitacion + &quot;, disponible=&quot; + disponible + &quot;]&quot;;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYeOYOimEe-n_bccIa6R9w" name="hashCode" specification="_kLGgsuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYeOYeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return Objects.hash(habitacion);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYe1YOimEe-n_bccIa6R9w" name="equals" specification="_kXMb8OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYe1YeimEe-n_bccIa6R9w" name="obj" type="_kXJYoOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYe1YuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if (this == obj)&#xD;
			return true;&#xD;
		if (obj == null)&#xD;
			return false;&#xD;
		if (getClass() != obj.getClass())&#xD;
			return false;&#xD;
		HabDisponible other = (HabDisponible) obj;&#xD;
		return Objects.equals(habitacion, other.habitacion);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kLF5oOimEe-n_bccIa6R9w" name="toString" method="_kYeOXuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kLF5oeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kLGgsuimEe-n_bccIa6R9w" name="hashCode" method="_kYeOYOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kLGgs-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kWkJ0OimEe-n_bccIa6R9w" name="HabDisponible" method="_kYeOWuimEe-n_bccIa6R9w">
          <eAnnotations xmi:id="_kWkJ0-imEe-n_bccIa6R9w" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kWkJ1OimEe-n_bccIa6R9w" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_kWkJ0eimEe-n_bccIa6R9w" name="habitacion" type="_kLIV4OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWkJ0uimEe-n_bccIa6R9w" name="disponible">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWkJ1eimEe-n_bccIa6R9w" type="_kLFSkOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kXMb8OimEe-n_bccIa6R9w" name="equals" method="_kYe1YOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kXMb8eimEe-n_bccIa6R9w" name="obj" type="_kXJYoOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kXMb8uimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kLHu0OimEe-n_bccIa6R9w" name="HabReserva">
        <ownedComment xmi:id="_kYwiM-imEe-n_bccIa6R9w">
          <body>Objeto que guarda un tipo de habitacion y una fecha</body>
        </ownedComment>
        <ownedAttribute xmi:id="_kXmEkOimEe-n_bccIa6R9w" name="tipoHab" type="_kVqK4uimEe-n_bccIa6R9w"/>
        <ownedAttribute xmi:id="_kXmEkeimEe-n_bccIa6R9w" name="fecha" type="_kVkrUOimEe-n_bccIa6R9w" association="_kYxJQOimEe-n_bccIa6R9w"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYe1Y-imEe-n_bccIa6R9w" name="HabReserva" specification="_kXNqEOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYe1ZOimEe-n_bccIa6R9w" name="tipoHab" type="_kWClYOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYe1ZeimEe-n_bccIa6R9w" name="fecha" type="_kVkrUOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYe1ZuimEe-n_bccIa6R9w" type="_kLHu0OimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>super();&#xD;
		this.tipoHab = tipoHab;&#xD;
		this.fecha = fecha;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kXNqEOimEe-n_bccIa6R9w" name="HabReserva" method="_kYe1Y-imEe-n_bccIa6R9w">
          <eAnnotations xmi:id="_kXNqE-imEe-n_bccIa6R9w" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kXNqFOimEe-n_bccIa6R9w" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_kXNqEeimEe-n_bccIa6R9w" name="tipoHab" type="_kWClYOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kXNqEuimEe-n_bccIa6R9w" name="fecha" type="_kVkrUOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kXNqFeimEe-n_bccIa6R9w" type="_kLHu0OimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kLIV4OimEe-n_bccIa6R9w" name="Habitacion">
        <ownedComment xmi:id="_kYxJQuimEe-n_bccIa6R9w">
          <body>Objeto HABITACION</body>
        </ownedComment>
        <generalization xmi:id="_kWobQeimEe-n_bccIa6R9w" general="_kLT8EOimEe-n_bccIa6R9w"/>
        <ownedAttribute xmi:id="_kXmEkuimEe-n_bccIa6R9w" name="tHab" visibility="private" type="_kLI88OimEe-n_bccIa6R9w"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYe1Z-imEe-n_bccIa6R9w" name="getTipo" specification="_kLKLEuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYe1aOimEe-n_bccIa6R9w" type="_kLI88OimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>return tHab;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYfccOimEe-n_bccIa6R9w" name="setTipo" specification="_kWmmEeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYfcceimEe-n_bccIa6R9w" name="tipo" type="_kLI88OimEe-n_bccIa6R9w"/>
          <language>java</language>
          <body>this.tHab = tipo;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYfccuimEe-n_bccIa6R9w" name="Habitacion" specification="_kWnNIOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYfcc-imEe-n_bccIa6R9w" name="hotel" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYfcdOimEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYfcdeimEe-n_bccIa6R9w" name="capacidad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYfcduimEe-n_bccIa6R9w" name="tlfno">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYfcd-imEe-n_bccIa6R9w" name="pvp">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYfceOimEe-n_bccIa6R9w" name="tipo" type="_kLI88OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYfceeimEe-n_bccIa6R9w" type="_kLIV4OimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>super(num, capacidad, tlfno, pvp, hotel, Sala.tSala.Habitacion);&#xD;
		this.tHab = tipo;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYfceuimEe-n_bccIa6R9w" name="Habitacion" specification="_kWn0MOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYfce-imEe-n_bccIa6R9w" name="hotel" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYfcfOimEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYfcfeimEe-n_bccIa6R9w" name="capacidad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYfcfuimEe-n_bccIa6R9w" name="tlfno">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYfcf-imEe-n_bccIa6R9w" name="pvp">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYfcgOimEe-n_bccIa6R9w" name="tipo">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYfcgeimEe-n_bccIa6R9w" type="_kLIV4OimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>super(num, capacidad, tlfno, pvp, hotel, Sala.tSala.Habitacion);&#xD;
		this.tHab = selectorTipoHab(tipo);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYfcguimEe-n_bccIa6R9w" name="selectorTipoHab" specification="_kLKyIOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYfcg-imEe-n_bccIa6R9w" name="tipo">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYfchOimEe-n_bccIa6R9w" type="_kLI88OimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>ArrayList&lt;String> t = new ArrayList&lt;>();&#xD;
		t.add(&quot;individual&quot;);&#xD;
		t.add(&quot;doble&quot;);&#xD;
		t.add(&quot;familiar&quot;);&#xD;
		t.add(&quot;suite&quot;);&#xD;
		t.add(&quot;apartamento&quot;);&#xD;
		&#xD;
		// Comparto lo que me pasan con el array de arriba y lo transformo en el enumerado&#xD;
		switch (t.indexOf(tipo)) {&#xD;
		case 0:&#xD;
			return tipoHab.individual;&#xD;
		case 1:&#xD;
			return tipoHab.doble;&#xD;
		case 2:&#xD;
			return tipoHab.familiar;&#xD;
		case 3:&#xD;
			return tipoHab.suite;&#xD;
		case 4:&#xD;
			return tipoHab.apartamento;&#xD;
		default:&#xD;
			return tipoHab.desconocido;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYgDgOimEe-n_bccIa6R9w" name="selectorTipoHab" specification="_kLLZMOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYgDgeimEe-n_bccIa6R9w" name="capacidad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYgDguimEe-n_bccIa6R9w" type="_kLI88OimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>int opc = 0;&#xD;
		do {&#xD;
			&#xD;
			// Menu de seleccion&#xD;
			System.out.print(&#xD;
					&quot;¿Que tipo de habitacion es?\n&quot;&#xD;
					+ &quot;1. Individual\n&quot;&#xD;
					+ &quot;2. Doble\n&quot;&#xD;
					+ &quot;3. Familiar\n&quot;&#xD;
					+ &quot;4. Suite\n&quot;&#xD;
					+ &quot;5. Apartamento\n&quot;&#xD;
					+ &quot;Selecciona el tipo: &quot;&#xD;
			);&#xD;
			opc = Input.inOpc();&#xD;
			&#xD;
			// Actua segun la opcion, comprobando que el tamaño de la habitacion es correcto&#xD;
			switch (opc) {&#xD;
			case 1:&#xD;
				if (capacidad == 1) {&#xD;
					return tipoHab.individual;  &#xD;
				} else {&#xD;
					System.out.print(&quot;Esta habitacion es demasiado pequeña para esta opcion&quot;);&#xD;
					opc = 0;&#xD;
				}&#xD;
			case 2:&#xD;
				if (capacidad == 2) {&#xD;
					return tipoHab.doble;  &#xD;
				} else {&#xD;
					System.out.print(&quot;Esta habitacion es demasiado pequeña para esta opcion&quot;);&#xD;
					opc = 0;&#xD;
				}&#xD;
			case 3:&#xD;
				if (capacidad >= 3) {&#xD;
					return tipoHab.familiar;  &#xD;
				} else {&#xD;
					System.out.print(&quot;Esta habitacion es demasiado pequeña para esta opcion&quot;);&#xD;
					opc = 0;&#xD;
				}&#xD;
			case 4:&#xD;
				return tipoHab.suite;&#xD;
			case 5:&#xD;
				return tipoHab.apartamento;&#xD;
			default:&#xD;
				System.out.print(&quot;ERROR, elige una de las opciones disponibles&quot;);&#xD;
				opc = 0;&#xD;
			}&#xD;
		} while (opc == 0);&#xD;
		return null;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYgDg-imEe-n_bccIa6R9w" name="toString" specification="_kLLZMuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYgDhOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;Habitacion: &quot; + tHab.toString() + &quot;\n&quot; +&#xD;
				super.toString();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYgDheimEe-n_bccIa6R9w" name="tipoHabStringToEnum" specification="_kLMAROimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYgDhuimEe-n_bccIa6R9w" name="tipoDeHab">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYgDh-imEe-n_bccIa6R9w" type="_kLI88OimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>if (tipoDeHab.equalsIgnoreCase(&quot;individual&quot;)) {&#xD;
			return tipoHab.individual;&#xD;
		} else if (tipoDeHab.equalsIgnoreCase(&quot;doble&quot;)) {&#xD;
			return tipoHab.doble;&#xD;
		} else if (tipoDeHab.equalsIgnoreCase(&quot;familiar&quot;)) {&#xD;
			return tipoHab.familiar;&#xD;
		} else if (tipoDeHab.equalsIgnoreCase(&quot;suite&quot;)) {&#xD;
			return tipoHab.suite;&#xD;
		} else if (tipoDeHab.equalsIgnoreCase(&quot;apartamento&quot;)) {&#xD;
			return tipoHab.apartamento;&#xD;
		} else {&#xD;
			return null;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kLKLEuimEe-n_bccIa6R9w" name="getTipo" method="_kYe1Z-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWmmEOimEe-n_bccIa6R9w" type="_kLI88OimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kLKyIOimEe-n_bccIa6R9w" name="selectorTipoHab" visibility="private" method="_kYfcguimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYxJQ-imEe-n_bccIa6R9w">
            <body>Automaticamente te pone un tipo de habitacion&#xD;
	 * @param tipo&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kLKyIeimEe-n_bccIa6R9w" name="tipo">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWn0OuimEe-n_bccIa6R9w" type="_kLI88OimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kLLZMOimEe-n_bccIa6R9w" name="selectorTipoHab" visibility="private" method="_kYgDgOimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYxJROimEe-n_bccIa6R9w">
            <body>Esta funcion permite elergir el tipo de habitacion que es al construirse una habitacion</body>
          </ownedComment>
          <ownedParameter xmi:id="_kLLZMeimEe-n_bccIa6R9w" name="capacidad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWn0O-imEe-n_bccIa6R9w" type="_kLI88OimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kLLZMuimEe-n_bccIa6R9w" name="toString" method="_kYgDg-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kLMAQOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kLMAROimEe-n_bccIa6R9w" name="tipoHabStringToEnum" isStatic="true" method="_kYgDheimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYxJReimEe-n_bccIa6R9w">
            <body>Convierte tipoHab en string&#xD;
	 * @param tipoDeHab&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kLMAReimEe-n_bccIa6R9w" name="tipoDeHab">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWobQOimEe-n_bccIa6R9w" type="_kLI88OimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWmmEeimEe-n_bccIa6R9w" name="setTipo" method="_kYfccOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWmmEuimEe-n_bccIa6R9w" name="tipo" type="_kLI88OimEe-n_bccIa6R9w"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWnNIOimEe-n_bccIa6R9w" name="Habitacion" method="_kYfccuimEe-n_bccIa6R9w">
          <eAnnotations xmi:id="_kWnNJ-imEe-n_bccIa6R9w" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kWnNKOimEe-n_bccIa6R9w" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_kWnNIeimEe-n_bccIa6R9w" name="hotel" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWnNIuimEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWnNI-imEe-n_bccIa6R9w" name="capacidad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWnNJOimEe-n_bccIa6R9w" name="tlfno">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWnNJeimEe-n_bccIa6R9w" name="pvp">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWnNJuimEe-n_bccIa6R9w" name="tipo" type="_kLI88OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWnNKeimEe-n_bccIa6R9w" type="_kLIV4OimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWn0MOimEe-n_bccIa6R9w" name="Habitacion" method="_kYfceuimEe-n_bccIa6R9w">
          <eAnnotations xmi:id="_kWn0N-imEe-n_bccIa6R9w" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kWn0OOimEe-n_bccIa6R9w" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_kWn0MeimEe-n_bccIa6R9w" name="hotel" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWn0MuimEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWn0M-imEe-n_bccIa6R9w" name="capacidad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWn0NOimEe-n_bccIa6R9w" name="tlfno">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWn0NeimEe-n_bccIa6R9w" name="pvp">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWn0NuimEe-n_bccIa6R9w" name="tipo">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWn0OeimEe-n_bccIa6R9w" type="_kLIV4OimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_kLI88OimEe-n_bccIa6R9w" name="tipoHab">
          <eAnnotations xmi:id="_kLI88eimEe-n_bccIa6R9w" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kLI88uimEe-n_bccIa6R9w" key="static"/>
          </eAnnotations>
          <ownedLiteral xmi:id="_kLJkAeimEe-n_bccIa6R9w" name="individual"/>
          <ownedLiteral xmi:id="_kLJkAuimEe-n_bccIa6R9w" name="doble"/>
          <ownedLiteral xmi:id="_kLJkA-imEe-n_bccIa6R9w" name="familiar"/>
          <ownedLiteral xmi:id="_kLJkBOimEe-n_bccIa6R9w" name="suite"/>
          <ownedLiteral xmi:id="_kLKLEOimEe-n_bccIa6R9w" name="apartamento"/>
          <ownedLiteral xmi:id="_kLKLEeimEe-n_bccIa6R9w" name="desconocido"/>
        </nestedClassifier>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kLN1cOimEe-n_bccIa6R9w" name="Hotel">
        <ownedComment xmi:id="_kYxwUOimEe-n_bccIa6R9w">
          <body>Objeto HOTEL</body>
        </ownedComment>
        <ownedAttribute xmi:id="_kXnSsOimEe-n_bccIa6R9w" name="ID">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kXnSseimEe-n_bccIa6R9w" name="nombre">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kXnSsuimEe-n_bccIa6R9w" name="ciudad">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kXnSs-imEe-n_bccIa6R9w" name="dir">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kXnStOimEe-n_bccIa6R9w" name="tlfno">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kXn5wOimEe-n_bccIa6R9w" name="email">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYgqkOimEe-n_bccIa6R9w" name="Hotel" specification="_kLPDkOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYgqkeimEe-n_bccIa6R9w" name="ID">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYgqkuimEe-n_bccIa6R9w" name="nombre">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYgqk-imEe-n_bccIa6R9w" name="ciudad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYgqlOimEe-n_bccIa6R9w" name="dir">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYgqleimEe-n_bccIa6R9w" name="tlfno">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYgqluimEe-n_bccIa6R9w" name="email">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYgql-imEe-n_bccIa6R9w" type="_kLN1cOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>this.ID = ID;&#xD;
     this.nombre = nombre;&#xD;
     this.ciudad = ciudad;&#xD;
     this.dir = dir;&#xD;
     this.tlfno = tlfno;&#xD;
     this.email = email;&#xD;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYgqmOimEe-n_bccIa6R9w" name="toString" specification="_kLPqouimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYgqmeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;--Hotel--\n&quot;&#xD;
				+ &quot;ID: &quot; + ID + &quot;\n&quot;&#xD;
				+ &quot;Nombre: &quot; + nombre + &quot;\n&quot;&#xD;
				+ &quot;Ciudad: &quot; + ciudad + &quot;\n&quot;&#xD;
				+ &quot;Direccion:&quot; + dir + &quot;\n&quot;&#xD;
				+ &quot;Telefono: &quot; + tlfno + &quot;\n&quot;&#xD;
				+ &quot;Email=&quot; + email + &quot;\n&quot;&#xD;
				+ &quot;------------------------------&quot;;&#xD;
 &#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kLPDkOimEe-n_bccIa6R9w" name="Hotel" method="_kYgqkOimEe-n_bccIa6R9w">
          <eAnnotations xmi:id="_kLPDl-imEe-n_bccIa6R9w" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kLPqoOimEe-n_bccIa6R9w" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_kLPDkeimEe-n_bccIa6R9w" name="ID">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kLPDkuimEe-n_bccIa6R9w" name="nombre">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kLPDk-imEe-n_bccIa6R9w" name="ciudad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kLPDlOimEe-n_bccIa6R9w" name="dir">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kLPDleimEe-n_bccIa6R9w" name="tlfno">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kLPDluimEe-n_bccIa6R9w" name="email">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kLPqoeimEe-n_bccIa6R9w" type="_kLN1cOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kLPqouimEe-n_bccIa6R9w" name="toString" method="_kYgqmOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kLPqo-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kLQ4wOimEe-n_bccIa6R9w" name="Reserva">
        <ownedComment xmi:id="_kYxwUeimEe-n_bccIa6R9w">
          <body>Objeto RESERVA</body>
        </ownedComment>
        <ownedAttribute xmi:id="_kXn5weimEe-n_bccIa6R9w" name="ID">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kXn5wuimEe-n_bccIa6R9w" name="fecIni" type="_kVkrUOimEe-n_bccIa6R9w" association="_kYxwUuimEe-n_bccIa6R9w"/>
        <ownedAttribute xmi:id="_kXog0OimEe-n_bccIa6R9w" name="fecFin" type="_kVkrUOimEe-n_bccIa6R9w" association="_kYxwVOimEe-n_bccIa6R9w"/>
        <ownedAttribute xmi:id="_kXog0eimEe-n_bccIa6R9w" name="cliente" type="_kKqb0uimEe-n_bccIa6R9w" association="_kYyXYeimEe-n_bccIa6R9w"/>
        <ownedAttribute xmi:id="_kXog0uimEe-n_bccIa6R9w" name="sala" type="_kLT8EOimEe-n_bccIa6R9w" association="_kYyXY-imEe-n_bccIa6R9w"/>
        <ownedAttribute xmi:id="_kXog0-imEe-n_bccIa6R9w" name="precioTotal">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kXog1OimEe-n_bccIa6R9w" name="bPagada" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYhRoOimEe-n_bccIa6R9w" name="Reserva" specification="_kXPfQOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYhRoeimEe-n_bccIa6R9w" name="iD">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYhRouimEe-n_bccIa6R9w" name="fecIni" type="_kVkrUOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYhRo-imEe-n_bccIa6R9w" name="fecFin" type="_kVkrUOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYhRpOimEe-n_bccIa6R9w" name="cliente" type="_kKqb0uimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYhRpeimEe-n_bccIa6R9w" name="sala" type="_kLT8EOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYhRpuimEe-n_bccIa6R9w" name="precioTotal">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYhRp-imEe-n_bccIa6R9w" type="_kLQ4wOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>super();&#xD;
		this.ID = iD;&#xD;
		this.fecIni = fecIni;&#xD;
		this.fecFin = fecFin;&#xD;
		this.cliente = cliente;&#xD;
		this.sala = sala;&#xD;
		this.precioTotal = precioTotal;&#xD;
		this.bPagada = false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYhRqOimEe-n_bccIa6R9w" name="isbPagada" specification="_kLSG4OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYhRqeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return bPagada;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYhRquimEe-n_bccIa6R9w" name="setbPagada" specification="_kLSG4uimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYhRq-imEe-n_bccIa6R9w" name="bPagada">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>this.bPagada = bPagada;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYhRrOimEe-n_bccIa6R9w" name="toString" specification="_kLSG5OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYhRreimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>RepoHabitacion rH = new RepoHabitacion();&#xD;
		Habitacion h = rH.get(sala.getHotel().getID(), sala.getNum());&#xD;
		return &quot;ID: &quot; + ID + &quot;\n&quot; +&#xD;
				&quot;Desde el &quot; + fecIni + &quot; hasta el &quot; + fecFin + &quot;\n&quot; + &#xD;
				&quot;Cliente: &quot; + cliente.getNombre() + &quot; &quot; + cliente.getApellidos() + &quot;\n&quot; + &#xD;
				sala.getTSala() + &quot; &quot; + h.getTipo() + &quot;\n&quot; +&#xD;
				&quot;Precio: &quot; + precioTotal + &quot;€&quot;;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kLSG4OimEe-n_bccIa6R9w" name="isbPagada" method="_kYhRqOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kLSG4eimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kLSG4uimEe-n_bccIa6R9w" name="setbPagada" method="_kYhRquimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kLSG4-imEe-n_bccIa6R9w" name="bPagada">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kLSG5OimEe-n_bccIa6R9w" name="toString" method="_kYhRrOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kLSG5eimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kXPfQOimEe-n_bccIa6R9w" name="Reserva" method="_kYhRoOimEe-n_bccIa6R9w">
          <eAnnotations xmi:id="_kXQGVeimEe-n_bccIa6R9w" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kXQGVuimEe-n_bccIa6R9w" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_kXPfQeimEe-n_bccIa6R9w" name="iD">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kXQGUOimEe-n_bccIa6R9w" name="fecIni" type="_kVkrUOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kXQGUeimEe-n_bccIa6R9w" name="fecFin" type="_kVkrUOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kXQGUuimEe-n_bccIa6R9w" name="cliente" type="_kKqb0uimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kXQGU-imEe-n_bccIa6R9w" name="sala" type="_kLT8EOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kXQGVOimEe-n_bccIa6R9w" name="precioTotal">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kXQGV-imEe-n_bccIa6R9w" type="_kLQ4wOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kLT8EOimEe-n_bccIa6R9w" name="Sala" visibility="public">
        <ownedComment xmi:id="_kYyXZeimEe-n_bccIa6R9w">
          <body>Objeto SALA</body>
        </ownedComment>
        <ownedAttribute xmi:id="_kXpu8OimEe-n_bccIa6R9w" name="num" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kXpu8uimEe-n_bccIa6R9w" name="capacidad" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kXqWAeimEe-n_bccIa6R9w" name="tlfno" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kXqWA-imEe-n_bccIa6R9w" name="pvp" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_kXq9EeimEe-n_bccIa6R9w" name="hotel" visibility="protected" type="_kLN1cOimEe-n_bccIa6R9w" association="_kZErQ-imEe-n_bccIa6R9w"/>
        <ownedAttribute xmi:id="_kXq9E-imEe-n_bccIa6R9w" name="tipo" visibility="private" type="_kLUjIOimEe-n_bccIa6R9w"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYh4sOimEe-n_bccIa6R9w" name="getPvp" specification="_kLVKMOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYh4seimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return pvp;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYh4suimEe-n_bccIa6R9w" name="setPvp" specification="_kLVxQOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYh4s-imEe-n_bccIa6R9w" name="pvp">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>this.pvp = pvp;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYh4tOimEe-n_bccIa6R9w" name="getNum" specification="_kLVxQuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYh4teimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return num;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYh4tuimEe-n_bccIa6R9w" name="setNum" specification="_kLVxROimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYh4t-imEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.num = num;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYifwOimEe-n_bccIa6R9w" name="getCapacidad" specification="_kLVxRuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYifweimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return capacidad;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYifwuimEe-n_bccIa6R9w" name="setCapacidad" specification="_kLWYUOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYifw-imEe-n_bccIa6R9w" name="capacidad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.capacidad = capacidad;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYifxOimEe-n_bccIa6R9w" name="getTlfno" specification="_kLWYUuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYifxeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return tlfno;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYifxuimEe-n_bccIa6R9w" name="setTlfno" specification="_kLWYVOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYifx-imEe-n_bccIa6R9w" name="tlfno">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>this.tlfno = tlfno;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYifyOimEe-n_bccIa6R9w" name="getHotel" specification="_kLW_YOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYifyeimEe-n_bccIa6R9w" type="_kLN1cOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>return hotel;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYifyuimEe-n_bccIa6R9w" name="setHotel" specification="_kWsFoeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYify-imEe-n_bccIa6R9w" name="hotel" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <language>java</language>
          <body>this.hotel = hotel;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYifzOimEe-n_bccIa6R9w" name="getTSala" specification="_kLW_YeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYifzeimEe-n_bccIa6R9w" type="_kLUjIOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>return tipo;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYifzuimEe-n_bccIa6R9w" name="setTSala" specification="_kWsFpOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYifz-imEe-n_bccIa6R9w" name="tipo" type="_kLUjIOimEe-n_bccIa6R9w"/>
          <language>java</language>
          <body>this.tipo = tipo;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYjG0OimEe-n_bccIa6R9w" name="Sala" specification="_kWsssOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYjG0eimEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYjG0uimEe-n_bccIa6R9w" name="capacidad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYjG0-imEe-n_bccIa6R9w" name="tlfno">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYjG1OimEe-n_bccIa6R9w" name="pvp">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYjG1eimEe-n_bccIa6R9w" name="hotel" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYjG1uimEe-n_bccIa6R9w" type="_kLT8EOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>super();&#xD;
		this.num = num;&#xD;
		this.capacidad = capacidad;&#xD;
		this.tlfno = tlfno;&#xD;
		this.pvp = pvp;&#xD;
		this.hotel = hotel;&#xD;
		printTipo();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYjG1-imEe-n_bccIa6R9w" name="Sala" specification="_kWtTwOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYjG2OimEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYjG2eimEe-n_bccIa6R9w" name="capacidad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYjG2uimEe-n_bccIa6R9w" name="tlfno">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYjG2-imEe-n_bccIa6R9w" name="pvp">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYjG3OimEe-n_bccIa6R9w" name="hotel" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYjG3eimEe-n_bccIa6R9w" name="tipo" type="_kLUjIOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYjG3uimEe-n_bccIa6R9w" type="_kLT8EOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>super();&#xD;
		this.num = num;&#xD;
		this.capacidad = capacidad;&#xD;
		this.tlfno = tlfno;&#xD;
		this.pvp = pvp;&#xD;
		this.hotel = hotel;&#xD;
		this.tipo = tipo;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYjG3-imEe-n_bccIa6R9w" name="Sala" specification="_kWt60-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYjG4OimEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYjG4eimEe-n_bccIa6R9w" name="capacidad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYjG4uimEe-n_bccIa6R9w" name="tlfno">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYjG4-imEe-n_bccIa6R9w" name="pvp">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYjG5OimEe-n_bccIa6R9w" name="hotel" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYjG5eimEe-n_bccIa6R9w" name="tipo">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYjG5uimEe-n_bccIa6R9w" type="_kLT8EOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>super();&#xD;
		this.num = num;&#xD;
		this.capacidad = capacidad;&#xD;
		this.tlfno = tlfno;&#xD;
		this.pvp = pvp;&#xD;
		this.hotel = hotel;&#xD;
		this.tipo = tSalaStringToTSala(tipo);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYjG5-imEe-n_bccIa6R9w" name="toString" specification="_kLXmcOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYjG6OimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;Capacidad: &quot; + capacidad + &quot;\n&quot; +&#xD;
				&quot;En el &quot; + hotel.getNombre() + &quot;\n&quot; +&#xD;
				hotel.getCiudad() + &quot; &quot; + hotel.getDir() + &quot;\n&quot; +&#xD;
				&quot;Email: &quot; + hotel.getEmail() + &quot;\n&quot; +&#xD;
				&quot;Telefono: &quot; + hotel.getTlfno();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYjt4OimEe-n_bccIa6R9w" name="printTipo" specification="_kLYNg-imEe-n_bccIa6R9w">
          <language>java</language>
          <body>// Menu de seleccion&#xD;
		System.out.print(&#xD;
				&quot;¿Que tipo de sala es?\n&quot;&#xD;
				+ &quot;1. Habitacion\n&quot;&#xD;
				+ &quot;2. Sala de reuniones\n&quot;&#xD;
				+ &quot;3. Espacio comun\n&quot;&#xD;
				+ &quot;Selecciona el tipo: &quot;&#xD;
		);&#xD;
		selectorTipo(Input.inOpc());&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYjt4eimEe-n_bccIa6R9w" name="selectorTipo" specification="_kLY0kOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYjt4uimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>switch (opc) {&#xD;
		case 1:&#xD;
			this.tipo = tSala.Habitacion;&#xD;
		case 2:&#xD;
			this.tipo = tSala.SalaReuniones;&#xD;
		case 3:&#xD;
			this.tipo = tSala.EspaciosComunes;&#xD;
		default:&#xD;
			this.tipo = null;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYjt4-imEe-n_bccIa6R9w" name="tSalaStringToTSala" specification="_kLY0kuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYjt5OimEe-n_bccIa6R9w" name="tipo">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYjt5eimEe-n_bccIa6R9w" type="_kLUjIOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>ArrayList&lt;String> t = new ArrayList&lt;>();&#xD;
		t.add(&quot;Habitacion&quot;);&#xD;
		t.add(&quot;SalaReuniones&quot;);&#xD;
		t.add(&quot;EspaciosComunes&quot;);&#xD;
		&#xD;
		// Comparo lo que me pasan con el array de arriba y lo transformo en el enumerado&#xD;
		switch (t.indexOf(tipo)) {&#xD;
			case 0: return tSala.Habitacion;&#xD;
			case 1:	return tSala.SalaReuniones;&#xD;
			case 2:	return tSala.EspaciosComunes;&#xD;
			default: return null;&#xD;
		}&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kLVKMOimEe-n_bccIa6R9w" name="getPvp" method="_kYh4sOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kLVKMeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kLVxQOimEe-n_bccIa6R9w" name="setPvp" method="_kYh4suimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kLVxQeimEe-n_bccIa6R9w" name="pvp">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kLVxQuimEe-n_bccIa6R9w" name="getNum" method="_kYh4tOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kLVxQ-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kLVxROimEe-n_bccIa6R9w" name="setNum" method="_kYh4tuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kLVxReimEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kLVxRuimEe-n_bccIa6R9w" name="getCapacidad" method="_kYifwOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kLVxR-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kLWYUOimEe-n_bccIa6R9w" name="setCapacidad" method="_kYifwuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kLWYUeimEe-n_bccIa6R9w" name="capacidad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kLWYUuimEe-n_bccIa6R9w" name="getTlfno" method="_kYifxOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kLWYU-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kLWYVOimEe-n_bccIa6R9w" name="setTlfno" method="_kYifxuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kLWYVeimEe-n_bccIa6R9w" name="tlfno">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kLW_YOimEe-n_bccIa6R9w" name="getHotel" method="_kYifyOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWsFoOimEe-n_bccIa6R9w" type="_kLN1cOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kLW_YeimEe-n_bccIa6R9w" name="getTSala" method="_kYifzOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWsFo-imEe-n_bccIa6R9w" type="_kLUjIOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kLXmcOimEe-n_bccIa6R9w" name="toString" method="_kYjG5-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kLXmceimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kLYNg-imEe-n_bccIa6R9w" name="printTipo" method="_kYjt4OimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYy-cOimEe-n_bccIa6R9w">
            <body>Menu de selecion de tipo de sala</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kLY0kOimEe-n_bccIa6R9w" name="selectorTipo" method="_kYjt4eimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYy-ceimEe-n_bccIa6R9w">
            <body>Logica de seleccion de sala&#xD;
	 * @param opc</body>
          </ownedComment>
          <ownedParameter xmi:id="_kLY0keimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kLY0kuimEe-n_bccIa6R9w" name="tSalaStringToTSala" visibility="private" method="_kYjt4-imEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYy-cuimEe-n_bccIa6R9w">
            <body>Convierte un string en un TSala&#xD;
	 * @param tipo&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kLY0k-imEe-n_bccIa6R9w" name="tipo">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWuh4-imEe-n_bccIa6R9w" type="_kLUjIOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWsFoeimEe-n_bccIa6R9w" name="setHotel" method="_kYifyuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWsFouimEe-n_bccIa6R9w" name="hotel" type="_kLN1cOimEe-n_bccIa6R9w"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWsFpOimEe-n_bccIa6R9w" name="setTSala" method="_kYifzuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWsFpeimEe-n_bccIa6R9w" name="tipo" type="_kLUjIOimEe-n_bccIa6R9w"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWsssOimEe-n_bccIa6R9w" name="Sala" method="_kYjG0OimEe-n_bccIa6R9w">
          <eAnnotations xmi:id="_kWsstuimEe-n_bccIa6R9w" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kWsst-imEe-n_bccIa6R9w" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_kWssseimEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWsssuimEe-n_bccIa6R9w" name="capacidad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWsss-imEe-n_bccIa6R9w" name="tlfno">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWsstOimEe-n_bccIa6R9w" name="pvp">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWssteimEe-n_bccIa6R9w" name="hotel" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWssuOimEe-n_bccIa6R9w" type="_kLT8EOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWtTwOimEe-n_bccIa6R9w" name="Sala" method="_kYjG1-imEe-n_bccIa6R9w">
          <eAnnotations xmi:id="_kWt60OimEe-n_bccIa6R9w" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kWt60eimEe-n_bccIa6R9w" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_kWtTweimEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWtTwuimEe-n_bccIa6R9w" name="capacidad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWtTw-imEe-n_bccIa6R9w" name="tlfno">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWtTxOimEe-n_bccIa6R9w" name="pvp">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWtTxeimEe-n_bccIa6R9w" name="hotel" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWtTxuimEe-n_bccIa6R9w" name="tipo" type="_kLUjIOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWt60uimEe-n_bccIa6R9w" type="_kLT8EOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWt60-imEe-n_bccIa6R9w" name="Sala" method="_kYjG3-imEe-n_bccIa6R9w">
          <eAnnotations xmi:id="_kWuh4OimEe-n_bccIa6R9w" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kWuh4eimEe-n_bccIa6R9w" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_kWt61OimEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWt61eimEe-n_bccIa6R9w" name="capacidad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWt61uimEe-n_bccIa6R9w" name="tlfno">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWt61-imEe-n_bccIa6R9w" name="pvp">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWt62OimEe-n_bccIa6R9w" name="hotel" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWt62eimEe-n_bccIa6R9w" name="tipo">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWuh4uimEe-n_bccIa6R9w" type="_kLT8EOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_kLUjIOimEe-n_bccIa6R9w" name="tSala">
          <ownedLiteral xmi:id="_kLUjIuimEe-n_bccIa6R9w" name="Habitacion"/>
          <ownedLiteral xmi:id="_kLUjI-imEe-n_bccIa6R9w" name="SalaReuniones"/>
          <ownedLiteral xmi:id="_kLUjJOimEe-n_bccIa6R9w" name="EspaciosComunes"/>
        </nestedClassifier>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kLbQ0OimEe-n_bccIa6R9w" name="SalaReunion">
        <ownedComment xmi:id="_kYy-c-imEe-n_bccIa6R9w">
          <body>Objeto sala de reuniones</body>
        </ownedComment>
        <generalization xmi:id="_kWyMQOimEe-n_bccIa6R9w" general="_kLT8EOimEe-n_bccIa6R9w"/>
        <ownedAttribute xmi:id="_kXsLMOimEe-n_bccIa6R9w" name="servicios">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYkU8OimEe-n_bccIa6R9w" name="SalaReunion" specification="_kWw-IOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYkU8eimEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYkU8uimEe-n_bccIa6R9w" name="capacidad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYkU8-imEe-n_bccIa6R9w" name="tlfno">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYkU9OimEe-n_bccIa6R9w" name="pvp">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYkU9eimEe-n_bccIa6R9w" name="hotel" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYkU9uimEe-n_bccIa6R9w" name="servicios">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYkU9-imEe-n_bccIa6R9w" type="_kLbQ0OimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>super(num, capacidad, tlfno, pvp, hotel, Sala.tSala.SalaReuniones);&#xD;
		this.servicios = servicios;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kWw-IOimEe-n_bccIa6R9w" name="SalaReunion" method="_kYkU8OimEe-n_bccIa6R9w">
          <eAnnotations xmi:id="_kWxlNuimEe-n_bccIa6R9w" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kWxlN-imEe-n_bccIa6R9w" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_kWxlMOimEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWxlMeimEe-n_bccIa6R9w" name="capacidad">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWxlMuimEe-n_bccIa6R9w" name="tlfno">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWxlM-imEe-n_bccIa6R9w" name="pvp">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWxlNOimEe-n_bccIa6R9w" name="hotel" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWxlNeimEe-n_bccIa6R9w" name="servicios">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWxlOOimEe-n_bccIa6R9w" type="_kLbQ0OimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kYutAOimEe-n_bccIa6R9w" name="" memberEnd="_kXjoU-imEe-n_bccIa6R9w _kYutAeimEe-n_bccIa6R9w">
        <ownedEnd xmi:id="_kYutAeimEe-n_bccIa6R9w" name="" type="_kKqb0uimEe-n_bccIa6R9w" association="_kYutAOimEe-n_bccIa6R9w"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kYwiMeimEe-n_bccIa6R9w" name="" memberEnd="_kXldgeimEe-n_bccIa6R9w _kYwiMuimEe-n_bccIa6R9w">
        <ownedEnd xmi:id="_kYwiMuimEe-n_bccIa6R9w" name="" type="_kLFSkOimEe-n_bccIa6R9w" association="_kYwiMeimEe-n_bccIa6R9w"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kYxJQOimEe-n_bccIa6R9w" name="" memberEnd="_kXmEkeimEe-n_bccIa6R9w _kYxJQeimEe-n_bccIa6R9w">
        <ownedEnd xmi:id="_kYxJQeimEe-n_bccIa6R9w" name="" type="_kLHu0OimEe-n_bccIa6R9w" association="_kYxJQOimEe-n_bccIa6R9w"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kYxwUuimEe-n_bccIa6R9w" name="" memberEnd="_kXn5wuimEe-n_bccIa6R9w _kYxwU-imEe-n_bccIa6R9w">
        <ownedEnd xmi:id="_kYxwU-imEe-n_bccIa6R9w" name="" type="_kLQ4wOimEe-n_bccIa6R9w" association="_kYxwUuimEe-n_bccIa6R9w"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kYxwVOimEe-n_bccIa6R9w" name="" memberEnd="_kXog0OimEe-n_bccIa6R9w _kYyXYOimEe-n_bccIa6R9w">
        <ownedEnd xmi:id="_kYyXYOimEe-n_bccIa6R9w" name="" type="_kLQ4wOimEe-n_bccIa6R9w" association="_kYxwVOimEe-n_bccIa6R9w"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kYyXYeimEe-n_bccIa6R9w" name="" memberEnd="_kXog0eimEe-n_bccIa6R9w _kYyXYuimEe-n_bccIa6R9w">
        <ownedEnd xmi:id="_kYyXYuimEe-n_bccIa6R9w" name="" type="_kLQ4wOimEe-n_bccIa6R9w" association="_kYyXYeimEe-n_bccIa6R9w"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kYyXY-imEe-n_bccIa6R9w" name="" memberEnd="_kXog0uimEe-n_bccIa6R9w _kYyXZOimEe-n_bccIa6R9w">
        <ownedEnd xmi:id="_kYyXZOimEe-n_bccIa6R9w" name="" type="_kLQ4wOimEe-n_bccIa6R9w" association="_kYyXY-imEe-n_bccIa6R9w"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kZErQ-imEe-n_bccIa6R9w" name="" memberEnd="_kZErROimEe-n_bccIa6R9w _kXq9EeimEe-n_bccIa6R9w">
        <ownedEnd xmi:id="_kZErROimEe-n_bccIa6R9w" name="" type="_kLT8EOimEe-n_bccIa6R9w" association="_kZErQ-imEe-n_bccIa6R9w"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_kG7LUOimEe-n_bccIa6R9w" name="Cliente">
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_kVpj0OimEe-n_bccIa6R9w" name="tarifas"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_kG8ZcOimEe-n_bccIa6R9w" name="Habitacion">
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_kVqK4uimEe-n_bccIa6R9w" name="tipoHab"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_kHAD0OimEe-n_bccIa6R9w" name="auxi">
      <packagedElement xmi:type="uml:Class" xmi:id="_kI0owOimEe-n_bccIa6R9w" name="Input">
        <ownedComment xmi:id="_kYn_UOimEe-n_bccIa6R9w">
          <body>Clase para recoger los inputs del usuario por consola y gestionar &#xD;
la validacion de los mismos.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_kXXbEOimEe-n_bccIa6R9w" name="scn" isStatic="true" type="_kVnHkOimEe-n_bccIa6R9w" association="_kZAZ0OimEe-n_bccIa6R9w">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_kXYCIOimEe-n_bccIa6R9w" value="new Scanner(System.in)"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kX8p4OimEe-n_bccIa6R9w" name="inNombre" specification="_kI6IUOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kX8p4eimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&quot;Nombre: &quot;);&#xD;
     String nom = scn.nextLine();&#xD;
     if (soloNumeros(nom)) {&#xD;
     	System.out.print(&quot;\n>>> ERROR: introduzca un nombre sin numeros &lt;&lt;&lt;\n&quot;);&#xD;
     	return inNombre();&#xD;
     } else {&#xD;
     	return nom;&#xD;
     }&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYDXkOimEe-n_bccIa6R9w" name="inPassLibre" specification="_kI79gOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYDXkeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&quot;Password: &quot;);&#xD;
		return scn.nextLine();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYDXkuimEe-n_bccIa6R9w" name="inApellido" specification="_kI8kkOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYDXk-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&quot;Apellido: &quot;);&#xD;
     String ape = scn.nextLine();&#xD;
     if (soloNumeros(ape)) {&#xD;
     	System.out.print(&quot;\n>>> ERROR: introduzca unos apellidos sin numeros &lt;&lt;&lt;\n&quot;);&#xD;
     	return inApellido();&#xD;
     } else {&#xD;
     	return ape;&#xD;
     }&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYDXlOimEe-n_bccIa6R9w" name="inDNI" specification="_kI8kkuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYDXleimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String DNI = &quot;&quot;;&#xD;
		do {	&#xD;
			System.out.print(&quot;DNI: &quot;);&#xD;
			DNI = scn.nextLine();&#xD;
			if (Cliente.verificacionDNI(DNI)) {&#xD;
				return DNI;&#xD;
			} else {&#xD;
				DNI = &quot;&quot;;&#xD;
				System.out.println(&quot;ERROR: DNI no valido&quot;);&#xD;
			}&#xD;
		} while (DNI.equals(&quot;&quot;));&#xD;
		return DNI;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYDXluimEe-n_bccIa6R9w" name="inEmail" specification="_kI9LoeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYDXl-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&quot;Correo Electronico: &quot;);&#xD;
		String email = scn.nextLine();&#xD;
		String[] emailSplit = email.split(&quot;@&quot;);&#xD;
		if (emailSplit.length != 2) {&#xD;
			System.out.print(&quot;\n\n>>> Introduce un correo electronico valido &lt;&lt;&lt;\n\n&quot;);&#xD;
			inEmail();&#xD;
		} else if (!emailSplit[1].contains(&quot;.&quot;)) {&#xD;
			System.out.print(&quot;\n\n>>> Introduce un correo electronico valido &lt;&lt;&lt;\n\n&quot;);&#xD;
			inEmail();&#xD;
		}&#xD;
		return email;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYD-oOimEe-n_bccIa6R9w" name="inTelefono" specification="_kI9ysOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYD-oeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&quot;Telefono: &quot;);&#xD;
		return scn.nextLine();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYD-ouimEe-n_bccIa6R9w" name="inBTrabajador" specification="_kI9ysuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYD-o-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&quot;¿Es trabajador &quot;);&#xD;
		return inYesNo();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYD-pOimEe-n_bccIa6R9w" name="inTarifa" specification="_kI-ZweimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYD-peimEe-n_bccIa6R9w" type="_kVpj0OimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>System.out.println(&quot;|Tarifas disponibles |&quot;);&#xD;
		System.out.println(&quot;1. estandar&quot;);&#xD;
		System.out.println(&quot;2. descuento trabajador&quot;);&#xD;
		System.out.println(&quot;3. descuento 5 euros&quot;);&#xD;
		System.out.println(&quot;4. descuento 10 euros&quot;);&#xD;
		System.out.println(&quot;5. descuento 5%&quot;);&#xD;
		System.out.println(&quot;6. descuento 10%&quot;);&#xD;
		System.out.println(&quot;7. descuento por nuevo cliente&quot;);&#xD;
		System.out.print(&quot;Elige la tarifa: &quot;);&#xD;
		int opc = scn.nextInt();&#xD;
		scn.nextLine();&#xD;
		&#xD;
		switch (opc) {&#xD;
		case 1:&#xD;
			return Cliente.tarifas.estandar;&#xD;
		case 2:&#xD;
			return Cliente.tarifas.dctoTrabajador;&#xD;
		case 3:&#xD;
			return Cliente.tarifas.dcto5;&#xD;
		case 4:&#xD;
			return Cliente.tarifas.dcto10;&#xD;
		case 5:&#xD;
			return Cliente.tarifas.dcto5por;&#xD;
		case 6:&#xD;
			return Cliente.tarifas.dcto10por;&#xD;
		case 7:&#xD;
			return Cliente.tarifas.dctoNewCliente;&#xD;
		default:&#xD;
			return Cliente.tarifas.estandar;&#xD;
		}&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYD-puimEe-n_bccIa6R9w" name="inCiudad" specification="_kI-ZwuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYD-p-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&quot;Ciudad: &quot;);&#xD;
		return scn.nextLine();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYD-qOimEe-n_bccIa6R9w" name="inDir" specification="_kI_A0OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYD-qeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&quot;Dirección: &quot;);&#xD;
		return scn.nextLine();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYD-quimEe-n_bccIa6R9w" name="inCapacidad" specification="_kI_n4OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYD-q-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&quot;Capacidad (en personas): &quot;);&#xD;
		String aforoT = scn.nextLine();&#xD;
		int aforo = Integer.parseInt(aforoT);&#xD;
		return aforo;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYD-rOimEe-n_bccIa6R9w" name="inTipoHab" specification="_kI_n4uimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYD-reimEe-n_bccIa6R9w" type="_kVqK4uimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>System.out.println(&quot;Tipos de habitacion disponibles &quot;);&#xD;
		System.out.println(&quot;1. individual&quot;);&#xD;
		System.out.println(&quot;2. doble&quot;);&#xD;
		System.out.println(&quot;3. familiar&quot;);&#xD;
		System.out.println(&quot;4. suite&quot;);&#xD;
		System.out.println(&quot;5. apartamento&quot;);&#xD;
		System.out.print(&quot;Elige el tipo de habitacion: &quot;);&#xD;
		int opc = scn.nextInt();&#xD;
		scn.nextLine();&#xD;
		&#xD;
		switch (opc) {&#xD;
		case 1:&#xD;
			return Habitacion.tipoHab.individual;&#xD;
		case 2:&#xD;
			return Habitacion.tipoHab.doble;&#xD;
		case 3:&#xD;
			return Habitacion.tipoHab.familiar;&#xD;
		case 4:&#xD;
			return Habitacion.tipoHab.suite;&#xD;
		case 5:&#xD;
			return Habitacion.tipoHab.apartamento;&#xD;
		default:&#xD;
			return Habitacion.tipoHab.desconocido;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYElsOimEe-n_bccIa6R9w" name="inTipoComun" specification="_kI_n4-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYElseimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&quot;Tipo de espacio comun: &quot;);&#xD;
		return scn.nextLine();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYElsuimEe-n_bccIa6R9w" name="inServicios" specification="_kJAO8eimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYEls-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&quot;Servicios en la sala de reunion: &quot;);&#xD;
		return scn.nextLine();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYEltOimEe-n_bccIa6R9w" name="inPass" specification="_kJA2AOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYElteimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String pass = &quot;&quot;;&#xD;
		do {&#xD;
			System.out.print(&quot;Contraseña: &quot;);&#xD;
			Console console = System.console();&#xD;
			if (console == null) {&#xD;
				pass = scn.nextLine();&#xD;
			} else {&#xD;
				pass = new String(console.readPassword());&#xD;
				// pass = readPassword();&#xD;
			}&#xD;
			if (Cliente.verificacionPass(pass)) {&#xD;
				return pass;&#xD;
			} else {&#xD;
				System.out.print(&#xD;
						&quot;La contraseña debe contener: &quot; +&#xD;
						((!Cliente.tieneMayus(pass)) ? &quot;Mayusculas &quot; : &quot;&quot;) +&#xD;
						((!Cliente.tieneMinus(pass)) ? &quot;Minusculas &quot; : &quot;&quot;) +&#xD;
						((!Cliente.tieneNumeros(pass)) ? &quot;Numeros &quot; : &quot;&quot;) +&#xD;
						((!Cliente.tiene8caracteres(pass)) ? &quot;8 caracteres\n&quot; : &quot;\n&quot;)&#xD;
						);&#xD;
				pass = &quot;&quot;;&#xD;
			}&#xD;
		} while (pass.equals(&quot;&quot;));&#xD;
		return pass;&#xD;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYEltuimEe-n_bccIa6R9w" name="inOpc" specification="_kJA2AuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYElt-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>int opc = 0;&#xD;
		try {		&#xD;
			opc = scn.nextInt();&#xD;
			scn.nextLine();&#xD;
		} catch (InputMismatchException e) {&#xD;
			scn.nextLine();&#xD;
			opc = 0;&#xD;
			System.out.print(&quot;\n>>> ERROR: introduzca un numero por favor &lt;&lt;&lt;\n\n&quot;&#xD;
					+ &quot;Su nueva eleccion es: &quot;);&#xD;
			return inOpc();&#xD;
		}&#xD;
		return opc;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYEluOimEe-n_bccIa6R9w" name="inYesNo" specification="_kJBdEOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYElueimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&quot;(Si/No) : &quot;);&#xD;
		String r = scn.nextLine();&#xD;
		if (r.equalsIgnoreCase(&quot;Si&quot;) || r.equals(&quot;1&quot;) || r.equalsIgnoreCase(&quot;s&quot;) || r.equalsIgnoreCase(&quot;y&quot;)) {&#xD;
			return true;&#xD;
		} else if (r.equalsIgnoreCase(&quot;no&quot;) || r.equals(&quot;0&quot;) || r.equalsIgnoreCase(&quot;n&quot;)) {&#xD;
			return false;&#xD;
		} else {&#xD;
			System.out.print(&quot;\n>>> ERROR: introduzca una respuesta valida &lt;&lt;&lt;\n\n&quot;&#xD;
					+ &quot;Su nueva eleccion es &quot;);&#xD;
			return inYesNo();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYEluuimEe-n_bccIa6R9w" name="inFecIni" specification="_kJCEIOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYElu-imEe-n_bccIa6R9w" type="_kVkrUOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>String fecIniS = &quot;&quot;;&#xD;
		String fecIniSD;&#xD;
		String fecIniSM;&#xD;
		String fecIniSY; &#xD;
		do {&#xD;
			System.out.print(&quot;~~~ Fecha inicial ~~~\n&quot;&#xD;
					+ &quot;Dia: &quot;);&#xD;
			fecIniSD = scn.nextLine();&#xD;
			&#xD;
			System.out.print(&quot;Mes (número) : &quot;);&#xD;
			fecIniSM = scn.nextLine();&#xD;
			&#xD;
			System.out.print(&quot;Año: &quot;);&#xD;
			fecIniSY = scn.nextLine();&#xD;
		&#xD;
		} while (!StringDate.isStringDate(fecIniSY, fecIniSM, fecIniSD));&#xD;
		&#xD;
		fecIniSM = StringDate.monthFormat(fecIniSM);&#xD;
		fecIniSD = StringDate.dayFormat(fecIniSD, fecIniSM, fecIniSY);&#xD;
		fecIniS = fecIniSY + &quot;-&quot; + fecIniSM + &quot;-&quot; + fecIniSD;&#xD;
		&#xD;
		Date fecIni = Date.valueOf(fecIniS);&#xD;
		return fecIni;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYElvOimEe-n_bccIa6R9w" name="inFecFin" specification="_kJDSQOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYElveimEe-n_bccIa6R9w" type="_kVkrUOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>String fecFinS = &quot;&quot;;&#xD;
		String fecFinSD;&#xD;
		String fecFinSM;&#xD;
		String fecFinSY; &#xD;
		do {&#xD;
			System.out.print(&quot;~~~ Fecha final ~~~\n&quot;&#xD;
					+ &quot;Dia: &quot;);&#xD;
			fecFinSD = scn.nextLine();&#xD;
			&#xD;
			System.out.print(&quot;Mes (número) : &quot;);&#xD;
			fecFinSM = scn.nextLine();&#xD;
			&#xD;
			System.out.print(&quot;Año: &quot;);&#xD;
			fecFinSY = scn.nextLine();&#xD;
		&#xD;
		} while (!StringDate.isStringDate(fecFinSY, fecFinSM, fecFinSD));&#xD;
		&#xD;
		fecFinSM = StringDate.monthFormat(fecFinSM);&#xD;
		fecFinSD = StringDate.dayFormat(fecFinSD, fecFinSM, fecFinSY);&#xD;
		fecFinS = fecFinSY + &quot;-&quot; + fecFinSM + &quot;-&quot; + fecFinSD;&#xD;
		&#xD;
		Date fecFin = Date.valueOf(fecFinS);&#xD;
		return fecFin;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYFMwOimEe-n_bccIa6R9w" name="inPvp" specification="_kJDSQeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYFMweimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&quot;Precio: &quot;);&#xD;
		String pvpT = scn.nextLine();&#xD;
		pvpT = pvpT.replace(&quot;,&quot;, &quot;.&quot;);&#xD;
		double pvp = Double.parseDouble(pvpT);&#xD;
		return pvp;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYFMwuimEe-n_bccIa6R9w" name="inNum" specification="_kJD5UOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYFMw-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&quot;Numero de sala: &quot;);&#xD;
		int num = scn.nextInt();&#xD;
		scn.nextLine();&#xD;
		return num;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYFMxOimEe-n_bccIa6R9w" name="inCod" specification="_kJD5UuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYFMxeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&quot;Codigo de la reserva: &quot;);&#xD;
		int cod = scn.nextInt();&#xD;
		scn.nextLine();&#xD;
		return cod;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYFz0OimEe-n_bccIa6R9w" name="inTarjeta" specification="_kJEgYOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYFz0eimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kYFz0uimEe-n_bccIa6R9w" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&quot;\nDATOS DE TARJETA DE CREDITO\n&quot;&#xD;
				+ &quot;------------------------\n&quot;&#xD;
				+ &quot;Numero de tarjeta (Sin espacios): &quot;);&#xD;
		int[] num = new int[4]; &#xD;
		num[0] = inNumTarjeta();&#xD;
		scn.nextLine();&#xD;
		System.out.print(&quot;Mes caducidad: &quot;);  &#xD;
		num[1] = inMes();&#xD;
		scn.nextLine();&#xD;
		System.out.print(&quot;Año caducidad: &quot;);&#xD;
		num[2] = inAnoTarjeta();&#xD;
		scn.nextLine();&#xD;
		System.out.print(&quot;Codigo de seguridad: &quot;);&#xD;
		num[3] = inCVC();&#xD;
		scn.nextLine();&#xD;
		return num;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYFz0-imEe-n_bccIa6R9w" name="inCVC" specification="_kJFugOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYFz1OimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>String cvcT = scn.nextLine();&#xD;
		if (cvcT.length() == 3 || cvcT.length() == 4) {&#xD;
			if (soloNumeros(cvcT)) {&#xD;
				int cvc = Integer.parseInt(cvcT);&#xD;
				return cvc;&#xD;
			} else {&#xD;
				System.out.print(&quot;\n>>> ERROR: introduzca solo numeros por favor &lt;&lt;&lt;\n\n&quot;&#xD;
						+ &quot;CVC: &quot;);&#xD;
				return inMes();&#xD;
			}&#xD;
		} else {&#xD;
			System.out.print(&quot;\n>>> ERROR: dato no valido &lt;&lt;&lt;\n\n&quot;&#xD;
					+ &quot;CVC: &quot;);&#xD;
			return inMes();&#xD;
			&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYFz1eimEe-n_bccIa6R9w" name="inMes" specification="_kJGVkOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYFz1uimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>String monthT = scn.nextLine();&#xD;
		if (monthT.length() == 1 || monthT.length() == 2) {&#xD;
			if (soloNumeros(monthT)) {&#xD;
				int month = Integer.parseInt(monthT);&#xD;
				if (month > 0 &amp;&amp; month &lt; 13) {&#xD;
					return month;&#xD;
				} else {&#xD;
					System.out.print(&quot;\nERROR: introduzca un mes valido &lt;&lt;&lt;\n\n&quot;&#xD;
							+ &quot;Mes:&quot;);&#xD;
					return inMes();&#xD;
				}&#xD;
			} else {&#xD;
				System.out.print(&quot;\n>>> ERROR: introduzca solo numeros por favor &lt;&lt;&lt;\n\n&quot;&#xD;
						+ &quot;Mes: &quot;);&#xD;
				return inMes();&#xD;
			}&#xD;
		} else {&#xD;
			System.out.print(&quot;\n>>> ERROR: dato no valido &lt;&lt;&lt;\n\n&quot;&#xD;
					+ &quot;Mes: &quot;);&#xD;
			return inMes();&#xD;
			&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYFz1-imEe-n_bccIa6R9w" name="inAnoTarjeta" specification="_kJGVkuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYFz2OimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>String yearT = scn.nextLine();&#xD;
		if (yearT.length() == 1 || yearT.length() == 2) {&#xD;
			if (soloNumeros(yearT)) {&#xD;
				int year = Integer.parseInt(yearT);&#xD;
				if (year > 24 &amp;&amp; year &lt; 36) {&#xD;
					return year;&#xD;
				} else {&#xD;
					System.out.print(&quot;\nERROR: introduzca un año valido &lt;&lt;&lt;\n\n&quot;&#xD;
							+ &quot;Año:&quot;);&#xD;
					return inMes();&#xD;
				}&#xD;
			} else {&#xD;
				System.out.print(&quot;\n>>> ERROR: introduzca solo numeros por favor &lt;&lt;&lt;\n\n&quot;&#xD;
						+ &quot;Año: &quot;);&#xD;
				return inMes();&#xD;
			}&#xD;
		} else {&#xD;
			System.out.print(&quot;\n>>> ERROR: dato no valido &lt;&lt;&lt;\n\n&quot;&#xD;
					+ &quot;Año: &quot;);&#xD;
			return inMes();&#xD;
			&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYFz2eimEe-n_bccIa6R9w" name="inNumTarjeta" specification="_kJG8oOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYGa4OimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>String numT;&#xD;
		numT = scn.nextLine();&#xD;
		if (soloNumeros(numT)) {&#xD;
			if (numT.length() > 11 &amp;&amp; numT.length() &lt; 20) {&#xD;
				if (numT.length() == 16) {&#xD;
					System.out.print(&quot;\nVisa, Mastercard o Discover\n&quot;);&#xD;
				} else if (numT.length() == 15) {&#xD;
					System.out.print(&quot;\nAmerican Expresss\n&quot;);&#xD;
				} else {&#xD;
					System.out.print(&quot;\nOtras tarjetas\n&quot;);&#xD;
				}&#xD;
				int num = Integer.parseInt(numT);&#xD;
				return num;&#xD;
			} else {&#xD;
				System.out.print(&quot;\n>>> ERROR: Introduzca un numero de tarjeta valido &lt;&lt;&lt;\n\n&quot;&#xD;
						+ &quot;Numero de tarjeta (Sin espacios): &quot;);&#xD;
				return inNumTarjeta();&#xD;
			}&#xD;
		} else {&#xD;
			System.out.print(&quot;\n>>> ERROR: Introduzca el numero de la tarjeta solo con los numeros, sin espacios &lt;&lt;&lt;\n\n&quot;&#xD;
					+ &quot;Numero de tarjeta (Sin espacios): &quot;);&#xD;
			return inNumTarjeta();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYGa4eimEe-n_bccIa6R9w" name="soloNumeros" specification="_kJHjsOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYGa4uimEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYGa4-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>for (char c : num.toCharArray()) {&#xD;
         if (!Character.isDigit(c)) {&#xD;
             return false;&#xD;
         }&#xD;
     }&#xD;
     return true;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYGa5OimEe-n_bccIa6R9w" name="inID" specification="_kJHjs-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYGa5eimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>int id = 0;&#xD;
		try {	&#xD;
			System.out.print(&quot;ID de hotel: &quot;);&#xD;
			id = scn.nextInt();&#xD;
			scn.nextLine();&#xD;
		} catch (InputMismatchException e) {&#xD;
			scn.nextLine();&#xD;
			id = 0;&#xD;
			System.out.print(&quot;\n>>> ERROR: introduzca un numero por favor &lt;&lt;&lt;\n\n&quot;);&#xD;
			return inID();&#xD;
		}&#xD;
		return id;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kI6IUOimEe-n_bccIa6R9w" name="inNombre" isStatic="true" method="_kX8p4OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kI7WcOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kI79gOimEe-n_bccIa6R9w" name="inPassLibre" isStatic="true" method="_kYDXkOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kI79geimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kI8kkOimEe-n_bccIa6R9w" name="inApellido" isStatic="true" method="_kYDXkuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kI8kkeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kI8kkuimEe-n_bccIa6R9w" name="inDNI" isStatic="true" method="_kYDXlOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kI9LoOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kI9LoeimEe-n_bccIa6R9w" name="inEmail" isStatic="true" method="_kYDXluimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kI9LouimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kI9ysOimEe-n_bccIa6R9w" name="inTelefono" isStatic="true" method="_kYD-oOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kI9yseimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kI9ysuimEe-n_bccIa6R9w" name="inBTrabajador" isStatic="true" method="_kYD-ouimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kI-ZwOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kI-ZweimEe-n_bccIa6R9w" name="inTarifa" isStatic="true" method="_kYD-pOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kVqK4eimEe-n_bccIa6R9w" type="_kVpj0OimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kI-ZwuimEe-n_bccIa6R9w" name="inCiudad" isStatic="true" method="_kYD-puimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kI-Zw-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kI_A0OimEe-n_bccIa6R9w" name="inDir" isStatic="true" method="_kYD-qOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kI_A0eimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kI_n4OimEe-n_bccIa6R9w" name="inCapacidad" isStatic="true" method="_kYD-quimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kI_n4eimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kI_n4uimEe-n_bccIa6R9w" name="inTipoHab" isStatic="true" method="_kYD-rOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kVrZAOimEe-n_bccIa6R9w" type="_kVqK4uimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kI_n4-imEe-n_bccIa6R9w" name="inTipoComun" isStatic="true" method="_kYElsOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kJAO8OimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJAO8eimEe-n_bccIa6R9w" name="inServicios" isStatic="true" method="_kYElsuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kJAO8uimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJA2AOimEe-n_bccIa6R9w" name="inPass" isStatic="true" method="_kYEltOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kJA2AeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJA2AuimEe-n_bccIa6R9w" name="inOpc" isStatic="true" method="_kYEltuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kJA2A-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJBdEOimEe-n_bccIa6R9w" name="inYesNo" isStatic="true" method="_kYEluOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kJBdEeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJCEIOimEe-n_bccIa6R9w" name="inFecIni" isStatic="true" method="_kYEluuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kW9ycOimEe-n_bccIa6R9w" type="_kVkrUOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kJDSQOimEe-n_bccIa6R9w" name="inFecFin" isStatic="true" method="_kYElvOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kW-ZgOimEe-n_bccIa6R9w" type="_kVkrUOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kJDSQeimEe-n_bccIa6R9w" name="inPvp" isStatic="true" method="_kYFMwOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kJDSQuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJD5UOimEe-n_bccIa6R9w" name="inNum" isStatic="true" method="_kYFMwuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kJD5UeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJD5UuimEe-n_bccIa6R9w" name="inCod" isStatic="true" method="_kYFMxOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kJD5U-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJEgYOimEe-n_bccIa6R9w" name="inTarjeta" isStatic="true" method="_kYFz0OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kJEgYeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kJEgYuimEe-n_bccIa6R9w" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJFugOimEe-n_bccIa6R9w" name="inCVC" visibility="private" isStatic="true" method="_kYFz0-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kJFugeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJGVkOimEe-n_bccIa6R9w" name="inMes" visibility="private" isStatic="true" method="_kYFz1eimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kJGVkeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJGVkuimEe-n_bccIa6R9w" name="inAnoTarjeta" visibility="private" isStatic="true" method="_kYFz1-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kJGVk-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJG8oOimEe-n_bccIa6R9w" name="inNumTarjeta" visibility="private" isStatic="true" method="_kYFz2eimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kJG8oeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJHjsOimEe-n_bccIa6R9w" name="soloNumeros" visibility="private" isStatic="true" method="_kYGa4eimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kJHjseimEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kJHjsuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJHjs-imEe-n_bccIa6R9w" name="inID" isStatic="true" method="_kYGa5OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kJIKwOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kJJY4OimEe-n_bccIa6R9w" name="StringDate">
        <ownedComment xmi:id="_kYomYOimEe-n_bccIa6R9w">
          <body>Clase de apoyo que gestiona fechas en formato string</body>
        </ownedComment>
        <ownedAttribute xmi:id="_kXZQQOimEe-n_bccIa6R9w" name="fecha">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYHB8OimEe-n_bccIa6R9w" name="getFechaAsLocalDate" specification="_kJKnAOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYHB8eimEe-n_bccIa6R9w" type="_kVtOMOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>DateTimeFormatter formatter = DateTimeFormatter.ofPattern(&quot;yyyyMMdd&quot;);&#xD;
     return LocalDate.parse(fecha, formatter);&#xD;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYHB8uimEe-n_bccIa6R9w" name="tranformarFecha" specification="_kW_noOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYHB8-imEe-n_bccIa6R9w" name="sc" type="_kVnHkOimEe-n_bccIa6R9w"/>
          <language>java</language>
          <body>System.out.print(&quot;Introduce la fecha en formato yyyyMMdd: &quot;);&#xD;
     String fechaUsuario = sc.nextLine();&#xD;
     &#xD;
     //SE VERIFICA QUE EL FORMATO LA FECHA SEA VALIDO&#xD;
     DateTimeFormatter formatter = DateTimeFormatter.ofPattern(&quot;yyyyMMdd&quot;);&#xD;
     try {&#xD;
         LocalDate fechaLocal = LocalDate.parse(fechaUsuario, formatter);&#xD;
         this.fecha = fechaUsuario; &#xD;
         System.out.println(&quot;Fecha ingresada correctamente: &quot; + fechaLocal);&#xD;
     } catch (Exception e) {&#xD;
         System.out.println(&quot;Fecha inválida. Asegúrate de seguir el formato yyyyMMdd.&quot;);&#xD;
     }&#xD;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYHpAOimEe-n_bccIa6R9w" name="isStringDate" specification="_kJLOEOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYHpAeimEe-n_bccIa6R9w" name="year">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYHpAuimEe-n_bccIa6R9w" name="month">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYHpA-imEe-n_bccIa6R9w" name="day">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYHpBOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if (isYear(year) &amp;&amp; isMonth(month) &amp;&amp; isDay(day)) {&#xD;
			return true;&#xD;
		} else {&#xD;
			return false;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYHpBeimEe-n_bccIa6R9w" name="isYear" specification="_kJMcMOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYHpBuimEe-n_bccIa6R9w" name="year">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYHpB-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if (&#xD;
				year.length() == 4 &amp;&amp;&#xD;
				Integer.parseInt(year) > 999 &amp;&amp;&#xD;
				Integer.parseInt(year) &lt; 10000&#xD;
		) {&#xD;
			return true;&#xD;
		} else {		&#xD;
			return false;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYHpCOimEe-n_bccIa6R9w" name="isMonth" specification="_kJMcM-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYHpCeimEe-n_bccIa6R9w" name="month">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYHpCuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if (&#xD;
				(month.length() == 2 || month.length() == 1)  &amp;&amp;&#xD;
				Integer.parseInt(month) > 0 &amp;&amp;&#xD;
				Integer.parseInt(month) &lt; 13&#xD;
		) {&#xD;
			return true;&#xD;
		} else {		&#xD;
			return false;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYIQEOimEe-n_bccIa6R9w" name="isDay" specification="_kJNDQOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYIQEeimEe-n_bccIa6R9w" name="day">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYIQEuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if (&#xD;
				(day.length() == 2 || day.length() == 1)  &amp;&amp;&#xD;
				Integer.parseInt(day) > 0 &amp;&amp;&#xD;
				Integer.parseInt(day) &lt; 32&#xD;
		) {&#xD;
			return true;&#xD;
		} else {		&#xD;
			return false;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYIQE-imEe-n_bccIa6R9w" name="monthFormat" specification="_kJNqUOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYIQFOimEe-n_bccIa6R9w" name="month">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYIQFeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>if (month.length() == 1) {&#xD;
			return 0+month;&#xD;
		} else {&#xD;
			return month;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYIQFuimEe-n_bccIa6R9w" name="esBisiesto" specification="_kJNqU-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYIQF-imEe-n_bccIa6R9w" name="año">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYIQGOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return (año % 4 == 0 &amp;&amp; año % 100 != 0) || (año % 400 == 0);&#xD;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYIQGeimEe-n_bccIa6R9w" name="dayFormat" specification="_kJO4cOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYIQGuimEe-n_bccIa6R9w" name="day">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYIQG-imEe-n_bccIa6R9w" name="month">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYIQHOimEe-n_bccIa6R9w" name="year">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYIQHeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>switch (Integer.parseInt(month)) {&#xD;
		case 1, 3, 5, 7, 8, 10, 12:&#xD;
			if (day.length() == 1) {&#xD;
				return 0+day;&#xD;
			} else {&#xD;
				return day;&#xD;
			}&#xD;
		case 4, 6, 9, 11:&#xD;
			if (Integer.parseInt(day) &lt; 31) {&#xD;
				if (day.length() == 1) {&#xD;
					return 0+day;&#xD;
				} else {&#xD;
					return day;&#xD;
				}&#xD;
			}&#xD;
			else {&#xD;
				return &quot;&quot;;	&#xD;
			}&#xD;
		case 2:&#xD;
			&#xD;
			if (Integer.parseInt(day) &lt; 29 &amp;&amp; !esBisiesto(Integer.parseInt(year))) {&#xD;
				if (day.length() == 1) {&#xD;
					return 0+day;&#xD;
				} else {&#xD;
					return day;&#xD;
				}&#xD;
			} else if (Integer.parseInt(day) &lt; 30 &amp;&amp; esBisiesto(Integer.parseInt(year))) {&#xD;
				if (day.length() == 1) {&#xD;
					return 0+day;&#xD;
				} else {&#xD;
					return day;&#xD;
				}&#xD;
			} else {&#xD;
				return &quot;&quot;;	&#xD;
			}&#xD;
		default: &#xD;
			return &quot;&quot;;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kJKnAOimEe-n_bccIa6R9w" name="getFechaAsLocalDate" method="_kYHB8OimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYomYeimEe-n_bccIa6R9w">
            <body>CONVIERTE EL STRING A LOCALDATE&#xD;
     * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kW_AkOimEe-n_bccIa6R9w" type="_kVtOMOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kJLOEOimEe-n_bccIa6R9w" name="isStringDate" isStatic="true" method="_kYHpAOimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYomY-imEe-n_bccIa6R9w">
            <body>Funcion que comprueba si un string esta en formato date&#xD;
     * @param year&#xD;
     * @param month&#xD;
     * @param day&#xD;
     * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJLOEeimEe-n_bccIa6R9w" name="year">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kJLOEuimEe-n_bccIa6R9w" name="month">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kJL1IOimEe-n_bccIa6R9w" name="day">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kJL1IeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJMcMOimEe-n_bccIa6R9w" name="isYear" visibility="private" isStatic="true" method="_kYHpBeimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYomZOimEe-n_bccIa6R9w">
            <body>¿Este string es un año?&#xD;
	 * @param year&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJMcMeimEe-n_bccIa6R9w" name="year">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kJMcMuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJMcM-imEe-n_bccIa6R9w" name="isMonth" visibility="private" isStatic="true" method="_kYHpCOimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYomZeimEe-n_bccIa6R9w">
            <body>¿Este string es un mes?&#xD;
	 * @param month&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJMcNOimEe-n_bccIa6R9w" name="month">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kJMcNeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJNDQOimEe-n_bccIa6R9w" name="isDay" visibility="private" isStatic="true" method="_kYIQEOimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYomZuimEe-n_bccIa6R9w">
            <body>¿Este string es un dia?&#xD;
	 * @param day&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJNDQeimEe-n_bccIa6R9w" name="day">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kJNDQuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJNqUOimEe-n_bccIa6R9w" name="monthFormat" isStatic="true" method="_kYIQE-imEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYpNcOimEe-n_bccIa6R9w">
            <body>Convierte en formato mes de date un string&#xD;
	 * @param month&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJNqUeimEe-n_bccIa6R9w" name="month">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kJNqUuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJNqU-imEe-n_bccIa6R9w" name="esBisiesto" visibility="private" isStatic="true" method="_kYIQFuimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYpNceimEe-n_bccIa6R9w">
            <body>Este año es bisiesto&#xD;
	 * @param año&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJNqVOimEe-n_bccIa6R9w" name="año">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kJORYOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJO4cOimEe-n_bccIa6R9w" name="dayFormat" isStatic="true" method="_kYIQGeimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYpNcuimEe-n_bccIa6R9w">
            <body>Convierte en formato dia de date un string&#xD;
     * @param day&#xD;
     * @param month&#xD;
     * @param year&#xD;
     * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJO4ceimEe-n_bccIa6R9w" name="day">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kJO4cuimEe-n_bccIa6R9w" name="month">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kJO4c-imEe-n_bccIa6R9w" name="year">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kJO4dOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kW_noOimEe-n_bccIa6R9w" name="tranformarFecha" method="_kYHB8uimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYomYuimEe-n_bccIa6R9w">
            <body>Metodo para que user introduzca la fecha&#xD;
     * @param sc</body>
          </ownedComment>
          <ownedParameter xmi:id="_kW_noeimEe-n_bccIa6R9w" name="sc" type="_kVnHkOimEe-n_bccIa6R9w"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kZAZ0OimEe-n_bccIa6R9w" name="" memberEnd="_kZAZ0eimEe-n_bccIa6R9w _kXXbEOimEe-n_bccIa6R9w">
        <ownedEnd xmi:id="_kZAZ0eimEe-n_bccIa6R9w" name="" type="_kI0owOimEe-n_bccIa6R9w" association="_kZAZ0OimEe-n_bccIa6R9w"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_kHJ00OimEe-n_bccIa6R9w" name="conectores">
      <packagedElement xmi:type="uml:Class" xmi:id="_kJRUsOimEe-n_bccIa6R9w" name="ConectMySQL">
        <ownedComment xmi:id="_kYpNc-imEe-n_bccIa6R9w">
          <body>Conexion a la base de datos</body>
        </ownedComment>
        <ownedAttribute xmi:id="_kXZ3UOimEe-n_bccIa6R9w" name="conexion" isStatic="true" type="_kXAOsOimEe-n_bccIa6R9w" association="_kZBA4eimEe-n_bccIa6R9w"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYI3IOimEe-n_bccIa6R9w" name="conectar" specification="_kJSi0OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYI3IeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>try {&#xD;
			&#xD;
			// Buscar el driver&#xD;
			Class.forName(&quot;com.mysql.cj.jdbc.Driver&quot;);&#xD;
			System.out.println(&quot;Cargando...&quot;);&#xD;
			&#xD;
			try {&#xD;
				&#xD;
				// Establecer conexion con la base de datos como usuario basico&#xD;
				conexion = DriverManager.getConnection(&quot;jdbc:mysql://127.0.0.1:3306/hotel&quot;, &quot;app&quot;, &quot;app&quot;);&#xD;
				&#xD;
				System.out.println(&quot;Conexion establecida&quot;);&#xD;
				return true;&#xD;
			&#xD;
			// Recoge los errores que pueda producirse en la conexion con la base de datos &#xD;
			} catch(Exception e) {&#xD;
				System.out.println(&quot;Error en la conexion&quot;);&#xD;
				return false;&#xD;
			} &#xD;
			&#xD;
		// Recoge los errores produccidos en la carga del driver	&#xD;
		}catch(Exception e) {&#xD;
			System.out.println(&quot;Error en el driver&quot;);&#xD;
			return false;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYI3IuimEe-n_bccIa6R9w" name="conectarAdm" specification="_kJTJ4eimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYI3I-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>try {&#xD;
			&#xD;
			// Buscar el driver&#xD;
			Class.forName(&quot;com.mysql.cj.jdbc.Driver&quot;);&#xD;
			//System.out.println(&quot;Cargando...&quot;);&#xD;
			&#xD;
			try {&#xD;
				&#xD;
				// Establecer conexion con la base de datos como usuario basico&#xD;
				conexion = DriverManager.getConnection(&quot;jdbc:mysql://127.0.0.1:3306/hotel&quot;, &quot;appAdm&quot;, &quot;appAdm&quot;);&#xD;
				&#xD;
				//System.out.println(&quot;Conexion establecida&quot;);&#xD;
				return true;&#xD;
			&#xD;
			// Recoge los errores que pueda producirse en la conexion con la base de datos &#xD;
			} catch(Exception e) {&#xD;
				System.out.println(&quot;Error en la conexion&quot;);&#xD;
				return false;&#xD;
			} &#xD;
			&#xD;
		// Recoge los errores produccidos en la carga del driver	&#xD;
		}catch(Exception e) {&#xD;
			System.out.println(&quot;Error en el driver&quot;);&#xD;
			return false;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kJSi0OimEe-n_bccIa6R9w" name="conectar" isStatic="true" method="_kYI3IOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kJTJ4OimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJTJ4eimEe-n_bccIa6R9w" name="conectarAdm" isStatic="true" method="_kYI3IuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kJTJ4uimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kJUYAOimEe-n_bccIa6R9w" name="RepoCliente">
        <ownedComment xmi:id="_kYpNdOimEe-n_bccIa6R9w">
          <body>Consultas a la base de datos de cliente</body>
        </ownedComment>
        <ownedAttribute xmi:id="_kXaeYeimEe-n_bccIa6R9w" name="SQLScripts" visibility="private" type="_kVvqcOimEe-n_bccIa6R9w" association="_kZBn8uimEe-n_bccIa6R9w">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_kXaeY-imEe-n_bccIa6R9w" value="new ArrayList&lt;>()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYI3JOimEe-n_bccIa6R9w" name="RepoCliente" specification="_kJVmIOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYI3JeimEe-n_bccIa6R9w" type="_kJUYAOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>inicializarArray();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYI3JuimEe-n_bccIa6R9w" name="inicializarArray" specification="_kJWNM-imEe-n_bccIa6R9w">
          <language>java</language>
          <body>// Insertar	0&#xD;
		this.SQLScripts.add( &quot;INSERT INTO Cliente (DNI, nom, ape, tlfno, email, btrabajador, tarifa, pass) VALUES\r\n&quot;&#xD;
				+ &quot;(?, ?, ?, ?, ?, ?, ?, SHA2(?, 256))&quot;&#xD;
				);&#xD;
		&#xD;
		// Eliminar 1&#xD;
		this.SQLScripts.add( &quot;DELETE cliente&quot;&#xD;
				+ &quot;WHERE DNI = ?&quot;&#xD;
				);&#xD;
		&#xD;
		// Modificar 2		&#xD;
		this.SQLScripts.add( &quot;UPDATE cliente &quot;&#xD;
				+ &quot;SET DNI = ?, nom = ?, ape = ?, tlfno = ?, email = ?, bTrabajador = ?, tarifa = ?, SHA2(pass = ?, 256)&quot;&#xD;
				+ &quot; WHERE DNI = ?&quot;&#xD;
				);&#xD;
		&#xD;
		// Comprobar existencia	3&#xD;
		this.SQLScripts.add( &quot;SELECT dni FROM Cliente&quot;&#xD;
				+ &quot; WHERE DNI = ?;&quot;&#xD;
				);&#xD;
		&#xD;
		// Traer informarcion 4	&#xD;
		this.SQLScripts.add( &quot;SELECT * FROM Cliente&quot;&#xD;
				+ &quot; WHERE DNI = ?&quot;&#xD;
				);&#xD;
		&#xD;
		// Otros&#xD;
		&#xD;
		// Comprobacion de credenciales 5&#xD;
		this.SQLScripts.add( &quot;SELECT c.dni, c.pass\r\n&quot;&#xD;
				+ &quot;from cliente c\r\n&quot;&#xD;
				+ &quot;where c.dni = ? and c.pass = sha2(?, 256);&quot;&#xD;
				);&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYJeMOimEe-n_bccIa6R9w" name="insert" specification="_kVwRgeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYJeMeimEe-n_bccIa6R9w" name="nuevo" type="_kKqb0uimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYJeMuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>// Comprueba que los scrpits estan en el array y si no esta lo inicializa&#xD;
		if (this.SQLScripts.isEmpty()) {&#xD;
			inicializarArray();&#xD;
		}&#xD;
		&#xD;
		// Revisa si ya existe el cliente&#xD;
		if(!check(nuevo)) {&#xD;
			&#xD;
			//Si no existe el cliente, hace la consulta a la BBDD&#xD;
			try (PreparedStatement preparedStatement = ConectMySQL.conexion.prepareStatement(SQLScripts.get(0))) {&#xD;
		        preparedStatement.setString(1, nuevo.getDNI());&#xD;
		        preparedStatement.setString(2, nuevo.getNombre());&#xD;
		        preparedStatement.setString(3, nuevo.getApellidos());&#xD;
		        preparedStatement.setString(4, nuevo.getTelefono());&#xD;
		        preparedStatement.setString(5, nuevo.getEmail());&#xD;
		        preparedStatement.setBoolean(6, nuevo.isbTrabajador());&#xD;
		        preparedStatement.setString(7, nuevo.getTarifa().toString());&#xD;
		        preparedStatement.setString(8, nuevo.getPass());&#xD;
		        preparedStatement.executeUpdate();&#xD;
		        &#xD;
		        //Comprueba si la insercion se ha producido y devuelve en funcion de esta&#xD;
		        if (check(nuevo)) {&#xD;
		        	System.out.print(&quot;\n~~~ Cuenta creada correctamente ~~~\n&quot;);&#xD;
		        	return true;&#xD;
		        } else {&#xD;
		        	System.out.print(&quot;\n>>> Se ha producido un error &lt;&lt;&lt;\n\n&quot;);&#xD;
		        	return false;&#xD;
		        }&#xD;
&#xD;
			//En caso de que haya algun error en la base lo coge aqui&#xD;
			} catch (SQLException e) {&#xD;
				e.printStackTrace();&#xD;
				System.out.println(&quot;Error al insertar el nuevo cliente&quot;);&#xD;
				return false;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		//Si el cliente existe antes de la insercion devuelve false. &#xD;
		System.out.println(&quot;El usuario ya existe&quot;);&#xD;
		return true;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYJeM-imEe-n_bccIa6R9w" name="delete" specification="_kVw4keimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYJeNOimEe-n_bccIa6R9w" name="aBorrar" type="_kKqb0uimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYJeNeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>// Comprueba que los scrpits estan en el array y si no esta lo inicializa&#xD;
		if (SQLScripts.isEmpty()) {&#xD;
			inicializarArray();&#xD;
		}&#xD;
		&#xD;
		// Revisa si existe el cliente&#xD;
		if(check(aBorrar)) {&#xD;
			&#xD;
			String query =  &#xD;
					&quot;DELETE FROM &quot;&#xD;
						+ &quot;cliente &quot;&#xD;
					+ &quot;WHERE &quot;&#xD;
						+ &quot;DNI = ?&quot;;&#xD;
			&#xD;
			//Si existe el cliente, ejecuta el borrado en la BBDD&#xD;
			try (PreparedStatement preparedStatement = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
		        preparedStatement.setString(1, aBorrar.getDNI());&#xD;
		        &#xD;
		        preparedStatement.executeUpdate();&#xD;
		        &#xD;
		        //Comprueba si la insercion se ha producido y devuelve lo contrario en funcion de esta&#xD;
		        return !check(aBorrar);&#xD;
&#xD;
			//En caso de que haya algun error en la base lo coge aqui&#xD;
			} catch (SQLException e) {&#xD;
				System.out.println(&quot;Error al eliminar el cliente\n&quot;);&#xD;
				return false;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		//Si el cliente existe antes de la insercion devuelve false. &#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYJeNuimEe-n_bccIa6R9w" name="update" specification="_kVxfoOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYJeN-imEe-n_bccIa6R9w" name="modificaciones" type="_kKqb0uimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYJeOOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>// Comprueba que los scrpits estan en el array y si no esta lo inicializa&#xD;
		if (SQLScripts.isEmpty()) {&#xD;
			inicializarArray();&#xD;
		}&#xD;
		&#xD;
		//Inicializo un cliente que va a recibir los datos del cliente original, lo hago fuera del if para poder usarlo despues.&#xD;
		Cliente original = new Cliente( &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, false, &quot;&quot;);&#xD;
		&#xD;
		// Copruebo que me han pasado el DNI correcto&#xD;
		if (!modificaciones.getDNI().equals(&quot;&quot;)) {&#xD;
			&#xD;
			// Meto los datos del cliente original en el cliente creado anterior&#xD;
			original = get(modificaciones.getDNI());&#xD;
			&#xD;
			// Reviso si un dato esta por defecto y en caso de que no lo este en modificaciones lo tomo como una modificacion del original y lo seteo.&#xD;
			if (!modificaciones.getNombre().equals(&quot;&quot;)) original.setNombre(modificaciones.getNombre());&#xD;
			if (!modificaciones.getApellidos().equals(&quot;&quot;)) original.setApellidos(modificaciones.getApellidos());&#xD;
			if (!modificaciones.getTelefono().equals(&quot;&quot;)) original.setTelefono(modificaciones.getTelefono());&#xD;
			if (!modificaciones.getEmail().equals(&quot;&quot;)) original.setEmail(modificaciones.getEmail());&#xD;
			if (!modificaciones.getTarifa().toString().equals(&quot;estandar&quot;)) original.setTarifa(modificaciones.getTarifa());&#xD;
			if (!modificaciones.getPass().equals(&quot;&quot;)) original.setPass(modificaciones.getPass());&#xD;
		&#xD;
		// En caso de no tener el DNI correcto devuelvo error&#xD;
		} else {&#xD;
			System.out.println(&quot;Error al insertar el DNI&quot;);&#xD;
			return false;&#xD;
		}&#xD;
				&#xD;
		// Revisa si existe el cliente&#xD;
		if(check(original)) {&#xD;
			&#xD;
			String query = &quot;UPDATE cliente &quot;&#xD;
					+ &quot;SET DNI = ?, nom = ?, ape = ?, tlfno = ?, email = ?, bTrabajador = ?, tarifa = ?, pass = SHA2( ?, 256) &quot;&#xD;
					+ &quot;WHERE DNI = ?&quot;;&#xD;
			&#xD;
			//Si existe el cliente, ejecuta el borrado en la BBDD&#xD;
			try (PreparedStatement preparedStatement = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
		        preparedStatement.setString(1, original.getDNI());&#xD;
		        preparedStatement.setString(2, original.getNombre());&#xD;
		        preparedStatement.setString(3, original.getApellidos());&#xD;
		        preparedStatement.setString(4, original.getTelefono());&#xD;
		        preparedStatement.setString(5, original.getEmail());&#xD;
		        preparedStatement.setBoolean(6, original.isbTrabajador());&#xD;
		        preparedStatement.setString(7, original.getTarifa().toString());&#xD;
		        preparedStatement.setString(8, original.getPass());&#xD;
		        preparedStatement.setString(9, original.getDNI());&#xD;
		        preparedStatement.executeUpdate();&#xD;
		        &#xD;
		        //Comprueba si la modificacion se ha producido y devuelve lo contrario en funcion de esta&#xD;
		        return true;&#xD;
&#xD;
			//En caso de que haya algun error en la base lo coge aqui&#xD;
			} catch (SQLException e) {&#xD;
				System.out.println(&quot;Error al actualizar el cliente&quot;);&#xD;
				return false;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		//Si el cliente existe antes de la insercion devuelve false. &#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYJeOeimEe-n_bccIa6R9w" name="check" specification="_kVxfo-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYJeOuimEe-n_bccIa6R9w" name="cliente" type="_kKqb0uimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYJeO-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if (this.SQLScripts.isEmpty()) {&#xD;
			inicializarArray();&#xD;
		}&#xD;
		&#xD;
		try (PreparedStatement preparedStatement = ConectMySQL.conexion.prepareStatement(SQLScripts.get(3))) {&#xD;
	        preparedStatement.setString(1, cliente.getDNI());&#xD;
	        ResultSet rS = preparedStatement.executeQuery();&#xD;
	        if (rS.next()) {&#xD;
	        	return true;&#xD;
	        } else {&#xD;
	        	return false;&#xD;
	        }&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYJePOimEe-n_bccIa6R9w" name="get" specification="_kJYCYOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYJePeimEe-n_bccIa6R9w" name="DNI">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYJePuimEe-n_bccIa6R9w" type="_kKqb0uimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>if (this.SQLScripts.isEmpty()) {&#xD;
			inicializarArray();&#xD;
		}&#xD;
		try (PreparedStatement pS = ConectMySQL.conexion.prepareStatement(this.SQLScripts.get(4))) {&#xD;
			pS.setString(1, DNI);&#xD;
			ResultSet rS = pS.executeQuery();&#xD;
			if (rS.next()) {&#xD;
				Cliente c = new Cliente(&#xD;
					rS.getString(1),&#xD;
					rS.getString(2),&#xD;
					rS.getString(3),&#xD;
					rS.getString(4),&#xD;
					rS.getString(5),&#xD;
					rS.getBoolean(6),&#xD;
					rS.getString(7),&#xD;
					rS.getString(8)&#xD;
				);&#xD;
				return c;&#xD;
			} else {&#xD;
				return null;&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return null;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYJeP-imEe-n_bccIa6R9w" name="checkCreden" specification="_kJYpcOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYJeQOimEe-n_bccIa6R9w" name="user">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYJeQeimEe-n_bccIa6R9w" name="pass">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYJeQuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if (this.SQLScripts.isEmpty()) {&#xD;
			inicializarArray();&#xD;
		}&#xD;
		&#xD;
		try (PreparedStatement pS = ConectMySQL.conexion.prepareStatement(this.SQLScripts.get(5))) {&#xD;
	        pS.setString(1, user);&#xD;
	        pS.setString(2, pass);&#xD;
	        ResultSet rS = pS.executeQuery();&#xD;
	        if (rS.next()) {&#xD;
	        	return true;&#xD;
	        } else {&#xD;
	        	return false;&#xD;
	        }&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYKFQOimEe-n_bccIa6R9w" name="getListaFiltrada" specification="_kVyGsOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYKFQeimEe-n_bccIa6R9w" name="filtro" type="_kKqb0uimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYKFQuimEe-n_bccIa6R9w" name="trabajador">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYKFQ-imEe-n_bccIa6R9w" type="_kVvqcOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>String query = &#xD;
				&quot;SELECT  &quot;&#xD;
					+ &quot;c.nom, &quot;&#xD;
					+ &quot;c.ape, &quot;&#xD;
					+ &quot;c.DNI, &quot;&#xD;
					+ &quot;c.tlfno, &quot;&#xD;
					+ &quot;c.email, &quot;&#xD;
					+ &quot;c.btrabajador, &quot;&#xD;
					+ &quot;c.tarifa &quot;&#xD;
				+ &quot;FROM &quot;&#xD;
					+ &quot;cliente c &quot;&#xD;
				+ &quot;WHERE &quot;&#xD;
					+ &quot;(c.nom = ? or ? = \&quot;\&quot;) and &quot;&#xD;
					+ &quot;(c.tlfno = ? or ? = \&quot;\&quot;) and &quot;&#xD;
					+ &quot;(c.email = ? or ? = 0) &quot;&#xD;
				+ &quot;ORDER BY &quot;&#xD;
					+ &quot;c.nom ASC, &quot;&#xD;
					+ &quot;c.ape ASC;&quot;;&#xD;
		&#xD;
		try (PreparedStatement pS = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
			&#xD;
			if (!filtro.getNombre().equals(&quot;&quot;)) {&#xD;
				pS.setString(1, filtro.getNombre());&#xD;
				pS.setString(2, filtro.getNombre());&#xD;
			} else {&#xD;
				pS.setString(1, &quot;&quot;);&#xD;
				pS.setString(2, &quot;&quot;);&#xD;
			}&#xD;
			&#xD;
			if (!filtro.getTelefono().equals(&quot;&quot;)) {&#xD;
				pS.setString(3, filtro.getTelefono());&#xD;
				pS.setString(4, filtro.getTelefono());&#xD;
			} else {&#xD;
				pS.setString(3, &quot;&quot;);&#xD;
				pS.setString(4, &quot;&quot;);&#xD;
			}&#xD;
			&#xD;
			if (!filtro.getEmail().equals(&quot;&quot;)) {&#xD;
				pS.setString(5, filtro.getEmail());&#xD;
				pS.setString(6, filtro.getEmail());&#xD;
			} else {&#xD;
				pS.setString(5, &quot;&quot;);&#xD;
				pS.setString(6, &quot;&quot;);&#xD;
			}&#xD;
			&#xD;
			ResultSet rS = pS.executeQuery();&#xD;
						&#xD;
			ArrayList&lt;Cliente> lista = new ArrayList&lt;>();&#xD;
			while (rS.next()) {&#xD;
				Cliente c = new Cliente(&#xD;
						rS.getString(3),&#xD;
						rS.getString(1),&#xD;
						rS.getString(2),&#xD;
						rS.getString(4),&#xD;
						rS.getString(5),&#xD;
						rS.getBoolean(6),&#xD;
						rS.getString(7),&#xD;
						&quot;&quot;&#xD;
						);&#xD;
				if (trabajador == 1 &amp;&amp; c.isbTrabajador()) { // Si se quieren los trabajadores solo meto trabajadores&#xD;
					lista.add(c);&#xD;
				} else if (trabajador == 0 &amp;&amp; !c.isbTrabajador()) { // Si se quieren los clientes solo meto los clientes&#xD;
					lista.add(c);&#xD;
				} else if (trabajador == -1) { // Si me da igual meto todos&#xD;
					lista.add(c);&#xD;
				}&#xD;
			}&#xD;
			&#xD;
			return lista;&#xD;
&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		&#xD;
		return null;&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYKFROimEe-n_bccIa6R9w" name="getLista" specification="_kJZQgOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYKFReimEe-n_bccIa6R9w" type="_kVvqcOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>String query = &#xD;
				&quot;SELECT  &quot;&#xD;
					+ &quot;c.nom, &quot;&#xD;
					+ &quot;c.ape, &quot;&#xD;
					+ &quot;c.DNI, &quot;&#xD;
					+ &quot;c.tlfno, &quot;&#xD;
					+ &quot;c.email, &quot;&#xD;
					+ &quot;c.btrabajador, &quot;&#xD;
					+ &quot;c.tarifa &quot;&#xD;
				+ &quot;FROM &quot;&#xD;
					+ &quot;cliente c &quot;&#xD;
				+ &quot;ORDER BY &quot;&#xD;
					+ &quot;c.nom ASC, &quot;&#xD;
					+ &quot;c.ape ASC;&quot;;&#xD;
		&#xD;
		try (PreparedStatement pS = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
			&#xD;
			ResultSet rS = pS.executeQuery();&#xD;
						&#xD;
			ArrayList&lt;Cliente> lista = new ArrayList&lt;>();&#xD;
			while (rS.next()) {&#xD;
				Cliente c = new Cliente(&#xD;
						rS.getString(3),&#xD;
						rS.getString(1),&#xD;
						rS.getString(2),&#xD;
						rS.getString(4),&#xD;
						rS.getString(5),&#xD;
						rS.getBoolean(6),&#xD;
						rS.getString(7),&#xD;
						&quot;&quot;&#xD;
						);&#xD;
				lista.add(c);&#xD;
			}&#xD;
			&#xD;
			return lista;&#xD;
&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		&#xD;
		return null;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kJVmIOimEe-n_bccIa6R9w" name="RepoCliente" method="_kYI3JOimEe-n_bccIa6R9w">
          <eAnnotations xmi:id="_kJWNMOimEe-n_bccIa6R9w" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kJWNMeimEe-n_bccIa6R9w" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_kYpNdeimEe-n_bccIa6R9w">
            <body>Constructor del repocliente</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJWNMuimEe-n_bccIa6R9w" type="_kJUYAOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kJWNM-imEe-n_bccIa6R9w" name="inicializarArray" visibility="private" method="_kYI3JuimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYpNduimEe-n_bccIa6R9w">
            <body>Inicializacion del array de scripts</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kJYCYOimEe-n_bccIa6R9w" name="get" method="_kYJePOimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYp0gOimEe-n_bccIa6R9w">
            <body>Consigue los datos de un cliente de la base de datos&#xD;
	 * @param DNI&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJYCYeimEe-n_bccIa6R9w" name="DNI">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kVxfpuimEe-n_bccIa6R9w" type="_kKqb0uimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kJYpcOimEe-n_bccIa6R9w" name="checkCreden" method="_kYJeP-imEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYp0geimEe-n_bccIa6R9w">
            <body>Comprueba las credenciales de un cliente sean correctas&#xD;
	 * @param user&#xD;
	 * @param pass&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJYpceimEe-n_bccIa6R9w" name="user">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kJYpcuimEe-n_bccIa6R9w" name="pass">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kJYpc-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJZQgOimEe-n_bccIa6R9w" name="getLista" method="_kYKFROimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYp0g-imEe-n_bccIa6R9w">
            <body>Recupera de la base de datos todos los clientes&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kXBc0eimEe-n_bccIa6R9w" type="_kVvqcOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kVwRgeimEe-n_bccIa6R9w" name="insert" method="_kYJeMOimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYpNd-imEe-n_bccIa6R9w">
            <body>Esta funcion inserta un cliente nuevo en la tabla cliente con todos los parametros de cliente. Devuelve true siempre que el usuario exista o haya sido insertado.</body>
          </ownedComment>
          <ownedParameter xmi:id="_kVwRguimEe-n_bccIa6R9w" name="nuevo" type="_kKqb0uimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kVw4kOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kVw4keimEe-n_bccIa6R9w" name="delete" method="_kYJeM-imEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYpNeOimEe-n_bccIa6R9w">
            <body>Esta funcion borra un cliente nuevo en la tabla cliente con todos los parametros de cliente</body>
          </ownedComment>
          <ownedParameter xmi:id="_kVw4kuimEe-n_bccIa6R9w" name="aBorrar" type="_kKqb0uimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kVw4k-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kVxfoOimEe-n_bccIa6R9w" name="update" method="_kYJeNuimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYpNeeimEe-n_bccIa6R9w">
            <body>Esta funcion modifica un cliente nuevo en la tabla cliente con todos los parametros de cliente</body>
          </ownedComment>
          <ownedParameter xmi:id="_kVxfoeimEe-n_bccIa6R9w" name="modificaciones" type="_kKqb0uimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kVxfouimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kVxfo-imEe-n_bccIa6R9w" name="check" method="_kYJeOeimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYpNeuimEe-n_bccIa6R9w">
            <body>Comprueba la existencia en la base de datos de un cliente&#xD;
	 * @param cliente&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kVxfpOimEe-n_bccIa6R9w" name="cliente" type="_kKqb0uimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kVxfpeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kVyGsOimEe-n_bccIa6R9w" name="getListaFiltrada" method="_kYKFQOimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYp0guimEe-n_bccIa6R9w">
            <body>Devuelve un array con los clientes filtrada por las necesidades&#xD;
	 * @param filtro&#xD;
	 * @param trabajador&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kVyGseimEe-n_bccIa6R9w" name="filtro" type="_kKqb0uimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kVyGsuimEe-n_bccIa6R9w" name="trabajador">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kXBc0OimEe-n_bccIa6R9w" type="_kVvqcOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kJc64OimEe-n_bccIa6R9w" name="RepoEspacioComun">
        <ownedComment xmi:id="_kYp0hOimEe-n_bccIa6R9w">
          <body>Conexion a la base de datos que hace las peticiones de espacio comun</body>
        </ownedComment>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYKFRuimEe-n_bccIa6R9w" name="getListaFiltrada" specification="_kV3mQOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYKFR-imEe-n_bccIa6R9w" name="filtro" type="_kLBoMOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYKFSOimEe-n_bccIa6R9w" type="_kVvqcOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>String query = &#xD;
				&quot;SELECT  &quot;&#xD;
					+ &quot;h.id, &quot;&#xD;
					+ &quot;s.num, &quot;&#xD;
					+ &quot;s.capacidad, &quot;&#xD;
					+ &quot;s.pvp, &quot;&#xD;
					+ &quot;s.tlfno, &quot;&#xD;
					+ &quot;e.tipo &quot;&#xD;
				+ &quot;FROM &quot;&#xD;
					+ &quot;EspaciosComunes e &quot;&#xD;
					+ &quot;JOIN sala s USING(id, num) &quot;&#xD;
					+ &quot;JOIN HOTEL H USING(ID) &quot;&#xD;
				+ &quot;WHERE &quot;&#xD;
					+ &quot;(h.nom = ? or ? = \&quot;\&quot;) and &quot;&#xD;
					+ &quot;(h.ciu = ? or ? = \&quot;\&quot;) &quot;&#xD;
				+ &quot;ORDER BY &quot;&#xD;
					+ &quot;h.id ASC, &quot;&#xD;
					+ &quot;s.num ASC;&quot;;&#xD;
		&#xD;
		try (PreparedStatement pS = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
			&#xD;
			if (filtro.getHotel() != null &amp;&amp; !filtro.getHotel().getNombre().equals(&quot;&quot;)) {&#xD;
				pS.setString(1, filtro.getHotel().getNombre());&#xD;
				pS.setString(2, filtro.getHotel().getNombre());&#xD;
			} else {&#xD;
				pS.setString(1, &quot;&quot;);&#xD;
				pS.setString(2, &quot;&quot;);&#xD;
			}&#xD;
				&#xD;
			if (filtro.getHotel() != null &amp;&amp; !filtro.getHotel().getCiudad().equals(&quot;&quot;)) {&#xD;
				pS.setString(3, filtro.getHotel().getCiudad());&#xD;
				pS.setString(4, filtro.getHotel().getCiudad());&#xD;
			} else {&#xD;
				pS.setString(3, &quot;&quot;);&#xD;
				pS.setString(4, &quot;&quot;);&#xD;
			}&#xD;
			&#xD;
			ResultSet rS = pS.executeQuery();&#xD;
						&#xD;
			ArrayList&lt;EspacioComun> lista = new ArrayList&lt;>();&#xD;
			RepoHotel rH = new RepoHotel();&#xD;
			while (rS.next()) {&#xD;
				EspacioComun e = new EspacioComun(&#xD;
						rS.getInt(2),&#xD;
						rS.getInt(3),&#xD;
						rS.getString(5),&#xD;
						rS.getDouble(4),&#xD;
						rH.get(rS.getInt(1)),&#xD;
						rS.getString(6)&#xD;
						);&#xD;
				lista.add(e);&#xD;
			}&#xD;
			&#xD;
			return lista;&#xD;
&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		&#xD;
		&#xD;
		return null;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYKsUOimEe-n_bccIa6R9w" name="insert" specification="_kV4NUOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYKsUeimEe-n_bccIa6R9w" name="nuevo" type="_kLBoMOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYKsUuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>// Revisa si ya existe el cliente&#xD;
		if(!check(nuevo)) {&#xD;
			&#xD;
			RepoSala rSa = new RepoSala();&#xD;
			rSa.insert(nuevo);&#xD;
			&#xD;
			String query = &quot;INSERT INTO espaciosComunes (id, num, tipo) &quot;&#xD;
					+ &quot;VALUES &quot;&#xD;
					+ &quot;(?, ?, ?);&quot;;&#xD;
			&#xD;
			//Si no existe el cliente, hace la consulta a la BBDD&#xD;
	        try (PreparedStatement preparedStatement = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
	            preparedStatement.setInt(1, nuevo.getHotel().getID());&#xD;
	            preparedStatement.setInt(2, nuevo.getNum());&#xD;
	            preparedStatement.setString(3, nuevo.getTipo());&#xD;
	            &#xD;
	            preparedStatement.executeUpdate();&#xD;
		        &#xD;
		        //Comprueba si la insercion se ha producido y devuelve en funcion de esta&#xD;
		        if (check(nuevo)) {&#xD;
		        	System.out.print(&quot;\n~~~ Espacio comun creada correctamente ~~~\n&quot;);&#xD;
		        	return true;&#xD;
		        } else {&#xD;
		        	System.out.print(&quot;\n>>> Se ha producido un error &lt;&lt;&lt;\n\n&quot;);&#xD;
		        	return false;&#xD;
		        }&#xD;
&#xD;
			//En caso de que haya algun error en la base lo coge aqui&#xD;
			} catch (SQLException e) {&#xD;
				e.printStackTrace();&#xD;
				System.out.println(&quot;Error al insertar el nuevo espacio comun&quot;);&#xD;
				return false;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		//Si el cliente existe antes de la insercion devuelve false. &#xD;
		System.out.println(&quot;La sala ya existe&quot;);&#xD;
		return true;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYKsU-imEe-n_bccIa6R9w" name="check" specification="_kV4NU-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYKsVOimEe-n_bccIa6R9w" name="espacioComun" type="_kLBoMOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYKsVeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>String query = &quot;SELECT * FROM espacioscomunes &quot;&#xD;
				+ &quot; WHERE id = ? and num = ?&quot;;&#xD;
		&#xD;
		try (PreparedStatement preparedStatement = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
	        preparedStatement.setInt(1, espacioComun.getHotel().getID());&#xD;
			preparedStatement.setInt(2, espacioComun.getNum());&#xD;
	        ResultSet rS = preparedStatement.executeQuery();&#xD;
	        if (rS.next()) {&#xD;
	        	return true;&#xD;
	        } else {&#xD;
	        	return false;&#xD;
	        }&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYKsVuimEe-n_bccIa6R9w" name="update" specification="_kV40YeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYKsV-imEe-n_bccIa6R9w" name="modificaciones" type="_kLBoMOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYKsWOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>//Inicializo un cliente que va a recibir los datos del cliente original, lo hago fuera del if para poder usarlo despues.&#xD;
		EspacioComun original = new EspacioComun(0, 0, &quot;&quot;, 0, null, &quot;&quot;);&#xD;
		&#xD;
		// Copruebo que me han pasado el Primary Key correcto&#xD;
		if (!((modificaciones.getNum() != 0) &amp;&amp; (modificaciones.getHotel() == null))) {&#xD;
			&#xD;
			// Meto los datos del cliente original en el cliente creado anterior&#xD;
			original = get(modificaciones.getHotel().getID(), modificaciones.getNum());&#xD;
			&#xD;
			// Reviso si un dato esta por defecto y en caso de que no lo este en modificaciones lo tomo como una modificacion del original y lo seteo.&#xD;
			if (modificaciones.getCapacidad() != 0) original.setCapacidad(modificaciones.getCapacidad());&#xD;
			if (!modificaciones.getTlfno().equals(&quot;&quot;)) original.setTlfno(modificaciones.getTlfno());&#xD;
			if (modificaciones.getPvp() != 0) original.setPvp(modificaciones.getPvp());&#xD;
			if (!modificaciones.getTipo().equals(&quot;&quot;)) original.setTipo(modificaciones.getTipo());&#xD;
		&#xD;
		// En caso de no tener el DNI correcto devuelvo error&#xD;
		} else {&#xD;
			System.out.println(&quot;Error al insertar el Id de hotel y Numero de sala&quot;);&#xD;
			return false;&#xD;
		}&#xD;
				&#xD;
		// Revisa si existe el cliente&#xD;
		if(check(original)) {&#xD;
			&#xD;
			RepoSala rSa = new RepoSala();&#xD;
			rSa.update(modificaciones);&#xD;
			&#xD;
			String query = &quot;UPDATE espacioscomunes &quot;&#xD;
					+ &quot;SET tipo = ? &quot;&#xD;
					+ &quot;WHERE id = ? and num = ? ;&quot;;&#xD;
			&#xD;
			//Si existe el cliente, ejecuta el borrado en la BBDD&#xD;
			try (PreparedStatement preparedStatement = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
		        preparedStatement.setString(1, original.getTipo());&#xD;
		        preparedStatement.setInt(2, original.getHotel().getID());&#xD;
		        preparedStatement.setInt(3, original.getNum());&#xD;
		        System.out.println(preparedStatement);&#xD;
		        &#xD;
		        preparedStatement.executeUpdate();&#xD;
		        &#xD;
		        //Comprueba si la modificacion se ha producido y devuelve lo contrario en funcion de esta&#xD;
		        return !check(original);&#xD;
&#xD;
			//En caso de que haya algun error en la base lo coge aqui&#xD;
			} catch (SQLException e) {&#xD;
				System.out.println(&quot;Error al actualizar el espacio comun&quot; +e);&#xD;
				return false;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		//Si el cliente existe antes de la insercion devuelve false. &#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYKsWeimEe-n_bccIa6R9w" name="get" specification="_kJewEOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYKsWuimEe-n_bccIa6R9w" name="idHotel">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYKsW-imEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYKsXOimEe-n_bccIa6R9w" type="_kLBoMOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>String query = &quot;SELECT * FROM espacioscomunes natural join sala &quot;&#xD;
				+ &quot; WHERE id = ? and num = ?&quot;;&#xD;
		&#xD;
		try (PreparedStatement pS = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
			pS.setInt(1, idHotel);&#xD;
			pS.setInt(2, num);&#xD;
			ResultSet rS = pS.executeQuery();&#xD;
			if (rS.next()) {&#xD;
				RepoHotel rH = new RepoHotel();&#xD;
				EspacioComun e = new EspacioComun(&#xD;
					rS.getInt(2),&#xD;
					rS.getInt(4),&#xD;
					rS.getString(5),&#xD;
					rS.getDouble(6),&#xD;
					rH.get(rS.getInt(1)),&#xD;
					rS.getString(3)&#xD;
				);&#xD;
				return e;&#xD;
			} else {&#xD;
				return null;&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return null;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYKsXeimEe-n_bccIa6R9w" name="delete" specification="_kV40ZeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYKsXuimEe-n_bccIa6R9w" name="aBorrar" type="_kLBoMOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYKsX-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>// Revisa si existe el cliente&#xD;
		if(check(aBorrar)) {&#xD;
&#xD;
			String query = &quot;DELETE FROM sala &quot;&#xD;
					+ &quot;WHERE id = ? and num = ?&quot;;&#xD;
			&#xD;
			//Si existe el cliente, ejecuta el borrado en la BBDD&#xD;
			try (PreparedStatement preparedStatement = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
	            preparedStatement.setInt(1, aBorrar.getHotel().getID());&#xD;
	            preparedStatement.setInt(2, aBorrar.getNum());&#xD;
	            preparedStatement.executeUpdate();&#xD;
		        &#xD;
		        //Comprueba si la insercion se ha producido y devuelve lo contrario en funcion de esta&#xD;
		        return !check(aBorrar);&#xD;
&#xD;
			//En caso de que haya algun error en la base lo coge aqui&#xD;
			} catch (SQLException e) {&#xD;
				System.out.println(&quot;Error al eliminar el espacio comun&quot;);&#xD;
				return false;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		//Si el cliente existe antes de la insercion devuelve false. &#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kJewEOimEe-n_bccIa6R9w" name="get" method="_kYKsWeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kJewEeimEe-n_bccIa6R9w" name="idHotel">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kJewEuimEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kV40ZOimEe-n_bccIa6R9w" type="_kLBoMOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kV3mQOimEe-n_bccIa6R9w" name="getListaFiltrada" method="_kYKFRuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kV3mQeimEe-n_bccIa6R9w" name="filtro" type="_kLBoMOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kXCD4OimEe-n_bccIa6R9w" type="_kVvqcOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kV4NUOimEe-n_bccIa6R9w" name="insert" method="_kYKsUOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kV4NUeimEe-n_bccIa6R9w" name="nuevo" type="_kLBoMOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kV4NUuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kV4NU-imEe-n_bccIa6R9w" name="check" method="_kYKsU-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kV4NVOimEe-n_bccIa6R9w" name="espacioComun" type="_kLBoMOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kV40YOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kV40YeimEe-n_bccIa6R9w" name="update" method="_kYKsVuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kV40YuimEe-n_bccIa6R9w" name="modificaciones" type="_kLBoMOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kV40Y-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kV40ZeimEe-n_bccIa6R9w" name="delete" method="_kYKsXeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kV40ZuimEe-n_bccIa6R9w" name="aBorrar" type="_kLBoMOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kV5bcOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kJglQOimEe-n_bccIa6R9w" name="RepoHabitacion">
        <ownedComment xmi:id="_kYp0heimEe-n_bccIa6R9w">
          <body>Consultas de la BBDD de habitaciones</body>
        </ownedComment>
        <ownedAttribute xmi:id="_kXbFceimEe-n_bccIa6R9w" name="SQLScripts" visibility="private" type="_kVvqcOimEe-n_bccIa6R9w" association="_kZCPAOimEe-n_bccIa6R9w">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_kXbsgeimEe-n_bccIa6R9w" value="new ArrayList&lt;>()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYLTYOimEe-n_bccIa6R9w" name="RepoHabitacion" specification="_kJhzYOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYLTYeimEe-n_bccIa6R9w" type="_kJglQOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>inicializarArray();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYLTYuimEe-n_bccIa6R9w" name="inicializarArray" specification="_kJiacOimEe-n_bccIa6R9w">
          <language>java</language>
          <body>// Insertar	0&#xD;
		this.SQLScripts.add( &quot;INSERT INTO habitacion (id, num, tipohab) &quot;&#xD;
				+ &quot;VALUES &quot;&#xD;
				+ &quot;(?, ?, ?)&quot;&#xD;
				);&#xD;
		&#xD;
		// Eliminar 1&#xD;
		this.SQLScripts.add( &quot;DELETE &quot;&#xD;
				+ &quot;WHERE id = ? and num = ?&quot;&#xD;
				);&#xD;
		&#xD;
		// Modificar 2		&#xD;
		this.SQLScripts.add( &quot;UPDATE habitacion &quot;&#xD;
				+ &quot;SET id = ?, num = ?, tipoHab = ? &quot;&#xD;
				+ &quot; WHERE id = ? and num = ?&quot;&#xD;
				);&#xD;
		&#xD;
		// Comprobar existencia	3&#xD;
		this.SQLScripts.add( &quot;SELECT * FROM habitacion &quot;&#xD;
				+ &quot; WHERE id = ? and num = ?;&quot;&#xD;
				);&#xD;
		&#xD;
		// Traer informarcion 4	&#xD;
		this.SQLScripts.add( &quot;SELECT * FROM habitacion natural join sala &quot;&#xD;
				+ &quot; WHERE id = ? and num = ?&quot;&#xD;
				);&#xD;
		&#xD;
		// Otros&#xD;
		// Recuperar la habitacion libre mas cercana de un tipo 5&#xD;
		this.SQLScripts.add(&#xD;
				&quot;SELECT &quot;&#xD;
					+ &quot;s.num, &quot;&#xD;
					+ &quot;s.capacidad, &quot;&#xD;
					+ &quot;s.tlfno, &quot;&#xD;
					+ &quot;s.pvp, &quot;&#xD;
					+ &quot;h.tipohab &quot;&#xD;
				+ &quot;FROM &quot;&#xD;
					+ &quot;habitacion h &quot;&#xD;
					+ &quot;JOIN sala s USING(id, num) &quot;&#xD;
					+ &quot;LEFT JOIN reserva r ON &quot;&#xD;
						+ &quot;r.id = s.id AND &quot;&#xD;
						+ &quot;r.num = s.num AND &quot;&#xD;
						+ &quot;? BETWEEN r.FecIni AND r.FecFin AND&quot;&#xD;
						+ &quot;? BETWEEN r.fecini and r.fecfin &quot;&#xD;
				+ &quot;WHERE &quot;&#xD;
					+ &quot;r.id IS null AND &quot;&#xD;
					+ &quot;h.tipohab = ? AND &quot;&#xD;
					+ &quot;h.id = ? &quot;&#xD;
				+ &quot;ORDER BY &quot;&#xD;
					+ &quot;s.pvp ASC;&quot;&#xD;
				);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYLTY-imEe-n_bccIa6R9w" name="insert" specification="_kV6CgOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYLTZOimEe-n_bccIa6R9w" name="nuevo" type="_kLIV4OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYLTZeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>// Comprueba que los scrpits estan en el array y si no esta lo inicializa&#xD;
		if (this.SQLScripts.isEmpty()) {&#xD;
			inicializarArray();&#xD;
		}&#xD;
		&#xD;
		// Revisa si ya existe el cliente&#xD;
		if(!check(nuevo)) {&#xD;
			&#xD;
			RepoSala rSa = new RepoSala();&#xD;
			rSa.insert(nuevo);&#xD;
			&#xD;
			String query = &quot;INSERT INTO habitacion (id, num, tipohab) &quot;&#xD;
					+ &quot;VALUES &quot;&#xD;
					+ &quot;(?, ?, ?)&quot;;&#xD;
			&#xD;
			//Si no existe el cliente, hace la consulta a la BBDD&#xD;
	        try (PreparedStatement preparedStatement = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
	            preparedStatement.setInt(1, nuevo.getHotel().getID());&#xD;
	            preparedStatement.setInt(2, nuevo.getNum());&#xD;
	            preparedStatement.setString(3, nuevo.getTipo().toString());&#xD;
	            preparedStatement.executeUpdate();&#xD;
		        &#xD;
		        //Comprueba si la insercion se ha producido y devuelve en funcion de esta&#xD;
		        if (check(nuevo)) {&#xD;
		        	System.out.print(&quot;\n~~~ Habitacion creada correctamente ~~~\n&quot;);&#xD;
		        	return true;&#xD;
		        } else {&#xD;
		        	System.out.print(&quot;\n>>> Se ha producido un error &lt;&lt;&lt;\n\n&quot;);&#xD;
		        	return false;&#xD;
		        }&#xD;
&#xD;
			//En caso de que haya algun error en la base lo coge aqui&#xD;
			} catch (SQLException e) {&#xD;
				e.printStackTrace();&#xD;
				System.out.println(&quot;Error al insertar la nueva habitacion&quot;);&#xD;
				return false;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		//Si el cliente existe antes de la insercion devuelve false. &#xD;
		System.out.println(&quot;El usuario ya existe&quot;);&#xD;
		return true;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYLTZuimEe-n_bccIa6R9w" name="delete" specification="_kV6Cg-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYLTZ-imEe-n_bccIa6R9w" name="aBorrar" type="_kLIV4OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYLTaOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>// Comprueba que los scrpits estan en el array y si no esta lo inicializa&#xD;
		if (SQLScripts.isEmpty()) {&#xD;
			inicializarArray();&#xD;
		}&#xD;
		&#xD;
		// Revisa si existe el cliente&#xD;
		if(check(aBorrar)) {&#xD;
			&#xD;
			String query = &quot;DELETE FROM sala &quot;&#xD;
					+ &quot;WHERE id = ? and num = ?&quot;;&#xD;
			&#xD;
			//Si existe el cliente, ejecuta el borrado en la BBDD&#xD;
			try (PreparedStatement pS = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
	            pS.setInt(1, aBorrar.getHotel().getID());&#xD;
				pS.setInt(2, aBorrar.getNum());&#xD;
				&#xD;
	            pS.executeUpdate();&#xD;
		        &#xD;
		        //Comprueba si la insercion se ha producido y devuelve lo contrario en funcion de esta&#xD;
		        return true;&#xD;
&#xD;
			//En caso de que haya algun error en la base lo coge aqui&#xD;
			} catch (SQLException e) {&#xD;
				System.out.println(&quot;Error al eliminar la habitacion&quot; + e);&#xD;
				return false;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		//Si el cliente existe antes de la insercion devuelve false. &#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYL6cOimEe-n_bccIa6R9w" name="update" specification="_kV6pkOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYL6ceimEe-n_bccIa6R9w" name="modificaciones" type="_kLIV4OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYL6cuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>// Comprueba que los scrpits estan en el array y si no esta lo inicializa&#xD;
		if (SQLScripts.isEmpty()) {&#xD;
			inicializarArray();&#xD;
		}&#xD;
		&#xD;
		//Inicializo un cliente que va a recibir los datos del cliente original, lo hago fuera del if para poder usarlo despues.&#xD;
		Habitacion original = new Habitacion(null, 0, 0, &quot;&quot;, 0, &quot;&quot;);&#xD;
		&#xD;
		// Copruebo que me han pasado el Primary Key correcto&#xD;
		if (!((modificaciones.getNum() != 0) &amp;&amp; (modificaciones.getHotel() == null))) {&#xD;
			&#xD;
			// Meto los datos del cliente original en el cliente creado anterior&#xD;
			original = get(modificaciones.getHotel().getID(), modificaciones.getNum());&#xD;
			&#xD;
			// Reviso si un dato esta por defecto y en caso de que no lo este en modificaciones lo tomo como una modificacion del original y lo seteo.&#xD;
			if (modificaciones.getCapacidad() != 0) original.setCapacidad(modificaciones.getCapacidad());&#xD;
			if (!modificaciones.getTlfno().equals(&quot;&quot;)) original.setTlfno(modificaciones.getTlfno());&#xD;
			if (modificaciones.getPvp() != 0) original.setPvp(modificaciones.getPvp());&#xD;
			if (!modificaciones.getTipo().equals(Habitacion.tipoHab.desconocido)) original.setTipo(modificaciones.getTipo());&#xD;
		&#xD;
		// En caso de no tener el DNI correcto devuelvo error&#xD;
		} else {&#xD;
			System.out.println(&quot;Error al insertar la sala&quot;);&#xD;
			return false;&#xD;
		}&#xD;
				&#xD;
		// Revisa si existe el cliente&#xD;
		if(check(original)) {&#xD;
			&#xD;
			RepoSala rSa = new RepoSala();&#xD;
			rSa.update(original);&#xD;
			&#xD;
			String query = &quot;UPDATE habitacion &quot;&#xD;
					+ &quot;SET tipoHab = ? &quot;&#xD;
					+ &quot; WHERE id = ? and num = ?&quot;;&#xD;
			&#xD;
			//Si existe el cliente, ejecuta el borrado en la BBDD&#xD;
			try (PreparedStatement preparedStatement = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
				preparedStatement.setString(1, original.getTipo().toString());&#xD;
				preparedStatement.setInt(2, original.getHotel().getID());&#xD;
				preparedStatement.setInt(3, original.getNum());&#xD;
				&#xD;
		        preparedStatement.executeUpdate();&#xD;
		        &#xD;
		        //Comprueba si la modificacion se ha producido y devuelve lo contrario en funcion de esta&#xD;
		        return true;&#xD;
&#xD;
			//En caso de que haya algun error en la base lo coge aqui&#xD;
			} catch (SQLException e) {&#xD;
				System.out.println(&quot;Error al actualizar la habitacion&quot; + e);&#xD;
				return false;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		//Si el cliente existe antes de la insercion devuelve false. &#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYL6c-imEe-n_bccIa6R9w" name="check" specification="_kV6pk-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYL6dOimEe-n_bccIa6R9w" name="habitacion" type="_kLIV4OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYL6deimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if (this.SQLScripts.isEmpty()) {&#xD;
			inicializarArray();&#xD;
		}&#xD;
		&#xD;
		try (PreparedStatement preparedStatement = ConectMySQL.conexion.prepareStatement(SQLScripts.get(3))) {&#xD;
	        preparedStatement.setInt(1, habitacion.getHotel().getID());&#xD;
			preparedStatement.setInt(2, habitacion.getNum());&#xD;
	        ResultSet rS = preparedStatement.executeQuery();&#xD;
	        if (rS.next()) {&#xD;
	        	return true;&#xD;
	        } else {&#xD;
	        	return false;&#xD;
	        }&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYL6duimEe-n_bccIa6R9w" name="get" specification="_kJjBgOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYL6d-imEe-n_bccIa6R9w" name="idHotel">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYL6eOimEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYL6eeimEe-n_bccIa6R9w" type="_kLIV4OimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>if (this.SQLScripts.isEmpty()) {&#xD;
			inicializarArray();&#xD;
		}&#xD;
		try (PreparedStatement pS = ConectMySQL.conexion.prepareStatement(this.SQLScripts.get(4))) {&#xD;
			pS.setInt(1, idHotel);&#xD;
			pS.setInt(2, num);&#xD;
			ResultSet rS = pS.executeQuery();&#xD;
			if (rS.next()) {&#xD;
				RepoHotel rH = new RepoHotel();&#xD;
				Habitacion h = new Habitacion(&#xD;
					rH.get(rS.getInt(1)),&#xD;
					rS.getInt(2),&#xD;
					rS.getInt(4),&#xD;
					rS.getString(5),&#xD;
					rS.getDouble(6),&#xD;
					rS.getString(3)&#xD;
				);&#xD;
				return h;&#xD;
			} else {&#xD;
				return null;&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return null;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYMhgOimEe-n_bccIa6R9w" name="getByTypeAndFirstDate" specification="_kJjBg-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYMhgeimEe-n_bccIa6R9w" name="tipoDeHab">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYMhguimEe-n_bccIa6R9w" type="_kLIV4OimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>if (this.SQLScripts.isEmpty()) {&#xD;
			inicializarArray();&#xD;
		}&#xD;
		&#xD;
		String query = &quot;SELECT &quot;&#xD;
					+ &quot;s.num, &quot;&#xD;
					+ &quot;s.capacidad, &quot;&#xD;
					+ &quot;s.tlfno, &quot;&#xD;
					+ &quot;s.pvp, &quot;&#xD;
					+ &quot;h.tipohab &quot;&#xD;
				+ &quot;FROM &quot;&#xD;
					+ &quot;habitacion h &quot;&#xD;
					+ &quot;JOIN sala s USING(id, num) &quot;&#xD;
					+ &quot;LEFT JOIN reserva r ON &quot;&#xD;
						+ &quot;r.id = s.id AND &quot;&#xD;
						+ &quot;r.num = s.num AND &quot;&#xD;
						+ &quot;? BETWEEN r.FecIni AND r.FecFin AND&quot;&#xD;
						+ &quot;? BETWEEN r.fecini and r.fecfin &quot;&#xD;
				+ &quot;WHERE &quot;&#xD;
					+ &quot;r.id IS null AND &quot;&#xD;
					+ &quot;h.tipohab = ? AND &quot;&#xD;
					+ &quot;h.id = ? AND &quot;&#xD;
					+ &quot;h.num not in (&quot;;&#xD;
		if(MenuCarrito.carrito.isEmpty()) {&#xD;
			query += &quot;\&quot;\&quot;&quot;;&#xD;
		} else {&#xD;
			for (int i = 0 ; i &lt; MenuCarrito.carrito.size(); i++) {&#xD;
				query += (i == MenuCarrito.carrito.size()) ? &quot;? &quot; : &quot;?, &quot;;&#xD;
				&#xD;
			}&#xD;
		}	&#xD;
		query	+= &quot;) ORDER BY &quot;&#xD;
					+ &quot;s.pvp ASC;&quot;&#xD;
				;&#xD;
		&#xD;
		try (PreparedStatement pS = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
			pS.setDate(1, MenuProductos.fecIni);&#xD;
			pS.setDate(2, MenuProductos.fecFin);&#xD;
			pS.setString(3, tipoDeHab);&#xD;
			pS.setInt(4, MenuPrincipal.hotel.getID());&#xD;
			if(!MenuCarrito.carrito.isEmpty()) {&#xD;
		    	int i = 0;&#xD;
		    	for (Reserva r : MenuCarrito.carrito) {&#xD;
		    		i++;&#xD;
		    		pS.setInt(i+4, r.getSala().getNum());&#xD;
		    	}&#xD;
			}&#xD;
			ResultSet rS = pS.executeQuery();&#xD;
			if (rS.next()) {&#xD;
				Habitacion h = new Habitacion(&#xD;
					MenuPrincipal.hotel,&#xD;
					rS.getInt(1),&#xD;
					rS.getInt(2),&#xD;
					rS.getString(3),&#xD;
					rS.getDouble(4),&#xD;
					rS.getString(5)	&#xD;
				);&#xD;
				return h;&#xD;
			} else {&#xD;
				return null;&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return null;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYMhg-imEe-n_bccIa6R9w" name="getListaFiltrada" specification="_kV7QoOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYMhhOimEe-n_bccIa6R9w" name="filtro" type="_kLIV4OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYMhheimEe-n_bccIa6R9w" name="disponible">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYMhhuimEe-n_bccIa6R9w" type="_kVvqcOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>String query = &#xD;
				&quot;SELECT  &quot;&#xD;
					+ &quot;h.nom, &quot;&#xD;
					+ &quot;s.num, &quot;&#xD;
					+ &quot;s.capacidad, &quot;&#xD;
					+ &quot;s.pvp, &quot;&#xD;
					+ &quot;s.tlfno, &quot;&#xD;
					+ &quot;ha.tipohab, &quot;&#xD;
					+ &quot;case when current_date() between r.fecini and r.fecfin then true else false end &quot;&#xD;
				+ &quot;FROM &quot;&#xD;
					+ &quot;habitacion ha &quot;&#xD;
					+ &quot;JOIN sala s USING(id, num) &quot;&#xD;
					+ &quot;JOIN HOTEL H USING(ID) &quot;&#xD;
					+ &quot;LEFT JOIN reserva r USING(id, num) &quot;&#xD;
				+ &quot;WHERE &quot;&#xD;
					+ &quot;(h.nom = ? or ? = \&quot;\&quot;) and &quot;&#xD;
					+ &quot;(h.ciu = ? or ? = \&quot;\&quot;) &quot;&#xD;
				+ &quot;ORDER BY &quot;&#xD;
					+ &quot;h.id ASC, &quot;&#xD;
					+ &quot;s.num ASC;&quot;;&#xD;
		&#xD;
		try (PreparedStatement pS = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
			&#xD;
			if (filtro.getHotel() != null &amp;&amp; !filtro.getHotel().getNombre().equals(&quot;&quot;)) {&#xD;
				pS.setString(1, filtro.getHotel().getNombre());&#xD;
				pS.setString(2, filtro.getHotel().getNombre());&#xD;
			} else {&#xD;
				pS.setString(1, &quot;&quot;);&#xD;
				pS.setString(2, &quot;&quot;);&#xD;
			}&#xD;
				&#xD;
			if (filtro.getHotel() != null &amp;&amp; !filtro.getHotel().getCiudad().equals(&quot;&quot;)) {&#xD;
				pS.setString(3, filtro.getHotel().getCiudad());&#xD;
				pS.setString(4, filtro.getHotel().getCiudad());&#xD;
			} else {&#xD;
				pS.setString(3, &quot;&quot;);&#xD;
				pS.setString(4, &quot;&quot;);&#xD;
			}&#xD;
			&#xD;
			ResultSet rS = pS.executeQuery();&#xD;
						&#xD;
			ArrayList&lt;HabDisponible> lista = new ArrayList&lt;>();&#xD;
			RepoHotel rH = new RepoHotel();&#xD;
			while (rS.next()) {&#xD;
				Habitacion h = new Habitacion(&#xD;
						rH.get(rH.getPKByName(rS.getString(1))),&#xD;
						rS.getInt(2),&#xD;
						rS.getInt(3),&#xD;
						rS.getString(5),&#xD;
						rS.getDouble(4),&#xD;
						rS.getString(6)&#xD;
						);&#xD;
&#xD;
				HabDisponible hd = new HabDisponible(h, rS.getBoolean(7));&#xD;
				if (disponible == -1) {&#xD;
					lista.add(hd);&#xD;
				} else if (disponible == 1) {&#xD;
					if (hd.isDisponible()) lista.add(hd);&#xD;
				} else if (disponible == 0) {&#xD;
					if (!hd.isDisponible()) lista.add(hd); &#xD;
				}&#xD;
			}&#xD;
			return lista;&#xD;
&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		&#xD;
		&#xD;
		return null;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kJhzYOimEe-n_bccIa6R9w" name="RepoHabitacion" method="_kYLTYOimEe-n_bccIa6R9w">
          <eAnnotations xmi:id="_kJhzYeimEe-n_bccIa6R9w" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kJhzYuimEe-n_bccIa6R9w" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_kYp0huimEe-n_bccIa6R9w">
            <body>Constructor del repositorio</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJhzY-imEe-n_bccIa6R9w" type="_kJglQOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kJiacOimEe-n_bccIa6R9w" name="inicializarArray" visibility="private" method="_kYLTYuimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYp0h-imEe-n_bccIa6R9w">
            <body>Inicializa el array de scripts</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kJjBgOimEe-n_bccIa6R9w" name="get" method="_kYL6duimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYp0jOimEe-n_bccIa6R9w">
            <body>Recuperas los datos de una habitacion&#xD;
	 * @param idHotel&#xD;
	 * @param num&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJjBgeimEe-n_bccIa6R9w" name="idHotel">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kJjBguimEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kV6pluimEe-n_bccIa6R9w" type="_kLIV4OimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kJjBg-imEe-n_bccIa6R9w" name="getByTypeAndFirstDate" method="_kYMhgOimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYqbkOimEe-n_bccIa6R9w">
            <body>Busca la habitacion libre de un tipo mas cercana&#xD;
	 * @param tipoDeHab&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJjokOimEe-n_bccIa6R9w" name="tipoDeHab">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kV6pl-imEe-n_bccIa6R9w" type="_kLIV4OimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kV6CgOimEe-n_bccIa6R9w" name="insert" method="_kYLTY-imEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYp0iOimEe-n_bccIa6R9w">
            <body>Inserta una habitacion nueva&#xD;
	 * @param nuevo&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kV6CgeimEe-n_bccIa6R9w" name="nuevo" type="_kLIV4OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kV6CguimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kV6Cg-imEe-n_bccIa6R9w" name="delete" method="_kYLTZuimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYp0ieimEe-n_bccIa6R9w">
            <body>Elimina una habitacion de la bbdd&#xD;
	 * @param aBorrar&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kV6ChOimEe-n_bccIa6R9w" name="aBorrar" type="_kLIV4OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kV6CheimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kV6pkOimEe-n_bccIa6R9w" name="update" method="_kYL6cOimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYp0iuimEe-n_bccIa6R9w">
            <body>Modifica una habitacion de la base de datos&#xD;
	 * @param modificaciones&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kV6pkeimEe-n_bccIa6R9w" name="modificaciones" type="_kLIV4OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kV6pkuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kV6pk-imEe-n_bccIa6R9w" name="check" method="_kYL6c-imEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYp0i-imEe-n_bccIa6R9w">
            <body>Comprueba la existencia de una habitacion&#xD;
	 * @param habitacion&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kV6plOimEe-n_bccIa6R9w" name="habitacion" type="_kLIV4OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kV6pleimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kV7QoOimEe-n_bccIa6R9w" name="getListaFiltrada" method="_kYMhg-imEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYqbkeimEe-n_bccIa6R9w">
            <body>Recupera la informacion de las habitaciones y su disponibilidad actual segun un filtro&#xD;
	 * @param filtro&#xD;
	 * @param disponible&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kV7QoeimEe-n_bccIa6R9w" name="filtro" type="_kLIV4OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kV7QouimEe-n_bccIa6R9w" name="disponible">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kXCq8OimEe-n_bccIa6R9w" type="_kVvqcOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kJldwOimEe-n_bccIa6R9w" name="RepoHotel">
        <ownedComment xmi:id="_kYqbkuimEe-n_bccIa6R9w">
          <body>Consultas a la bbdd de hoteles</body>
        </ownedComment>
        <ownedAttribute xmi:id="_kXcTkOimEe-n_bccIa6R9w" name="SQLScripts" visibility="private" type="_kVvqcOimEe-n_bccIa6R9w" association="_kZCPA-imEe-n_bccIa6R9w">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_kXc6oeimEe-n_bccIa6R9w" value="new ArrayList&lt;>()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYNIkOimEe-n_bccIa6R9w" name="RepoHotel" specification="_kJmr4OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYNIkeimEe-n_bccIa6R9w" type="_kJldwOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>inicializarArray();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYNIkuimEe-n_bccIa6R9w" name="inicializarArray" specification="_kJmr5OimEe-n_bccIa6R9w">
          <language>java</language>
          <body>// Insertar	0&#xD;
		SQLScripts.add( &quot;INSERT hotel&quot;&#xD;
				+ &quot;VALUES (?, ?, ?, ?, ?, ?, ?, SHA2(pass = ?, 256))&quot;&#xD;
				);&#xD;
		&#xD;
		// Eliminar 1&#xD;
		SQLScripts.add( &quot;DELETE cliente&quot;&#xD;
				+ &quot;WHERE DNI = ?&quot;&#xD;
				);&#xD;
		&#xD;
		// Modificar 2		&#xD;
		SQLScripts.add( &quot;UPDATE cliente&quot;&#xD;
				+ &quot;SET DNI = ?, nom = ?, ape = ?, tlfno = ?, email = ?, bTrabajador = ?, tarifa = ?, SHA2(pass = ?, 256)&quot;&#xD;
				+ &quot;WHERE DNI = ?&quot;&#xD;
				);&#xD;
		&#xD;
		// Comprobar existencia 3	&#xD;
		SQLScripts.add( &quot;SELECT * FROM Cliente &quot;&#xD;
				+ &quot;WHERE DNI = ?&quot;&#xD;
				);&#xD;
		&#xD;
		// Traer informarcion 4	&#xD;
		SQLScripts.add( &quot;SELECT * FROM hotel &quot;&#xD;
				+ &quot;WHERE id = ?&quot;&#xD;
				);&#xD;
		&#xD;
		// Otros		&#xD;
		&#xD;
		// Numero de ocupantes de habitaciones en un hotel concreto. 5&#xD;
		SQLScripts.add( &quot;SELECT&quot;&#xD;
				+ &quot;sum(capacidad) from hotel join sala using(id) natural join habitacion where id = ? group by nom;&quot;&#xD;
				);&#xD;
		&#xD;
		// Obtener el nombre de todos los hoteles 6&#xD;
		SQLScripts.add(&quot;SELECT nom FROM hotel;&quot;); // AÑADIR ID&#xD;
		/*&#xD;
		 * wip&#xD;
		 */&#xD;
		&#xD;
		// Obtener el PK de un hotel mediante el nombre del hotel 7&#xD;
		SQLScripts.add(&quot;SELECT id FROM hotel WHERE nom like ?;&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYNIk-imEe-n_bccIa6R9w" name="insert" specification="_kV8ewOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYNIlOimEe-n_bccIa6R9w" name="nuevo" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYNIleimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>// Revisa si ya existe el cliente&#xD;
		if(!check(nuevo)) {&#xD;
			&#xD;
			String query = &#xD;
					&quot;INSERT &quot;&#xD;
						+ &quot;Hotel (nom, ciu, dir, tlfno, email)&quot;&#xD;
					+ &quot;VALUES &quot;&#xD;
						+ &quot;(?, ?, ?, ?, ?) &quot;;&#xD;
			&#xD;
			//Si no existe el cliente, hace la consulta a la BBDD&#xD;
			try (PreparedStatement preparedStatement = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
		        preparedStatement.setString(1, nuevo.getNombre());&#xD;
		        preparedStatement.setString(2, nuevo.getCiudad());&#xD;
		        preparedStatement.setString(3, nuevo.getDir());&#xD;
		        preparedStatement.setString(4, nuevo.getTlfno());&#xD;
		        preparedStatement.setString(5, nuevo.getEmail());&#xD;
		        preparedStatement.executeUpdate();&#xD;
		        &#xD;
		        //Comprueba si la insercion se ha producido y devuelve en funcion de esta&#xD;
		        return check(nuevo);&#xD;
&#xD;
			//En caso de que haya algun error en la base lo coge aqui&#xD;
			} catch (SQLException e) {&#xD;
				System.out.println(&quot;Error al insertar el nuevo hotel&quot;);&#xD;
				return false;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		//Si el cliente existe antes de la insercion devuelve false. &#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYNIluimEe-n_bccIa6R9w" name="delete" specification="_kV8ew-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYNIl-imEe-n_bccIa6R9w" name="aBorrar" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYNImOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>// Comprueba que los scrpits estan en el array y si no esta lo inicializa&#xD;
		if (SQLScripts.isEmpty()) {&#xD;
			inicializarArray();&#xD;
		}&#xD;
		&#xD;
		// Revisa si existe el cliente&#xD;
		if(check(aBorrar)) {&#xD;
			&#xD;
			String query = &#xD;
					&quot;DELETE FROM &quot;&#xD;
						+ &quot;hotel &quot;&#xD;
					+ &quot;WHERE &quot;&#xD;
						+ &quot;id = ?&quot;;&#xD;
			&#xD;
			//Si existe el cliente, ejecuta el borrado en la BBDD&#xD;
			try (PreparedStatement preparedStatement = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
				preparedStatement.setInt(1, aBorrar.getID());&#xD;
		        preparedStatement.executeUpdate();&#xD;
		        &#xD;
		        //Comprueba si la insercion se ha producido y devuelve lo contrario en funcion de esta&#xD;
		        return true;&#xD;
&#xD;
			//En caso de que haya algun error en la base lo coge aqui&#xD;
			} catch (SQLException e) {&#xD;
				System.out.println(&quot;Error al eliminar el cliente&quot;);&#xD;
				return false;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		//Si el cliente existe antes de la insercion devuelve false. &#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYNvoOimEe-n_bccIa6R9w" name="update" specification="_kV9F0eimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYNvoeimEe-n_bccIa6R9w" name="modificaciones" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYNvouimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>// Comprueba que los scrpits estan en el array y si no esta lo inicializa&#xD;
		if (SQLScripts.isEmpty()) {&#xD;
			inicializarArray();&#xD;
		}&#xD;
		&#xD;
		//Inicializo un cliente que va a recibir los datos del cliente original, lo hago fuera del if para poder usarlo despues.&#xD;
		Hotel original = new Hotel(0, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;);&#xD;
		&#xD;
		// Copruebo que me han pasado el ID correcto&#xD;
		if (modificaciones.getID() != 0) {&#xD;
			&#xD;
			// Meto los datos del cliente original en el cliente creado anterior&#xD;
			original = get(modificaciones.getID());&#xD;
			&#xD;
			// Reviso si un dato esta por defecto y en caso de que no lo este en modificaciones lo tomo como una modificacion del original y lo seteo.&#xD;
			if (!modificaciones.getNombre().equals(&quot;&quot;)) original.setNombre(modificaciones.getNombre());&#xD;
			if (!modificaciones.getCiudad().equals(&quot;&quot;)) original.setCiudad(modificaciones.getCiudad());&#xD;
			if (!modificaciones.getDir().equals(&quot;&quot;)) original.setDir(modificaciones.getDir());&#xD;
			if (!modificaciones.getTlfno().equals(&quot;&quot;)) original.setTlfno(modificaciones.getTlfno());&#xD;
			if (!modificaciones.getEmail().equals(&quot;&quot;)) original.setEmail(modificaciones.getEmail());&#xD;
		&#xD;
		// En caso de no tener el DNI correcto devuelvo error&#xD;
		} else {&#xD;
			System.out.println(&quot;Error al insertar el Hotel&quot;);&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		String query = &quot;UPDATE hotel &quot;&#xD;
				+ &quot;SET id = ?, nom = ?, ciu = ?, dir = ?, tlfno = ?, email = ? &quot;&#xD;
				+ &quot;WHERE id = ?&quot;;&#xD;
		&#xD;
		//Si existe el cliente, ejecuta el borrado en la BBDD&#xD;
		try (PreparedStatement preparedStatement = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
	        preparedStatement.setInt(1, original.getID());&#xD;
	        preparedStatement.setString(2, original.getNombre());&#xD;
	        preparedStatement.setString(3, original.getCiudad());&#xD;
	        preparedStatement.setString(4, original.getDir());&#xD;
	        preparedStatement.setString(5, original.getTlfno());&#xD;
	        preparedStatement.setString(6, original.getEmail());&#xD;
	        preparedStatement.setInt(7, original.getID());&#xD;
	        preparedStatement.executeUpdate();&#xD;
	        &#xD;
	        //Comprueba si la modificacion se ha producido y devuelve lo contrario en funcion de esta&#xD;
	        return true;&#xD;
&#xD;
		//En caso de que haya algun error en la base lo coge aqui&#xD;
		} catch (SQLException e) {&#xD;
			System.out.println(&quot;Error al actualizar el Hotel&quot;+e);&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYNvo-imEe-n_bccIa6R9w" name="check" specification="_kV9F1OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYNvpOimEe-n_bccIa6R9w" name="hotel" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYNvpeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if (this.SQLScripts.isEmpty()) {&#xD;
			inicializarArray();&#xD;
		}&#xD;
		&#xD;
 	String query = &quot;SELECT * FROM hotel &quot;&#xD;
				+ &quot;WHERE id = ?&quot;;&#xD;
 	&#xD;
		try (PreparedStatement preparedStatement = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
	        preparedStatement.setInt(1, hotel.getID());&#xD;
	        ResultSet rS = preparedStatement.executeQuery();&#xD;
	        if (rS.next()) {&#xD;
	        	return true;&#xD;
	        } else {&#xD;
	        	return false;&#xD;
	        }&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYNvpuimEe-n_bccIa6R9w" name="get" specification="_kJnS8OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYNvp-imEe-n_bccIa6R9w" name="idHotel">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYNvqOimEe-n_bccIa6R9w" type="_kLN1cOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>if (this.SQLScripts.isEmpty()) {&#xD;
			inicializarArray();&#xD;
		}&#xD;
		&#xD;
		try (PreparedStatement pS = ConectMySQL.conexion.prepareStatement(this.SQLScripts.get(4))) {&#xD;
			pS.setInt(1, idHotel);&#xD;
			ResultSet rS = pS.executeQuery();&#xD;
			if (rS.next()) {&#xD;
				Hotel c = new Hotel(&#xD;
					rS.getInt(1),&#xD;
					rS.getString(2),&#xD;
					rS.getString(3),&#xD;
					rS.getString(4),&#xD;
					rS.getString(5),&#xD;
					rS.getString(6)&#xD;
				);&#xD;
				return c;&#xD;
			} else {&#xD;
				return null;&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return null;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYNvqeimEe-n_bccIa6R9w" name="getTamano" specification="_kJnS8uimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYNvquimEe-n_bccIa6R9w" name="id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYNvq-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>// TODO Auto-generated method stub&#xD;
		return 0;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYNvrOimEe-n_bccIa6R9w" name="getMenuPrincipal" specification="_kJn6AOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYNvreimEe-n_bccIa6R9w" type="_kVvqcOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>ArrayList&lt;String> mP = new ArrayList&lt;>();&#xD;
		String query = SQLScripts.get(6);&#xD;
	    try (&#xD;
	    	PreparedStatement pS = ConectMySQL.conexion.prepareStatement(query);&#xD;
	    	ResultSet resultSet = pS.executeQuery(query)&#xD;
	    ) {&#xD;
	    	while (resultSet.next()) {&#xD;
	       		mP.add(resultSet.getString(&quot;nom&quot;));&#xD;
	       	} &#xD;
	    } catch (SQLException e) {&#xD;
	    	e.printStackTrace();&#xD;
	    }&#xD;
		return mP;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYOWsOimEe-n_bccIa6R9w" name="getPKByName" specification="_kJohEeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYOWseimEe-n_bccIa6R9w" name="nom">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYOWsuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>try ( &#xD;
			PreparedStatement pS = ConectMySQL.conexion.prepareStatement(SQLScripts.get(7));&#xD;
		) { &#xD;
			pS.setString(1, nom);	&#xD;
			ResultSet rS = pS.executeQuery();&#xD;
			rS.next();&#xD;
			return rS.getInt(1);&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		&#xD;
		return 0;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYOWs-imEe-n_bccIa6R9w" name="getListaFiltrada" specification="_kV9s4OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYOWtOimEe-n_bccIa6R9w" name="filtro" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYOWteimEe-n_bccIa6R9w" type="_kVvqcOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>String query = &#xD;
				&quot;SELECT  &quot;&#xD;
					+ &quot;h.nom, &quot;&#xD;
					+ &quot;h.ciu, &quot;&#xD;
					+ &quot;h.dir, &quot;&#xD;
					+ &quot;h.tlfno, &quot;&#xD;
					+ &quot;h.email, &quot;&#xD;
					+ &quot;h.id &quot;&#xD;
				+ &quot;FROM &quot;&#xD;
					+ &quot;Hotel h &quot;&#xD;
				+ &quot;WHERE &quot;&#xD;
					+ &quot;(h.nom = ? or ? = \&quot;\&quot;) and &quot;&#xD;
					+ &quot;(h.tlfno = ? or ? = \&quot;\&quot;) and &quot;&#xD;
					+ &quot;(h.email = ? or ? = \&quot;\&quot;) and &quot;&#xD;
					+ &quot;(h.ciu = ? or ? = \&quot;\&quot;) &quot;&#xD;
				+ &quot;ORDER BY &quot;&#xD;
					+ &quot;h.nom ASC, &quot;&#xD;
					+ &quot;h.id ASC;&quot;;&#xD;
		&#xD;
		try (PreparedStatement pS = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
			&#xD;
			if (!filtro.getNombre().equals(&quot;&quot;)) {&#xD;
				pS.setString(1, filtro.getNombre());&#xD;
				pS.setString(2, filtro.getNombre());&#xD;
			} else {&#xD;
				pS.setString(1, &quot;&quot;);&#xD;
				pS.setString(2, &quot;&quot;);&#xD;
			}&#xD;
			&#xD;
			if (!filtro.getTlfno().equals(&quot;&quot;)) {&#xD;
				pS.setString(3, filtro.getTlfno());&#xD;
				pS.setString(4, filtro.getTlfno());&#xD;
			} else {&#xD;
				pS.setString(3, &quot;&quot;);&#xD;
				pS.setString(4, &quot;&quot;);&#xD;
			}&#xD;
			&#xD;
			if (!filtro.getEmail().equals(&quot;&quot;)) {&#xD;
				pS.setString(5, filtro.getEmail());&#xD;
				pS.setString(6, filtro.getEmail());&#xD;
			} else {&#xD;
				pS.setString(5, &quot;&quot;);&#xD;
				pS.setString(6, &quot;&quot;);&#xD;
			}&#xD;
			&#xD;
			if (!filtro.getCiudad().equals(&quot;&quot;)) {&#xD;
				pS.setString(7, filtro.getCiudad());&#xD;
				pS.setString(8, filtro.getCiudad());&#xD;
			} else {&#xD;
				pS.setString(7, &quot;&quot;);&#xD;
				pS.setString(8, &quot;&quot;);&#xD;
			}&#xD;
			&#xD;
			ResultSet rS = pS.executeQuery();&#xD;
						&#xD;
			ArrayList&lt;Hotel> lista = new ArrayList&lt;>();&#xD;
			while (rS.next()) {&#xD;
				Hotel ho = new Hotel(&#xD;
						rS.getInt(6),&#xD;
						rS.getString(1),&#xD;
						rS.getString(2),&#xD;
						rS.getString(3),&#xD;
						rS.getString(4),&#xD;
						rS.getString(5)&#xD;
						);&#xD;
				lista.add(ho);&#xD;
			}&#xD;
			&#xD;
			return lista;&#xD;
&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		&#xD;
		return null;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kJmr4OimEe-n_bccIa6R9w" name="RepoHotel" method="_kYNIkOimEe-n_bccIa6R9w">
          <eAnnotations xmi:id="_kJmr4eimEe-n_bccIa6R9w" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kJmr4uimEe-n_bccIa6R9w" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_kYqbk-imEe-n_bccIa6R9w">
            <body>Constructor del repositorio</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJmr4-imEe-n_bccIa6R9w" type="_kJldwOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kJmr5OimEe-n_bccIa6R9w" name="inicializarArray" visibility="private" method="_kYNIkuimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYqblOimEe-n_bccIa6R9w">
            <body>Inicializa el array de scripts&#xD;
	 * 0 Insert, 1 Delete, 2 Update, 3 Check, 4 Get, 5 NumOcupantesInHotel, 6 MenuPrincipal, 7 getPKHotelByName</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kJnS8OimEe-n_bccIa6R9w" name="get" method="_kYNvpuimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYqbmeimEe-n_bccIa6R9w">
            <body>Recupera la informacion de un hotel&#xD;
	 * @param idHotel&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJnS8eimEe-n_bccIa6R9w" name="idHotel">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kV9F1-imEe-n_bccIa6R9w" type="_kLN1cOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kJnS8uimEe-n_bccIa6R9w" name="getTamano" isStatic="true" method="_kYNvqeimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYqbmuimEe-n_bccIa6R9w">
            <body>Recupera la capacidad de aforo de las habitaciones de un hotel&#xD;
	 * @param id&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJnS8-imEe-n_bccIa6R9w" name="id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kJnS9OimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJn6AOimEe-n_bccIa6R9w" name="getMenuPrincipal" method="_kYNvrOimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYqbm-imEe-n_bccIa6R9w">
            <body>Recupera la informacion necesaria para hacer el menu principal&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kXDSAOimEe-n_bccIa6R9w" type="_kVvqcOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kJohEeimEe-n_bccIa6R9w" name="getPKByName" method="_kYOWsOimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYqbnOimEe-n_bccIa6R9w">
            <body>Recupera el id de un hotel mediante su nombre ya que es unico&#xD;
	 * @param nom&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJohEuimEe-n_bccIa6R9w" name="nom">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kJohE-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kV8ewOimEe-n_bccIa6R9w" name="insert" method="_kYNIk-imEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYqbleimEe-n_bccIa6R9w">
            <body>Esta funcion inserta un hotel nuevo en la tabla hotel &#xD;
	 * con todos los parametros de hotel, menos ID&#xD;
	 * @param nuevo&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kV8eweimEe-n_bccIa6R9w" name="nuevo" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kV8ewuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kV8ew-imEe-n_bccIa6R9w" name="delete" method="_kYNIluimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYqbluimEe-n_bccIa6R9w">
            <body>Esta funcion borra un hotel en la tabla hotel &#xD;
	 * con todos los parametros de hotel&#xD;
	 * @param aBorrar&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kV8exOimEe-n_bccIa6R9w" name="aBorrar" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kV9F0OimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kV9F0eimEe-n_bccIa6R9w" name="update" method="_kYNvoOimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYqbl-imEe-n_bccIa6R9w">
            <body>Esta funcion modifica un hotel&#xD;
	 * @param modificaciones&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kV9F0uimEe-n_bccIa6R9w" name="modificaciones" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kV9F0-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kV9F1OimEe-n_bccIa6R9w" name="check" method="_kYNvo-imEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYqbmOimEe-n_bccIa6R9w">
            <body>Comprueba la existencia de un hotel&#xD;
	 * @param hotel&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kV9F1eimEe-n_bccIa6R9w" name="hotel" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kV9F1uimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kV9s4OimEe-n_bccIa6R9w" name="getListaFiltrada" method="_kYOWs-imEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYqbneimEe-n_bccIa6R9w">
            <body>Recupera una lista de hoteles filtrando&#xD;
	 * @param filtro&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kV9s4eimEe-n_bccIa6R9w" name="filtro" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kXDSAeimEe-n_bccIa6R9w" type="_kVvqcOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kJq9UOimEe-n_bccIa6R9w" name="RepoReserva">
        <ownedComment xmi:id="_kYrCoOimEe-n_bccIa6R9w">
          <body>Repositorio de consultas de reserva</body>
        </ownedComment>
        <ownedAttribute xmi:id="_kXdhsOimEe-n_bccIa6R9w" name="SQLScripts" visibility="private" type="_kVvqcOimEe-n_bccIa6R9w" association="_kZC2EeimEe-n_bccIa6R9w">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_kXdhsuimEe-n_bccIa6R9w" value="new ArrayList&lt;>()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYOWtuimEe-n_bccIa6R9w" name="RepoReserva" specification="_kJrkYOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYOWt-imEe-n_bccIa6R9w" type="_kJq9UOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>inicializarArray();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYO9wOimEe-n_bccIa6R9w" name="inicializarArray" specification="_kJrkZOimEe-n_bccIa6R9w">
          <language>java</language>
          <body>// Insertar	0&#xD;
		this.SQLScripts.add( &quot;INSERT INTO Reserva (DNI, id, num, fecini, fecfin, bPagada) &quot;&#xD;
				+ &quot;VALUES &quot;&#xD;
				+ &quot;(?, ?, ?, ?, ?, ?)&quot;&#xD;
				);&#xD;
		&#xD;
		// Eliminar 1&#xD;
		this.SQLScripts.add( &quot;DELETE reserva&quot;&#xD;
				+ &quot;WHERE codreserva = ?&quot;&#xD;
				);&#xD;
		&#xD;
		// Modificar 2		&#xD;
		this.SQLScripts.add( &quot;UPDATE cliente &quot;&#xD;
				+ &quot;SET DNI = ?, nom = ?, ape = ?, tlfno = ?, email = ?, bTrabajador = ?, tarifa = ?, SHA2(pass = ?, 256)&quot;&#xD;
				+ &quot; WHERE DNI = ?&quot;&#xD;
				);&#xD;
		&#xD;
		// Comprobar existencia	3&#xD;
		this.SQLScripts.add( &quot;SELECT codreserva &quot;&#xD;
				+ &quot;FROM reserva &quot;&#xD;
				+ &quot;WHERE codreserva = ?;&quot;&#xD;
				);&#xD;
		&#xD;
		// Traer informarcion 4	&#xD;
		this.SQLScripts.add( &quot;SELECT * FROM Reserva &quot;&#xD;
				+ &quot;WHERE codreserva = ?&quot;&#xD;
				);&#xD;
		&#xD;
		// Otros&#xD;
		&#xD;
		// Obtener el ultimo codreserva 5&#xD;
		this.SQLScripts.add( &quot;SELECT max(codreserva) &quot;&#xD;
				+ &quot;from reserva;&quot;&#xD;
				);&#xD;
		&#xD;
		this.SQLScripts.add(&quot;&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYO9weimEe-n_bccIa6R9w" name="insert" specification="_kV_iEOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYO9wuimEe-n_bccIa6R9w" name="nuevo" type="_kLQ4wOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYO9w-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>// Comprueba que los scrpits estan en el array y si no esta lo inicializa&#xD;
		if (this.SQLScripts.isEmpty()) {&#xD;
			inicializarArray();&#xD;
		}&#xD;
		&#xD;
		// Revisa si ya existe el cliente&#xD;
		if(!check(nuevo)) {&#xD;
			&#xD;
			//Si no existe el cliente, hace la consulta a la BBDD&#xD;
			try (PreparedStatement preparedStatement = ConectMySQL.conexion.prepareStatement(SQLScripts.get(0))) {&#xD;
		        preparedStatement.setString(1, nuevo.getCliente().getDNI());&#xD;
		        preparedStatement.setInt(2, nuevo.getSala().getHotel().getID());&#xD;
		        preparedStatement.setInt(3, nuevo.getSala().getNum());&#xD;
		        preparedStatement.setDate(4, nuevo.getFecIni());&#xD;
		        preparedStatement.setDate(5, nuevo.getFecFin());&#xD;
		        preparedStatement.setBoolean(6, nuevo.isbPagada());&#xD;
		        preparedStatement.executeUpdate();&#xD;
		        &#xD;
		        //Comprueba si la insercion se ha producido y devuelve en funcion de esta&#xD;
		        if (check(nuevo)) {&#xD;
		        	System.out.print(&quot;\n~~~ Reserva creada correctamente ~~~\n&quot;);&#xD;
		        	return true;&#xD;
		        } else {&#xD;
		        	System.out.print(&quot;\n>>> Se ha producido un error &lt;&lt;&lt;\n\n&quot;);&#xD;
		        	return false;&#xD;
		        }&#xD;
&#xD;
			//En caso de que haya algun error en la base lo coge aqui&#xD;
			} catch (SQLException e) {&#xD;
				e.printStackTrace();&#xD;
				System.out.println(&quot;Error al insertar la nueva reserva&quot;);&#xD;
				return false;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		//Si el cliente existe antes de la insercion devuelve false. &#xD;
		System.out.println(&quot;La reserva ya existe&quot;);&#xD;
		return true;&#xD;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYO9xOimEe-n_bccIa6R9w" name="check" specification="_kWAJIeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYO9xeimEe-n_bccIa6R9w" name="reserva" type="_kLQ4wOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYO9xuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if (this.SQLScripts.isEmpty()) {&#xD;
			inicializarArray();&#xD;
		}&#xD;
		&#xD;
		try (PreparedStatement preparedStatement = ConectMySQL.conexion.prepareStatement(SQLScripts.get(3))) {&#xD;
	        preparedStatement.setInt(1, reserva.getID());&#xD;
	        ResultSet rS = preparedStatement.executeQuery();&#xD;
	        if (rS.next()) {&#xD;
	        	return true;&#xD;
	        } else {&#xD;
	        	return false;&#xD;
	        }&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYO9x-imEe-n_bccIa6R9w" name="get" specification="_kJsLcOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYO9yOimEe-n_bccIa6R9w" name="codreserva">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYO9yeimEe-n_bccIa6R9w" type="_kLQ4wOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>if (this.SQLScripts.isEmpty()) {&#xD;
			inicializarArray();&#xD;
		}&#xD;
		try (PreparedStatement pS = ConectMySQL.conexion.prepareStatement(this.SQLScripts.get(4))) {&#xD;
			pS.setInt(1, codreserva);&#xD;
			ResultSet rS = pS.executeQuery();&#xD;
			if (rS.next()) {&#xD;
				RepoHabitacion rH = new RepoHabitacion();&#xD;
				RepoCliente rC = new RepoCliente();&#xD;
				Reserva r = new Reserva(&#xD;
					rS.getInt(1),&#xD;
					rS.getDate(5),&#xD;
					rS.getDate(6),&#xD;
					rC.get(rS.getString(2)),&#xD;
					rH.get(rS.getInt(3), rS.getInt(4)),&#xD;
					rS.getDouble(7)&#xD;
				);&#xD;
				return r;&#xD;
			} else {&#xD;
				return null;&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return null;&#xD;
		}&#xD;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYO9yuimEe-n_bccIa6R9w" name="update" specification="_kWAJJeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYO9y-imEe-n_bccIa6R9w" name="modificaciones" type="_kLQ4wOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYO9zOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>// Comprueba que los scrpits estan en el array y si no esta lo inicializa&#xD;
		if (SQLScripts.isEmpty()) {&#xD;
			inicializarArray();&#xD;
		}&#xD;
		&#xD;
		//Inicializo una reserva que va a recibir los datos de la reserva original, lo hago fuera del if para poder usarlo despues.&#xD;
		Reserva original = new Reserva(0, null, null, null, null, 0);&#xD;
		&#xD;
		// Copruebo que me han pasado el ID correcto&#xD;
		if (modificaciones.getID() != 0) {&#xD;
			&#xD;
			// Meto los datos de la reserva original en la reserva creada anteriormente&#xD;
			original = get(modificaciones.getID());&#xD;
			&#xD;
			// Reviso si un dato esta por defecto y en caso de que no lo este en modificaciones lo tomo como una modificacion del original y lo seteo.&#xD;
			if (modificaciones.getFecIni() != null) original.setFecIni(modificaciones.getFecIni());&#xD;
			if (modificaciones.getFecFin() != null) original.setFecFin(modificaciones.getFecFin());&#xD;
			if (modificaciones.getCliente() != null) original.setCliente(modificaciones.getCliente());&#xD;
			if (modificaciones.getSala() != null) original.setSala(modificaciones.getSala());&#xD;
		&#xD;
		// En caso de no tener el ID correcto devuelvo error&#xD;
		} else {&#xD;
			System.out.println(&quot;Error al insertar el ID de reserva&quot;);&#xD;
			return false;&#xD;
		}&#xD;
				&#xD;
		// Revisa si existe la reserva&#xD;
		if(check(original)) {&#xD;
			&#xD;
			String query = &quot;UPDATE reserva &quot;&#xD;
					+ &quot;SET &quot;&#xD;
						+ &quot;fecini = ?, &quot;&#xD;
						+ &quot;fecfin = ?, &quot;&#xD;
						+ &quot;dni = ?, &quot;&#xD;
						+ &quot;id = ?, &quot;&#xD;
						+ &quot;num = ? &quot;&#xD;
					+ &quot;WHERE &quot;&#xD;
						+ &quot;codreserva = ?&quot;;&#xD;
			&#xD;
			//Si existe la reserva, ejecuta la modificacion en la BBDD&#xD;
			try (PreparedStatement preparedStatement = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
		        preparedStatement.setDate(1, original.getFecIni());&#xD;
		        preparedStatement.setDate(2, original.getFecFin());&#xD;
		        preparedStatement.setString(3, original.getCliente().getDNI());&#xD;
		        preparedStatement.setInt(4, original.getSala().getHotel().getID());&#xD;
		        preparedStatement.setInt(5, original.getSala().getNum());&#xD;
		        preparedStatement.setInt(6, original.getID());&#xD;
		        &#xD;
		        preparedStatement.executeUpdate();&#xD;
		        &#xD;
		        //Comprueba si la modificacion se ha producido y devuelve lo contrario en funcion de esta&#xD;
		        return !check(original);&#xD;
&#xD;
			//En caso de que haya algun error en la base lo coge aqui&#xD;
			} catch (SQLException e) {&#xD;
				System.out.println(&quot;Error al actualizar la reserva&quot; + e);&#xD;
				return false;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		//Si la reserva ya estaba modifica antes de la insercion devuelve false. &#xD;
		return false;&#xD;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYO9zeimEe-n_bccIa6R9w" name="getNewID" specification="_kJsygeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYO9zuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>if (SQLScripts.isEmpty()) {&#xD;
			inicializarArray();&#xD;
		}&#xD;
		&#xD;
		try (PreparedStatement pS = ConectMySQL.conexion.prepareCall(SQLScripts.get(5))) {&#xD;
			ResultSet rS = pS.executeQuery();&#xD;
			if (rS.next()) {&#xD;
				return rS.getInt(1)+MenuCarrito.carrito.size()+1;&#xD;
			} else {&#xD;
				return -1;&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return -1;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYPk0OimEe-n_bccIa6R9w" name="getListaFiltrada" specification="_kWAwMeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYPk0eimEe-n_bccIa6R9w" name="filtro" type="_kLQ4wOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYPk0uimEe-n_bccIa6R9w" type="_kVvqcOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>String query = &#xD;
				&quot;SELECT  &quot;&#xD;
					+ &quot;R.FECINI, &quot;&#xD;
					+ &quot;R.FECFIN, &quot;&#xD;
					+ &quot;R.DNI, &quot;&#xD;
					+ &quot;H.NOM, &quot;&#xD;
					+ &quot;S.NUM, &quot;&#xD;
					+ &quot;R.CODRESERVA &quot;&#xD;
				+ &quot;FROM &quot;&#xD;
					+ &quot;RESERVA R &quot;&#xD;
					+ &quot;JOIN CLIENTE C USING(DNI) &quot;&#xD;
					+ &quot;JOIN SALA S USING(ID, NUM) &quot;&#xD;
					+ &quot;JOIN HOTEL H USING(ID) &quot;&#xD;
				+ &quot;WHERE &quot;&#xD;
					+ &quot;(h.nom = ? or ? = \&quot;\&quot;) and &quot;&#xD;
					+ &quot;(c.dni = ? or ? = \&quot;\&quot;) and &quot;&#xD;
					+ &quot;(r.num = ? or ? = 0) and &quot;&#xD;
					+ &quot;(r.fecini >= ? or ? is null) and &quot;&#xD;
					+ &quot;(r.fecini &lt;= ? or ? is null) &quot;&#xD;
				+ &quot;ORDER BY &quot;&#xD;
					+ &quot;R.FECINI ASC, &quot;&#xD;
					+ &quot;R.FECFIN ASC;&quot;;&#xD;
		&#xD;
		try (PreparedStatement pS = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
			if (filtro.getSala() != null) {&#xD;
				if (filtro.getSala().getHotel() != null) {&#xD;
					pS.setString(1, filtro.getSala().getHotel().getNombre());&#xD;
					pS.setString(2, filtro.getSala().getHotel().getNombre());&#xD;
				} else {&#xD;
					pS.setString(1, &quot;&quot;);&#xD;
					pS.setString(2, &quot;&quot;);&#xD;
				}&#xD;
				pS.setInt(5, filtro.getSala().getNum());&#xD;
				pS.setInt(6, filtro.getSala().getNum());&#xD;
			} else {&#xD;
				pS.setString(1, &quot;&quot;);&#xD;
				pS.setString(2, &quot;&quot;);&#xD;
				pS.setInt(5, 0);&#xD;
				pS.setInt(6, 0);&#xD;
			}&#xD;
			&#xD;
			if (filtro.getCliente() != null) {&#xD;
				pS.setString(3, filtro.getCliente().getDNI());&#xD;
				pS.setString(4, filtro.getCliente().getDNI());&#xD;
			} else {&#xD;
				pS.setString(3, &quot;&quot;);&#xD;
				pS.setString(4, &quot;&quot;);&#xD;
			}&#xD;
				&#xD;
			if (filtro.getFecIni() != null) {&#xD;
				pS.setDate(7, filtro.getFecIni());&#xD;
				pS.setDate(8, filtro.getFecIni());&#xD;
			} else {&#xD;
				pS.setDate(7, null);&#xD;
				pS.setDate(8, null);&#xD;
			}&#xD;
			&#xD;
			if (filtro.getFecFin() != null) {&#xD;
				pS.setDate(9, filtro.getFecFin());&#xD;
				pS.setDate(10, filtro.getFecFin());&#xD;
			} else {&#xD;
				pS.setDate(9, null);&#xD;
				pS.setDate(10, null);&#xD;
			}&#xD;
			ResultSet rS = pS.executeQuery();&#xD;
						&#xD;
			ArrayList&lt;Reserva> lista = new ArrayList&lt;>();&#xD;
			RepoCliente rC = new RepoCliente();&#xD;
			RepoHotel rH = new RepoHotel();&#xD;
			while (rS.next()) {&#xD;
				Sala s = new Sala(&#xD;
								rS.getInt(5), &#xD;
								0, &#xD;
								&quot;&quot;, &#xD;
								0, &#xD;
								rH.get(rH.getPKByName(rS.getString(4))),&#xD;
								&quot;&quot;&#xD;
							);&#xD;
				Reserva r = new Reserva(&#xD;
								rS.getInt(6),&#xD;
								rS.getDate(1),&#xD;
								rS.getDate(2),&#xD;
								rC.get(rS.getString(3)),&#xD;
								s,&#xD;
								0&#xD;
							);&#xD;
				lista.add(r);&#xD;
			}&#xD;
			&#xD;
			return lista;&#xD;
&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		&#xD;
		&#xD;
		return null;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYPk0-imEe-n_bccIa6R9w" name="delete" specification="_kWBXQeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYPk1OimEe-n_bccIa6R9w" name="aBorrar" type="_kLQ4wOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYPk1eimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>String query = &quot;DELETE FROM reserva &quot;&#xD;
				+ &quot;WHERE codreserva = ?&quot;;&#xD;
		try (PreparedStatement pS = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
			pS.setInt(1, aBorrar.getID());&#xD;
			pS.executeUpdate();&#xD;
			&#xD;
			return !check(aBorrar);&#xD;
			&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kJrkYOimEe-n_bccIa6R9w" name="RepoReserva" method="_kYOWtuimEe-n_bccIa6R9w">
          <eAnnotations xmi:id="_kJrkYeimEe-n_bccIa6R9w" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kJrkYuimEe-n_bccIa6R9w" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_kJrkY-imEe-n_bccIa6R9w" type="_kJq9UOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kJrkZOimEe-n_bccIa6R9w" name="inicializarArray" visibility="private" method="_kYO9wOimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYrCoeimEe-n_bccIa6R9w">
            <body>Inicializa el repositorio</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kJsLcOimEe-n_bccIa6R9w" name="get" method="_kYO9x-imEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYrCpOimEe-n_bccIa6R9w">
            <body>Obtener una reserva por codreserva&#xD;
	 * @param codreserva&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJsygOimEe-n_bccIa6R9w" name="codreserva">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWAJJOimEe-n_bccIa6R9w" type="_kLQ4wOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kJsygeimEe-n_bccIa6R9w" name="getNewID" method="_kYO9zeimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYrCpuimEe-n_bccIa6R9w">
            <body>Recupera el valor maximo del autoincrement&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJsyguimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kV_iEOimEe-n_bccIa6R9w" name="insert" method="_kYO9weimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYrCouimEe-n_bccIa6R9w">
            <body> Insertar una nueva reserva&#xD;
	 * @param nuevo&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kV_iEeimEe-n_bccIa6R9w" name="nuevo" type="_kLQ4wOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWAJIOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kWAJIeimEe-n_bccIa6R9w" name="check" method="_kYO9xOimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYrCo-imEe-n_bccIa6R9w">
            <body>Comprueba que exista o no.&#xD;
     * @param reserva&#xD;
     * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kWAJIuimEe-n_bccIa6R9w" name="reserva" type="_kLQ4wOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWAJI-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kWAJJeimEe-n_bccIa6R9w" name="update" method="_kYO9yuimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYrCpeimEe-n_bccIa6R9w">
            <body>Actualizar una reserva existente&#xD;
     * @param modificaciones&#xD;
     * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kWAJJuimEe-n_bccIa6R9w" name="modificaciones" type="_kLQ4wOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWAwMOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kWAwMeimEe-n_bccIa6R9w" name="getListaFiltrada" method="_kYPk0OimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYrCp-imEe-n_bccIa6R9w">
            <body>Recupera una lista de todas las reservas segun un filtro&#xD;
	 * @param filtro&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kWAwMuimEe-n_bccIa6R9w" name="filtro" type="_kLQ4wOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kXD5EOimEe-n_bccIa6R9w" type="_kVvqcOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWBXQeimEe-n_bccIa6R9w" name="delete" method="_kYPk0-imEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYrCqOimEe-n_bccIa6R9w">
            <body>Elimina una reserva&#xD;
	 * @param aBorrar&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kWBXQuimEe-n_bccIa6R9w" name="aBorrar" type="_kLQ4wOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWBXQ-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kJvOwOimEe-n_bccIa6R9w" name="RepoSala">
        <ownedComment xmi:id="_kYrCqeimEe-n_bccIa6R9w">
          <body>Repositorio de consultas de salas</body>
        </ownedComment>
        <ownedAttribute xmi:id="_kXeIweimEe-n_bccIa6R9w" name="SQLScripts" visibility="private" type="_kVvqcOimEe-n_bccIa6R9w" association="_kZDdIeimEe-n_bccIa6R9w">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_kXev0eimEe-n_bccIa6R9w" value="new ArrayList&lt;>()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYPk1uimEe-n_bccIa6R9w" name="RepoSala" specification="_kJwc4OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYPk1-imEe-n_bccIa6R9w" type="_kJvOwOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>inicializarArray();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYPk2OimEe-n_bccIa6R9w" name="inicializarArray" specification="_kJwc5OimEe-n_bccIa6R9w">
          <language>java</language>
          <body>// Insertar	0&#xD;
		SQLScripts.add( &#xD;
				&quot;INSERT &quot;&#xD;
					+ &quot;sala &quot;&#xD;
				+ &quot;VALUES &quot;&#xD;
					+ &quot;(?, ?, ?, ?, ?, ?, ?, SHA2(pass = ?, 256))&quot;&#xD;
				);&#xD;
		&#xD;
		// Eliminar 1&#xD;
		SQLScripts.add( &#xD;
				&quot;DELETE &quot;&#xD;
					+ &quot;cliente &quot;&#xD;
				+ &quot;WHERE &quot;&#xD;
					+ &quot;DNI = ?&quot;&#xD;
				);&#xD;
		&#xD;
		// Modificar 2		&#xD;
		SQLScripts.add( &#xD;
				&quot;UPDATE &quot;&#xD;
					+ &quot;cliente &quot;&#xD;
				+ &quot;SET &quot;&#xD;
					+ &quot;DNI = ?, &quot;&#xD;
					+ &quot;nom = ?, &quot;&#xD;
					+ &quot;ape = ?, &quot;&#xD;
					+ &quot;tlfno = ?, &quot;&#xD;
					+ &quot;email = ?, &quot;&#xD;
					+ &quot;bTrabajador = ?, &quot;&#xD;
					+ &quot;tarifa = ?, &quot;&#xD;
					+ &quot;SHA2(pass = ?, 256)&quot;&#xD;
				+ &quot;WHERE &quot;&#xD;
					+ &quot;DNI = ?&quot;&#xD;
				);&#xD;
		&#xD;
		// Comprobar existencia 3	&#xD;
		SQLScripts.add( &#xD;
				&quot;SELECT &quot;&#xD;
					+ &quot;* &quot;&#xD;
				+ &quot;FROM &quot;&#xD;
					+ &quot;Cliente&quot;&#xD;
				+ &quot;WHERE &quot;&#xD;
					+ &quot;DNI = ?&quot;&#xD;
				);&#xD;
		&#xD;
		// Traer informarcion 4	&#xD;
		SQLScripts.add( &#xD;
				&quot;SELECT &quot;&#xD;
					+ &quot;* &quot;&#xD;
				+ &quot;FROM &quot;&#xD;
					+ &quot;sala &quot;&#xD;
				+ &quot;WHERE &quot;&#xD;
					+ &quot;id = ? and &quot;&#xD;
					+ &quot;num = ?&quot;&#xD;
				);&#xD;
		&#xD;
		// Otros		&#xD;
		&#xD;
		// Tipos de habitaciones disponibles y su fecha mas cercana disponible. 5&#xD;
		/*SQLScripts.add( &#xD;
				&quot;SELECT &quot;&#xD;
					+ &quot;h.tipohab, &quot;&#xD;
					+ &quot;min(s.pvp) &quot;&#xD;
				+ &quot;FROM &quot;&#xD;
					+ &quot;habitacion h &quot;&#xD;
					+ &quot;natural join sala s &quot;&#xD;
					+ &quot;left join reserva r using(id, num) &quot;&#xD;
				+ &quot;WHERE &quot;&#xD;
					+ &quot;s.id = ? and &quot;&#xD;
					+ &quot;r.fecfin > current_date() and &quot;&#xD;
					+ &quot;r.fecIni not between ? and ? and &quot;&#xD;
					+ &quot;r.fecFin not between ? and ? &quot;&#xD;
				+ &quot;GROUP BY &quot;&#xD;
					+ &quot;h.tipohab;&quot;&#xD;
				);&#xD;
		*/&#xD;
		SQLScripts.add(&quot;SELECT h.tipohab, MIN(s.pvp)\r\n&quot;&#xD;
				+ &quot;FROM habitacion h\r\n&quot;&#xD;
				+ &quot;NATURAL JOIN sala s\r\n&quot;&#xD;
				+ &quot;LEFT JOIN reserva r USING(id, num)\r\n&quot;&#xD;
				+ &quot;WHERE h.id = ?\r\n&quot;&#xD;
				+ &quot;  AND (r.id IS NULL \r\n&quot;&#xD;
				+ &quot;       OR (r.fecfin > CURRENT_DATE() \r\n&quot;&#xD;
				+ &quot;           AND r.fecIni NOT BETWEEN ? AND ?\r\n&quot;&#xD;
				+ &quot;           AND r.fecFin NOT BETWEEN ? AND ?)) AND&quot;&#xD;
				+ &quot;h.num not in (?)\r\n&quot;&#xD;
				+ &quot;GROUP BY h.tipohab;&quot;);&#xD;
		&#xD;
		SQLScripts.add( &#xD;
				&quot;SELECT &quot;&#xD;
					+ &quot;h.id, &quot;&#xD;
					+ &quot;h.num &quot;&#xD;
				+ &quot;FROM &quot;&#xD;
					+ &quot;habitacion h &quot;&#xD;
					+ &quot;natural join sala s &quot;&#xD;
					+ &quot;left join reserva r using(id, num) &quot;&#xD;
				+ &quot;WHERE &quot;&#xD;
					+ &quot;s.id = ? and &quot;&#xD;
					+ &quot;r.fecfin > current_date() and &quot;&#xD;
					+ &quot;r.fecIni not between ? and ? and &quot;&#xD;
					+ &quot;r.fecFin not between ? and ? and &quot;&#xD;
					+ &quot;h.tipohab = ?;&quot;&#xD;
				);&#xD;
	&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYPk2eimEe-n_bccIa6R9w" name="get" specification="_kJxD8OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYPk2uimEe-n_bccIa6R9w" name="id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYPk2-imEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYPk3OimEe-n_bccIa6R9w" type="_kLT8EOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>if (this.SQLScripts.isEmpty()) {&#xD;
			inicializarArray();&#xD;
		}&#xD;
		try (PreparedStatement pS = ConectMySQL.conexion.prepareStatement(this.SQLScripts.get(4))) {&#xD;
			pS.setInt(1, id);&#xD;
			pS.setInt(2, num);&#xD;
			ResultSet rS = pS.executeQuery();&#xD;
			if (rS.next()) {&#xD;
				RepoHotel rH = new RepoHotel();&#xD;
				Sala h = new Sala(&#xD;
					rS.getInt(2),&#xD;
					rS.getInt(3),&#xD;
					rS.getString(4),&#xD;
					rS.getDouble(5),&#xD;
					rH.get(rS.getInt(1)),&#xD;
					rS.getString(6)&#xD;
				);&#xD;
				return h;&#xD;
			} else {&#xD;
				return null;&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return null;&#xD;
		}		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYQL4OimEe-n_bccIa6R9w" name="getMenuProductos" specification="_kJxrAOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYQL4eimEe-n_bccIa6R9w" type="_kVvqcOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>ArrayList&lt;Habitacion> menuProductos = new ArrayList&lt;>();&#xD;
		//String query = SQLScripts.get(5);&#xD;
		String query =&quot;SELECT h.tipohab, MIN(s.pvp)\r\n&quot;&#xD;
				+ &quot;FROM habitacion h\r\n&quot;&#xD;
				+ &quot;NATURAL JOIN sala s\r\n&quot;&#xD;
				+ &quot;LEFT JOIN reserva r USING(id, num)\r\n&quot;&#xD;
				+ &quot;WHERE h.id = ?\r\n&quot;&#xD;
				+ &quot;  AND (r.id IS NULL \r\n&quot;&#xD;
				+ &quot;       OR (r.fecfin > CURRENT_DATE() \r\n&quot;&#xD;
				+ &quot;           AND r.fecIni NOT BETWEEN ? AND ?\r\n&quot;&#xD;
				+ &quot;           AND r.fecFin NOT BETWEEN ? AND ?)) AND &quot;&#xD;
				+ &quot;h.num not in (&quot;;&#xD;
		if(MenuCarrito.carrito.isEmpty()) {&#xD;
			query += &quot;\&quot;\&quot;&quot;;&#xD;
		} else {&#xD;
			for (int i = 0 ; i &lt; MenuCarrito.carrito.size() ; i++) {&#xD;
				query += (i == MenuCarrito.carrito.size()) ? &quot;? &quot; : &quot;?, &quot;;&#xD;
				&#xD;
			}&#xD;
		}&#xD;
		query += &quot;) GROUP BY h.tipohab;&quot;;&#xD;
		&#xD;
		&#xD;
	    try (PreparedStatement pS = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
	    	pS.setInt(1, MenuPrincipal.hotel.getID());&#xD;
	    	pS.setDate(2, MenuProductos.fecIni);&#xD;
	    	pS.setDate(3, MenuProductos.fecFin);&#xD;
	    	pS.setDate(4, MenuProductos.fecIni);&#xD;
	    	pS.setDate(5, MenuProductos.fecFin);&#xD;
			if(!MenuCarrito.carrito.isEmpty()) {&#xD;
		    	int i = 0;&#xD;
		    	for (Reserva r : MenuCarrito.carrito) {&#xD;
		    		i++;&#xD;
		    		pS.setInt(i+5, r.getSala().getNum());&#xD;
		    	}&#xD;
			}&#xD;
			// System.out.print(&quot;\n&quot; + pS.toString() + &quot;\n&quot;);&#xD;
	    	ResultSet rS = pS.executeQuery();&#xD;
	    	while (rS.next()) {&#xD;
	    		Habitacion h = new Habitacion(MenuPrincipal.hotel, 0, 0, &quot;&quot;,  rS.getDouble(2), rS.getString(1));&#xD;
	    		menuProductos.add(h);&#xD;
	    	}&#xD;
	    	return menuProductos;&#xD;
	    } catch (SQLException e) {&#xD;
	    	e.printStackTrace();&#xD;
	    }&#xD;
		return null;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYQL4uimEe-n_bccIa6R9w" name="getSeleccionMenuProductos" specification="_kWDzgOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYQL4-imEe-n_bccIa6R9w" name="tipoHab" type="_kLI88OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYQL5OimEe-n_bccIa6R9w" type="_kLIV4OimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>String query = SQLScripts.get(6);&#xD;
	    try (PreparedStatement pS = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
	    	pS.setInt(1, MenuPrincipal.hotel.getID());&#xD;
	    	pS.setDate(2, MenuProductos.fecIni);&#xD;
	    	pS.setDate(3, MenuProductos.fecFin);&#xD;
	    	pS.setDate(4, MenuProductos.fecIni);&#xD;
	    	pS.setDate(5, MenuProductos.fecFin);&#xD;
	    	pS.setString(6, tipoHab.toString());&#xD;
	    	ResultSet rS = pS.executeQuery();&#xD;
	    	RepoHabitacion rH = new RepoHabitacion();&#xD;
	    	rS.next();&#xD;
	    	Habitacion h = rH.get(MenuPrincipal.hotel.getID(), rS.getInt(2));&#xD;
	    	return h;&#xD;
	    } catch (SQLException e) {&#xD;
	    	e.printStackTrace();&#xD;
	    }&#xD;
		return null;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYQL5eimEe-n_bccIa6R9w" name="insert" specification="_kWEakOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYQL5uimEe-n_bccIa6R9w" name="nuevo" type="_kLT8EOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYQL5-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>// Revisa si ya existe el cliente&#xD;
		if(!check(nuevo)) {&#xD;
			&#xD;
			if (nuevo.getClass().equals(Habitacion.class)) {&#xD;
				nuevo.setTSala(tSala.Habitacion);&#xD;
			} else if (nuevo.getClass().equals(EspacioComun.class)) {&#xD;
				nuevo.setTSala(tSala.EspaciosComunes);				&#xD;
			} else if (nuevo.getClass().equals(SalaReunion.class)) {&#xD;
				nuevo.setTSala(tSala.SalaReuniones);&#xD;
			}&#xD;
			&#xD;
			String query = &quot;INSERT sala (id, num, capacidad, tlfno, pvp, subtipo) &quot;&#xD;
					+ &quot;VALUES (?, ?, ?, ?, ?, ?);&quot;;&#xD;
			&#xD;
			//Si no existe el cliente, hace la consulta a la BBDD&#xD;
	        try (PreparedStatement preparedStatement = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
	            preparedStatement.setInt(1, nuevo.getHotel().getID());&#xD;
	            preparedStatement.setInt(2, nuevo.getNum());&#xD;
	            preparedStatement.setInt(3, nuevo.getCapacidad());&#xD;
	            preparedStatement.setString(4, nuevo.getTlfno());&#xD;
	            preparedStatement.setDouble(5, nuevo.getPvp());&#xD;
	            preparedStatement.setString(6, nuevo.getTSala().toString());&#xD;
	            preparedStatement.executeUpdate();&#xD;
		        &#xD;
		        //Comprueba si la insercion se ha producido y devuelve en funcion de esta&#xD;
		        if (check(nuevo)) {&#xD;
		        	System.out.print(&quot;\n~~~ Sala creada correctamente ~~~\n&quot;);&#xD;
		        	return true;&#xD;
		        } else {&#xD;
		        	System.out.print(&quot;\n>>> Se ha producido un error &lt;&lt;&lt;\n\n&quot;);&#xD;
		        	return false;&#xD;
		        }&#xD;
&#xD;
			//En caso de que haya algun error en la base lo coge aqui&#xD;
			} catch (SQLException e) {&#xD;
				e.printStackTrace();&#xD;
				System.out.println(&quot;Error al insertar la nueva sala&quot;);&#xD;
				return false;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		//Si el cliente existe antes de la insercion devuelve false. &#xD;
		System.out.println(&quot;El usuario ya existe&quot;);&#xD;
		return true;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYQL6OimEe-n_bccIa6R9w" name="check" specification="_kWFBoOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYQL6eimEe-n_bccIa6R9w" name="sala" type="_kLT8EOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYQL6uimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>String query = &quot;SELECT * FROM sala &quot;&#xD;
				+ &quot; WHERE id = ? and num = ?;&quot;;&#xD;
		&#xD;
		try (PreparedStatement preparedStatement = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
	        preparedStatement.setInt(1, sala.getHotel().getID());&#xD;
			preparedStatement.setInt(2, sala.getNum());&#xD;
	        ResultSet rS = preparedStatement.executeQuery();&#xD;
	        if (rS.next()) {&#xD;
	        	return true;&#xD;
	        } else {&#xD;
	        	return false;&#xD;
	        }&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYQL6-imEe-n_bccIa6R9w" name="update" specification="_kWFosuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYQL7OimEe-n_bccIa6R9w" name="modificaciones" type="_kLT8EOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYQL7eimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>// Comprueba que los scrpits estan en el array y si no esta lo inicializa&#xD;
		if (SQLScripts.isEmpty()) {&#xD;
			inicializarArray();&#xD;
		}&#xD;
		&#xD;
		//Inicializo un cliente que va a recibir los datos del cliente original, lo hago fuera del if para poder usarlo despues.&#xD;
		Sala original = new Sala(0, 0, &quot;&quot;, 0, null, &quot;&quot;);&#xD;
		&#xD;
		// Copruebo que me han pasado el ID correcto&#xD;
		if (modificaciones.getNum() != 0 &amp;&amp; modificaciones.getHotel() != null) {&#xD;
			&#xD;
			// Meto los datos del cliente original en el cliente creado anterior&#xD;
			original = get(modificaciones.getHotel().getID(), modificaciones.getNum());&#xD;
			&#xD;
			// Reviso si un dato esta por defecto y en caso de que no lo este en modificaciones lo tomo como una modificacion del original y lo seteo.&#xD;
			if (modificaciones.getCapacidad() != 0) original.setCapacidad(modificaciones.getCapacidad());&#xD;
			if (!modificaciones.getTlfno().equals(&quot;&quot;)) original.setTlfno(modificaciones.getTlfno());&#xD;
			if (modificaciones.getPvp() != 0) original.setPvp(modificaciones.getPvp());&#xD;
		&#xD;
		// En caso de no tener el DNI correcto devuelvo error&#xD;
		} else {&#xD;
			System.out.println(&quot;Error al insertar el Hotel&quot;);&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		String query = &quot;UPDATE sala &quot;&#xD;
				+ &quot;SET capacidad = ?, tlfno = ?, pvp = ? &quot;&#xD;
				+ &quot;WHERE id = ? and num = ?&quot;;&#xD;
		&#xD;
		//Si existe el cliente, ejecuta el borrado en la BBDD&#xD;
		try (PreparedStatement pS = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
	        pS.setInt(1, original.getCapacidad());&#xD;
	        pS.setString(2, original.getTlfno());&#xD;
	        pS.setDouble(3, original.getPvp());&#xD;
	        pS.setInt(4, original.getHotel().getID());&#xD;
	        pS.setInt(5, original.getNum());&#xD;
	        pS.executeUpdate();&#xD;
	        &#xD;
	        //Comprueba si la modificacion se ha producido y devuelve lo contrario en funcion de esta&#xD;
	        return true;&#xD;
&#xD;
		//En caso de que haya algun error en la base lo coge aqui&#xD;
		} catch (SQLException e) {&#xD;
			System.out.println(&quot;Error al actualizar la sala&quot;+e);&#xD;
			return false;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kJwc4OimEe-n_bccIa6R9w" name="RepoSala" method="_kYPk1uimEe-n_bccIa6R9w">
          <eAnnotations xmi:id="_kJwc4eimEe-n_bccIa6R9w" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_kJwc4uimEe-n_bccIa6R9w" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_kYrCquimEe-n_bccIa6R9w">
            <body>Constructor</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJwc4-imEe-n_bccIa6R9w" type="_kJvOwOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kJwc5OimEe-n_bccIa6R9w" name="inicializarArray" visibility="private" method="_kYPk2OimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYrCq-imEe-n_bccIa6R9w">
            <body>Inicializa el array de scripts</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_kJxD8OimEe-n_bccIa6R9w" name="get" method="_kYPk2eimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYrCrOimEe-n_bccIa6R9w">
            <body>Recupera la informacion de una sala&#xD;
	 * @param id&#xD;
	 * @param num&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kJxD8eimEe-n_bccIa6R9w" name="id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kJxD8uimEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWDMceimEe-n_bccIa6R9w" type="_kLT8EOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kJxrAOimEe-n_bccIa6R9w" name="getMenuProductos" method="_kYQL4OimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYrpsOimEe-n_bccIa6R9w">
            <body>Recupera el menu de productos&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kXEgIOimEe-n_bccIa6R9w" type="_kVvqcOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWDzgOimEe-n_bccIa6R9w" name="getSeleccionMenuProductos" method="_kYQL4uimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYrpseimEe-n_bccIa6R9w">
            <body>Recupera la sala selecionada en el menu de productos&#xD;
	 * @param tipoHab&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kWDzgeimEe-n_bccIa6R9w" name="tipoHab" type="_kLI88OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWDzguimEe-n_bccIa6R9w" type="_kLIV4OimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWEakOimEe-n_bccIa6R9w" name="insert" method="_kYQL5eimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYrpsuimEe-n_bccIa6R9w">
            <body>Inserta una nueva sala&#xD;
	 * @param nuevo&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kWEakeimEe-n_bccIa6R9w" name="nuevo" type="_kLT8EOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWEakuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kWFBoOimEe-n_bccIa6R9w" name="check" visibility="private" method="_kYQL6OimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYrps-imEe-n_bccIa6R9w">
            <body>Comprueba la existencia de una sala&#xD;
	 * @param sala&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_kWFosOimEe-n_bccIa6R9w" name="sala" type="_kLT8EOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWFoseimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kWFosuimEe-n_bccIa6R9w" name="update" method="_kYQL6-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWFos-imEe-n_bccIa6R9w" name="modificaciones" type="_kLT8EOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWFotOimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kJ0HQOimEe-n_bccIa6R9w" name="RepoSalaReunion">
        <ownedComment xmi:id="_kYrptOimEe-n_bccIa6R9w">
          <body>Repositorio de consultas de salas de reunion</body>
        </ownedComment>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYQy8OimEe-n_bccIa6R9w" name="delete" specification="_kWG20OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYQy8eimEe-n_bccIa6R9w" name="aBorrar" type="_kLbQ0OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYQy8uimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>// Revisa si existe el cliente&#xD;
		if(check(aBorrar)) {&#xD;
&#xD;
			String query = &quot;DELETE FROM sala &quot;&#xD;
					+ &quot;WHERE id = ? and num = ?&quot;;&#xD;
			&#xD;
			//Si existe el cliente, ejecuta el borrado en la BBDD&#xD;
			try (PreparedStatement preparedStatement = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
	            preparedStatement.setInt(1, aBorrar.getHotel().getID());&#xD;
	            preparedStatement.setInt(2, aBorrar.getNum());&#xD;
	            preparedStatement.executeUpdate();&#xD;
		        &#xD;
		        //Comprueba si la insercion se ha producido y devuelve lo contrario en funcion de esta&#xD;
		        return true;&#xD;
&#xD;
			//En caso de que haya algun error en la base lo coge aqui&#xD;
			} catch (SQLException e) {&#xD;
				System.out.println(&quot;Error al eliminar el espacio comun&quot;);&#xD;
				return false;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		//Si el cliente existe antes de la insercion devuelve false. &#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYQy8-imEe-n_bccIa6R9w" name="check" specification="_kWHd4OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYQy9OimEe-n_bccIa6R9w" name="salaReunion" type="_kLbQ0OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYQy9eimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>String query = &quot;SELECT * FROM salareuniones &quot;&#xD;
				+ &quot; WHERE id = ? and num = ?&quot;;&#xD;
		&#xD;
		try (PreparedStatement preparedStatement = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
	        preparedStatement.setInt(1, salaReunion.getHotel().getID());&#xD;
			preparedStatement.setInt(2, salaReunion.getNum());&#xD;
	        ResultSet rS = preparedStatement.executeQuery();&#xD;
	        if (rS.next()) {&#xD;
	        	return true;&#xD;
	        } else {&#xD;
	        	return false;&#xD;
	        }&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYQy9uimEe-n_bccIa6R9w" name="update" specification="_kWHd4-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYQy9-imEe-n_bccIa6R9w" name="modificaciones" type="_kLbQ0OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYQy-OimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>//Inicializo un cliente que va a recibir los datos del cliente original, lo hago fuera del if para poder usarlo despues.&#xD;
		SalaReunion original = new SalaReunion(0, 0, &quot;&quot;, 0, null, &quot;&quot;);&#xD;
		&#xD;
		// Copruebo que me han pasado el Primary Key correcto&#xD;
		if (!((modificaciones.getNum() != 0) &amp;&amp; (modificaciones.getHotel() == null))) {&#xD;
			&#xD;
			// Meto los datos del cliente original en el cliente creado anterior&#xD;
			original = get(modificaciones.getHotel().getID(), modificaciones.getNum());&#xD;
			&#xD;
			// Reviso si un dato esta por defecto y en caso de que no lo este en modificaciones lo tomo como una modificacion del original y lo seteo.&#xD;
			if (modificaciones.getCapacidad() != 0) original.setCapacidad(modificaciones.getCapacidad());&#xD;
			if (!modificaciones.getTlfno().equals(&quot;&quot;)) original.setTlfno(modificaciones.getTlfno());&#xD;
			if (modificaciones.getPvp() != 0) original.setPvp(modificaciones.getPvp());&#xD;
			if (!modificaciones.getServicios().equals(&quot;&quot;)) original.setServicios(modificaciones.getServicios());&#xD;
		&#xD;
		// En caso de no tener el DNI correcto devuelvo error&#xD;
		} else {&#xD;
			System.out.println(&quot;Error al insertar el Id de hotel y Numero de sala&quot;);&#xD;
			return false;&#xD;
		}&#xD;
				&#xD;
		// Revisa si existe el cliente&#xD;
		if(check(original)) {&#xD;
			&#xD;
			RepoSala rSa = new RepoSala();&#xD;
			rSa.update(modificaciones);&#xD;
			&#xD;
			String query = &quot;UPDATE salareuniones &quot;&#xD;
					+ &quot;SET servicios = ? &quot;&#xD;
					+ &quot;WHERE id = ? and num = ? ;&quot;;&#xD;
			&#xD;
			//Si existe el cliente, ejecuta el borrado en la BBDD&#xD;
			try (PreparedStatement preparedStatement = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
		        preparedStatement.setString(1, original.getServicios());&#xD;
		        preparedStatement.setInt(2, original.getHotel().getID());&#xD;
		        preparedStatement.setInt(3, original.getNum());&#xD;
		        preparedStatement.executeUpdate();&#xD;
		        &#xD;
		        //Comprueba si la modificacion se ha producido y devuelve lo contrario en funcion de esta&#xD;
		        return true;&#xD;
&#xD;
			//En caso de que haya algun error en la base lo coge aqui&#xD;
			} catch (SQLException e) {&#xD;
				System.out.println(&quot;Error al actualizar el espacio comun&quot; + e);&#xD;
				return false;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		//Si el cliente existe antes de la insercion devuelve false. &#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYQy-eimEe-n_bccIa6R9w" name="get" specification="_kJ1VYOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYQy-uimEe-n_bccIa6R9w" name="idHotel">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYQy--imEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYQy_OimEe-n_bccIa6R9w" type="_kLbQ0OimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>String query = &quot;SELECT * FROM salareuniones natural join sala &quot;&#xD;
				+ &quot; WHERE id = ? and num = ?&quot;;&#xD;
		&#xD;
		try (PreparedStatement pS = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
			pS.setInt(1, idHotel);&#xD;
			pS.setInt(2, num);&#xD;
			ResultSet rS = pS.executeQuery();&#xD;
			if (rS.next()) {&#xD;
				RepoHotel rH = new RepoHotel();&#xD;
				SalaReunion e = new SalaReunion(&#xD;
					rS.getInt(2),&#xD;
					rS.getInt(4),&#xD;
					rS.getString(5),&#xD;
					rS.getDouble(6),&#xD;
					rH.get(rS.getInt(1)),&#xD;
					rS.getString(3)&#xD;
				);&#xD;
				return e;&#xD;
			} else {&#xD;
				return null;&#xD;
			}&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
			return null;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYQy_eimEe-n_bccIa6R9w" name="getListaFiltrada" specification="_kWIE8eimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYQy_uimEe-n_bccIa6R9w" name="filtro" type="_kLbQ0OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYQy_-imEe-n_bccIa6R9w" type="_kVvqcOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>String query = &#xD;
				&quot;SELECT  &quot;&#xD;
					+ &quot;h.id, &quot;&#xD;
					+ &quot;s.num, &quot;&#xD;
					+ &quot;s.capacidad, &quot;&#xD;
					+ &quot;s.pvp, &quot;&#xD;
					+ &quot;s.tlfno, &quot;&#xD;
					+ &quot;r.servicios &quot;&#xD;
				+ &quot;FROM &quot;&#xD;
					+ &quot;Salareuniones r &quot;&#xD;
					+ &quot;JOIN sala s USING(id, num) &quot;&#xD;
					+ &quot;JOIN HOTEL H USING(ID) &quot;&#xD;
				+ &quot;WHERE &quot;&#xD;
					+ &quot;(s.num = ? or ? = 0) and &quot;&#xD;
					+ &quot;(s.id = ? or ? = 0) &quot;&#xD;
				+ &quot;ORDER BY &quot;&#xD;
					+ &quot;h.id ASC, &quot;&#xD;
					+ &quot;s.num ASC;&quot;;&#xD;
		&#xD;
		try (PreparedStatement pS = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
			&#xD;
			if (filtro.getNum() != 0) {&#xD;
				pS.setInt(1, filtro.getNum());&#xD;
				pS.setInt(2, filtro.getNum());&#xD;
			} else {&#xD;
				pS.setInt(1, 0);&#xD;
				pS.setInt(2, 0);&#xD;
			}&#xD;
				&#xD;
			if (filtro.getHotel() != null &amp;&amp; filtro.getHotel().getID() != 0 ) {&#xD;
				pS.setInt(3, filtro.getHotel().getID());&#xD;
				pS.setInt(4, filtro.getHotel().getID());&#xD;
			} else {&#xD;
				pS.setString(3, &quot;&quot;);&#xD;
				pS.setString(4, &quot;&quot;);&#xD;
			}&#xD;
			&#xD;
			ResultSet rS = pS.executeQuery();&#xD;
						&#xD;
			ArrayList&lt;SalaReunion> lista = new ArrayList&lt;>();&#xD;
			RepoHotel rH = new RepoHotel();&#xD;
			while (rS.next()) {&#xD;
				SalaReunion r = new SalaReunion(&#xD;
						rS.getInt(2),&#xD;
						rS.getInt(3),&#xD;
						rS.getString(5),&#xD;
						rS.getDouble(4),&#xD;
						rH.get(rS.getInt(1)),&#xD;
						rS.getString(6)&#xD;
						);&#xD;
				lista.add(r);&#xD;
			}&#xD;
			&#xD;
			return lista;&#xD;
&#xD;
		} catch (SQLException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		&#xD;
		&#xD;
		return null;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYRaAOimEe-n_bccIa6R9w" name="insert" specification="_kWJTEeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYRaAeimEe-n_bccIa6R9w" name="salaReunion" type="_kLbQ0OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYRaAuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>// Revisa si ya existe el cliente&#xD;
		if(!check(salaReunion)) {&#xD;
			&#xD;
			RepoSala rSa = new RepoSala();&#xD;
			rSa.insert(salaReunion);&#xD;
			&#xD;
			String query = &quot;INSERT INTO salaReuniones (id, num, servicios) &quot;&#xD;
					+ &quot;VALUES &quot;&#xD;
					+ &quot;(?, ?, ?)&quot;;&#xD;
			&#xD;
			//Si no existe el cliente, hace la consulta a la BBDD&#xD;
	        try (PreparedStatement preparedStatement = ConectMySQL.conexion.prepareStatement(query)) {&#xD;
	            preparedStatement.setInt(1, salaReunion.getHotel().getID());&#xD;
	            preparedStatement.setInt(2, salaReunion.getNum());&#xD;
	            preparedStatement.setString(3, salaReunion.getServicios());&#xD;
	            preparedStatement.executeUpdate();&#xD;
		        &#xD;
		        //Comprueba si la insercion se ha producido y devuelve en funcion de esta&#xD;
		        if (check(salaReunion)) {&#xD;
		        	System.out.print(&quot;\n~~~ Sala de reuniones creada correctamente ~~~\n&quot;);&#xD;
		        	return true;&#xD;
		        } else {&#xD;
		        	System.out.print(&quot;\n>>> Se ha producido un error &lt;&lt;&lt;\n\n&quot;);&#xD;
		        	return false;&#xD;
		        }&#xD;
&#xD;
			//En caso de que haya algun error en la base lo coge aqui&#xD;
			} catch (SQLException e) {&#xD;
				e.printStackTrace();&#xD;
				System.out.println(&quot;Error al insertar la nueva sala de reuniones&quot;);&#xD;
				return false;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		//Si el cliente existe antes de la insercion devuelve false. &#xD;
		System.out.println(&quot;La sala ya existe&quot;);&#xD;
		return true;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kJ1VYOimEe-n_bccIa6R9w" name="get" method="_kYQy-eimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kJ1VYeimEe-n_bccIa6R9w" name="idHotel">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kJ1VYuimEe-n_bccIa6R9w" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWIE8OimEe-n_bccIa6R9w" type="_kLbQ0OimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWG20OimEe-n_bccIa6R9w" name="delete" method="_kYQy8OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWG20eimEe-n_bccIa6R9w" name="aBorrar" type="_kLbQ0OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWG20uimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kWHd4OimEe-n_bccIa6R9w" name="check" method="_kYQy8-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWHd4eimEe-n_bccIa6R9w" name="salaReunion" type="_kLbQ0OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWHd4uimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kWHd4-imEe-n_bccIa6R9w" name="update" method="_kYQy9uimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWHd5OimEe-n_bccIa6R9w" name="modificaciones" type="_kLbQ0OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWHd5eimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kWIE8eimEe-n_bccIa6R9w" name="getListaFiltrada" method="_kYQy_eimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWIsAOimEe-n_bccIa6R9w" name="filtro" type="_kLbQ0OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kXFHMOimEe-n_bccIa6R9w" type="_kVvqcOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWJTEeimEe-n_bccIa6R9w" name="insert" method="_kYRaAOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWJ6IOimEe-n_bccIa6R9w" name="salaReunion" type="_kLbQ0OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWJ6IeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kZBA4eimEe-n_bccIa6R9w" name="" memberEnd="_kZBn8OimEe-n_bccIa6R9w _kXZ3UOimEe-n_bccIa6R9w">
        <ownedEnd xmi:id="_kZBn8OimEe-n_bccIa6R9w" name="" type="_kJRUsOimEe-n_bccIa6R9w" association="_kZBA4eimEe-n_bccIa6R9w"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kZBn8uimEe-n_bccIa6R9w" name="" memberEnd="_kZBn8-imEe-n_bccIa6R9w _kXaeYeimEe-n_bccIa6R9w">
        <ownedEnd xmi:id="_kZBn8-imEe-n_bccIa6R9w" name="" type="_kJUYAOimEe-n_bccIa6R9w" association="_kZBn8uimEe-n_bccIa6R9w"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kZCPAOimEe-n_bccIa6R9w" name="" memberEnd="_kZCPAeimEe-n_bccIa6R9w _kXbFceimEe-n_bccIa6R9w">
        <ownedEnd xmi:id="_kZCPAeimEe-n_bccIa6R9w" name="" type="_kJglQOimEe-n_bccIa6R9w" association="_kZCPAOimEe-n_bccIa6R9w"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kZCPA-imEe-n_bccIa6R9w" name="" memberEnd="_kZCPBOimEe-n_bccIa6R9w _kXcTkOimEe-n_bccIa6R9w">
        <ownedEnd xmi:id="_kZCPBOimEe-n_bccIa6R9w" name="" type="_kJldwOimEe-n_bccIa6R9w" association="_kZCPA-imEe-n_bccIa6R9w"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kZC2EeimEe-n_bccIa6R9w" name="" memberEnd="_kZC2EuimEe-n_bccIa6R9w _kXdhsOimEe-n_bccIa6R9w">
        <ownedEnd xmi:id="_kZC2EuimEe-n_bccIa6R9w" name="" type="_kJq9UOimEe-n_bccIa6R9w" association="_kZC2EeimEe-n_bccIa6R9w"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kZDdIeimEe-n_bccIa6R9w" name="" memberEnd="_kZDdIuimEe-n_bccIa6R9w _kXeIweimEe-n_bccIa6R9w">
        <ownedEnd xmi:id="_kZDdIuimEe-n_bccIa6R9w" name="" type="_kJvOwOimEe-n_bccIa6R9w" association="_kZDdIeimEe-n_bccIa6R9w"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_kHOtUOimEe-n_bccIa6R9w" name="menu">
      <packagedElement xmi:type="uml:Class" xmi:id="_kJ3xoOimEe-n_bccIa6R9w" name="Login">
        <ownedComment xmi:id="_kYrpteimEe-n_bccIa6R9w">
          <body>INICIO DEL PROGRAMA, clase que logea al usuario o en su defecto crea un nuevo usuario</body>
        </ownedComment>
        <ownedAttribute xmi:id="_kXfW4OimEe-n_bccIa6R9w" name="user" isStatic="true" type="_kKqb0uimEe-n_bccIa6R9w" association="_kZDdJOimEe-n_bccIa6R9w"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYRaA-imEe-n_bccIa6R9w" name="main" specification="_kJ4YsOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYRaBOimEe-n_bccIa6R9w" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kYRaBeimEe-n_bccIa6R9w" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>// Conecta con permisos minimos para poder revisar usuarios, en caso de que falle lo intenta 5 veces y luego termina.&#xD;
		int i = 0;&#xD;
		boolean conecta = false;&#xD;
		&#xD;
		do {&#xD;
			i++;&#xD;
			conecta = (!ConectMySQL.conectar()) &amp;&amp; (i &lt;= 5);&#xD;
		} while(conecta);&#xD;
		&#xD;
		if (i > 5) System.exit(0);&#xD;
		&#xD;
		// Bienvenida y pregunta si hay cuenta.&#xD;
		System.out.print(&#xD;
				&quot;~~~ Bienvenido a APE ~~~\n&quot;&#xD;
				+ &quot;\n&quot;&#xD;
				+ &quot;¿Dispones de cuenta? &quot;);&#xD;
		boolean respuesta = Input.inYesNo();&#xD;
		&#xD;
		// Si no hay cuenta, obliga a crear una correctamente.&#xD;
		if (!respuesta) while(!crearCuenta()) {};&#xD;
		&#xD;
		// Hasta este punto user esta vacio, por lo que el resto del programa en caso de saltarselo puede fallar.&#xD;
		identificarse(); &#xD;
		&#xD;
		// En caso de ser trabajador, le da permisos de adm.&#xD;
		if (user.isbTrabajador()) ConectMySQL.conectarAdm(); &#xD;
		&#xD;
		// Entra en el programa.&#xD;
		MenuPrincipal.print();&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYRaBuimEe-n_bccIa6R9w" name="crearCuenta" specification="_kJ4_wuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYRaB-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&quot;\n~~~ Creacion de cuenta ~~~\n&quot;);&#xD;
		Cliente c = new Cliente(&#xD;
			Input.inDNI(), &#xD;
			Input.inNombre(), &#xD;
			Input.inApellido(), &#xD;
			Input.inTelefono(), &#xD;
			Input.inEmail(), &#xD;
			false, &#xD;
			Input.inPass()&#xD;
		);&#xD;
		RepoCliente rC = new RepoCliente(); &#xD;
		return rC.insert(c);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYRaCOimEe-n_bccIa6R9w" name="identificarse" specification="_kJ4_xOimEe-n_bccIa6R9w">
          <language>java</language>
          <body>do {&#xD;
			System.out.print(&quot;\n~~~ Identificate ~~~\n&quot;);&#xD;
			RepoCliente rC = new RepoCliente();&#xD;
			String DNI = Input.inDNI();&#xD;
			if (rC.checkCreden(DNI, Input.inPass())) {&#xD;
				user = rC.get(DNI);&#xD;
				System.out.print(&quot;\n\n>>> IDENTIFICACION CORRECTA &lt;&lt;&lt;\n\n&quot;);&#xD;
			} else {&#xD;
				System.out.print(&quot;\n\n>>> ERROR EN LA IDENTIFICACION &lt;&lt;&lt;\n\n&quot;&#xD;
						+ &quot;¿Quieres recuperar su contraseña? &quot;);&#xD;
				boolean respuesta = Input.inYesNo();&#xD;
				if (respuesta) {&#xD;
					System.out.print(&quot;\nContacte con nuestro servicio de atencion al cliente por telefono para ello\n&quot;);&#xD;
					main(null);&#xD;
				} else {&#xD;
					identificarse();&#xD;
				}&#xD;
				&#xD;
			}&#xD;
		} while (user == null);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kJ4YsOimEe-n_bccIa6R9w" name="main" isStatic="true" method="_kYRaA-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kJ4_wOimEe-n_bccIa6R9w" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kJ4_weimEe-n_bccIa6R9w" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJ4_wuimEe-n_bccIa6R9w" name="crearCuenta" isStatic="true" method="_kYRaBuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kJ4_w-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJ4_xOimEe-n_bccIa6R9w" name="identificarse" isStatic="true" method="_kYRaCOimEe-n_bccIa6R9w"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kJ9RMOimEe-n_bccIa6R9w" name="MenuAdmin">
        <ownedComment xmi:id="_kYrptuimEe-n_bccIa6R9w">
          <body>Menu de administracion, solo disponible para trabajadores</body>
        </ownedComment>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYSBEOimEe-n_bccIa6R9w" name="print" specification="_kJ-fUOimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print(&#xD;
				&quot;\n\n~~~ Menu de administración ~~~\n&quot;&#xD;
				+ &quot;1. Reservas\n&quot;&#xD;
				+ &quot;2. Clientes\n&quot;&#xD;
				+ &quot;3. Hoteles\n&quot;&#xD;
				+ &quot;4. Habitaciones\n&quot;&#xD;
				+ &quot;5. Otros lugares\n&quot;&#xD;
				+ &quot;0. Volver al menu principal\n&quot;&#xD;
				+ &quot;Seleccione la opcion que desea: &quot;);&#xD;
		selector(Input.inOpc());		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYSBEeimEe-n_bccIa6R9w" name="selector" specification="_kJ_GYOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYSBEuimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>switch (opc) {&#xD;
		case 1:&#xD;
			printReservas();&#xD;
			break;&#xD;
		case 2:&#xD;
			printClientes();&#xD;
			break;&#xD;
		case 3:&#xD;
			printHoteles();&#xD;
			break;&#xD;
		case 4:&#xD;
			printHabitaciones();&#xD;
			break;&#xD;
		case 5:&#xD;
			printOtros();&#xD;
			break;&#xD;
		case 0:&#xD;
			MenuPrincipal.print();&#xD;
			break;&#xD;
		default:&#xD;
			print();&#xD;
			break;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYSBE-imEe-n_bccIa6R9w" name="printReservas" specification="_kJ_tcOimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print(&#xD;
				&quot;\n\n~~~ Menu de administración / Reservas ~~~\n&quot;&#xD;
				+ &quot;1. Lista\n&quot;&#xD;
				+ &quot;2. Agregar\n&quot;&#xD;
				+ &quot;3. Modificar\n&quot;&#xD;
				+ &quot;4. Eliminar\n&quot;&#xD;
				+ &quot;0. Volver atras\n&quot;&#xD;
				+ &quot;Seleccione la opcion que desea: &quot;);&#xD;
		selectorReservas(Input.inOpc());&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYSBFOimEe-n_bccIa6R9w" name="selectorReservas" specification="_kJ_tceimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYSBFeimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>switch (opc) {&#xD;
		case 1:&#xD;
			listaReserva();&#xD;
			break;&#xD;
		case 2:&#xD;
			addReserva();&#xD;
			break;&#xD;
		case 3:&#xD;
			modifyReserva();&#xD;
			break;&#xD;
		case 4:&#xD;
			deleteReserva();&#xD;
			break;&#xD;
		case 0:&#xD;
			print();&#xD;
		default:&#xD;
			printReservas();&#xD;
		}&#xD;
		printReservas();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYSBFuimEe-n_bccIa6R9w" name="deleteReserva" specification="_kJ_tc-imEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print( &#xD;
				&quot;¿Que reserva deseas eliminar?\n&quot;&#xD;
				+ &quot;1. Buscar por CODIGO\n&quot;&#xD;
				+ &quot;2. Buscar por CLIENTE\n&quot;&#xD;
				+ &quot;3. Buscar por HOTEL\n&quot;&#xD;
				+ &quot;4. Buscar por FECHAS\n&quot;&#xD;
				+ &quot;Seleccione la opcion que deseas: &quot;&#xD;
				);&#xD;
		Reserva aBorrar = selectorModifyReservas(Input.inOpc());&#xD;
		RepoReserva rR = new RepoReserva();&#xD;
		System.out.print((rR.delete(aBorrar)) ? &quot;Borrado correctamente&quot; : &quot;Error al eliminar&quot;);&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYSBF-imEe-n_bccIa6R9w" name="modifyReserva" specification="_kKAUgOimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print( &#xD;
				&quot;\n¿Que reserva deseas modificar?\n&quot;&#xD;
				+ &quot;1. Buscar por CODIGO\n&quot;&#xD;
				+ &quot;2. Buscar por CLIENTE\n&quot;&#xD;
				+ &quot;3. Buscar por HOTEL\n&quot;&#xD;
				+ &quot;4. Buscar por FECHAS\n&quot;&#xD;
				+ &quot;Seleccione la opcion que deseas: &quot;&#xD;
				);&#xD;
		Reserva aModificar = selectorModifyReservas(Input.inOpc());&#xD;
		if (aModificar == null) {&#xD;
			System.out.print(&quot;\n>>> ERROR: Reserva no valida &lt;&lt;&lt;\n&quot;);&#xD;
			modifyReserva();&#xD;
		} else {&#xD;
		System.out.print(&#xD;
				&quot;\n~~~ Datos actuales ~~~\n&quot; +&#xD;
				aModificar.toString() + &quot;\n&quot; +&#xD;
				&quot;\n¿Que desea modificar?\n&quot; +&#xD;
				&quot;1. Cliente\n&quot; +&#xD;
				&quot;2. Fecha de inicio\n&quot; +&#xD;
				&quot;3. Fecha de finalizacion\n&quot; +&#xD;
				&quot;Selecciones la opcion que desee: &quot;&#xD;
				);&#xD;
		selectorModifyReserva(Input.inOpc(), aModificar);		&#xD;
		System.out.print(&quot;Reserva modificada&quot;);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYSBGOimEe-n_bccIa6R9w" name="selectorModifyReserva" specification="_kWLIQOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYSBGeimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYSBGuimEe-n_bccIa6R9w" name="aModificar" type="_kLQ4wOimEe-n_bccIa6R9w"/>
          <language>java</language>
          <body>RepoReserva rR = new RepoReserva();&#xD;
		switch (opc) {&#xD;
		&#xD;
		// Cliente&#xD;
		case 1:&#xD;
			RepoCliente rC = new RepoCliente();&#xD;
			Cliente c = rC.get(Input.inDNI());&#xD;
			aModificar.setCliente(c);&#xD;
			rR.update(aModificar);&#xD;
			break;&#xD;
		&#xD;
		// Fecha de inicio&#xD;
		case 2:&#xD;
			Date newFecIni = Input.inFecIni();&#xD;
			if (aModificar.getFecFin().compareTo(newFecIni) &lt; 0) {&#xD;
				System.out.print(&quot;\n\n>>> ERROR: La nueva fecha es posterior a la finalizacion de la reserva &lt;&lt;&lt;\n&quot;);&#xD;
			} else {&#xD;
				aModificar.setFecIni(newFecIni);&#xD;
				rR.update(aModificar);&#xD;
			}&#xD;
			break;&#xD;
			&#xD;
		// Fecha de fin	&#xD;
		case 3:	&#xD;
			Date newFecFin = Input.inFecFin();&#xD;
			if (aModificar.getFecIni().compareTo(newFecFin) > 0) {&#xD;
				System.out.print(&quot;\n\n>>> ERROR: La nueva fecha es anterior al inicio de la reserva &lt;&lt;&lt;\n&quot;);&#xD;
			} else {&#xD;
				aModificar.setFecFin(newFecFin);&#xD;
				rR.update(aModificar);&#xD;
			}&#xD;
			break;&#xD;
		&#xD;
		default:&#xD;
			modifyReserva();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYSBG-imEe-n_bccIa6R9w" name="selectorModifyReservas" specification="_kKAUgeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYSBHOimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYSBHeimEe-n_bccIa6R9w" type="_kLQ4wOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>Reserva aModificar = null;&#xD;
		RepoReserva rR = new RepoReserva();&#xD;
		Reserva filtro = null;&#xD;
		switch (opc) {&#xD;
		&#xD;
		// Buscar por codigo&#xD;
		case 1:&#xD;
			aModificar = rR.get(Input.inCod());&#xD;
			break;&#xD;
			&#xD;
		// Buscar por cliente&#xD;
		case 2:&#xD;
			// Imprime todas las reservas del cliente &#xD;
			RepoCliente rC = new RepoCliente();&#xD;
			filtro = new Reserva(0, null, null, rC.get(Input.inDNI()), null, 0);&#xD;
			printReservasCliente(filtro);&#xD;
			&#xD;
			// Elige la reserva por codigo&#xD;
			System.out.print(&quot;Seleccione &quot;);&#xD;
			aModificar = rR.get(Input.inCod());&#xD;
			break;&#xD;
		&#xD;
		// Buscar por hotel&#xD;
		case 3:&#xD;
			// Imprime todas las reservas del hotel&#xD;
			RepoHotel rH = new RepoHotel();&#xD;
			Sala s = new Sala(0, 0, &quot;&quot;, 0, rH.get(rH.getPKByName(Input.inNombre())), &quot;&quot;);&#xD;
			filtro = new Reserva(0, null, null, null, s, 0);&#xD;
			printReservasCliente(filtro);&#xD;
			&#xD;
			// Elige la reserva por codigo&#xD;
			System.out.print(&quot;Seleccione &quot;);&#xD;
			aModificar = rR.get(Input.inCod());&#xD;
			break;&#xD;
		&#xD;
		// Buscar por fecha&#xD;
		case 4:&#xD;
			// Elegir como buscar las reservas&#xD;
			System.out.print(&quot;\n&quot;&#xD;
					+ &quot;1. Por fecha de inicio\n&quot;&#xD;
					+ &quot;2. Por fecha de finalizacion\n&quot;&#xD;
					+ &quot;3. Por ambas fechas\n&quot;&#xD;
					+ &quot;0. Volver atras\n&quot;&#xD;
					+ &quot;Seleccione la opcion que desee: &quot;);&#xD;
			int opc2 = Input.inOpc();&#xD;
			filtro = new Reserva(0, null, null, null, null, 0);&#xD;
			switch (opc2) {&#xD;
			case 1:&#xD;
				filtro.setFecIni(Input.inFecIni());&#xD;
				break;&#xD;
			case 2:&#xD;
				filtro.setFecFin(Input.inFecFin());&#xD;
				break;&#xD;
			case 3:&#xD;
				filtro.setFecIni(Input.inFecIni());&#xD;
				filtro.setFecFin(Input.inFecFin());&#xD;
				break;&#xD;
			default:&#xD;
				break; &#xD;
			}&#xD;
			printReservasCliente(filtro);&#xD;
			&#xD;
			// Elige la reserva por codigo&#xD;
			System.out.print(&quot;Seleccione &quot;);&#xD;
			aModificar = rR.get(Input.inCod());&#xD;
			break;&#xD;
		&#xD;
		// Vuelve atras&#xD;
		default:&#xD;
			modifyReserva();&#xD;
		}&#xD;
		return aModificar;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYSoIOimEe-n_bccIa6R9w" name="printReservasCliente" specification="_kWLvU-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYSoIeimEe-n_bccIa6R9w" name="filtro" type="_kLQ4wOimEe-n_bccIa6R9w"/>
          <language>java</language>
          <body>RepoReserva rR = new RepoReserva();&#xD;
		ArrayList&lt;Reserva> lista = rR.getListaFiltrada(filtro);&#xD;
		if (lista != null &amp;&amp; !lista.isEmpty()) {&#xD;
		&#xD;
			System.out.print(&#xD;
					&quot;Id&quot; + &quot;\t| &quot; &#xD;
					+ &quot;Fecha Inicio&quot; + &quot;\t| &quot;&#xD;
					+ &quot;Fecha Fin&quot; + &quot;\t| &quot;&#xD;
					+ &quot;DNI&quot; + &quot;\t\t| &quot;&#xD;
					+ &quot;Nombre&quot; + &quot;\t| &quot;&#xD;
					+ &quot;Apellido/s&quot; + &quot;\t| &quot;&#xD;
					+ &quot;Hotel&quot; + &quot;\t\t| &quot;&#xD;
					+ &quot;Numero habitacion&quot; + &quot;\n&quot;&#xD;
					+ &quot;--------------------------------------------------------------------------------------------------------------------\n&quot;);&#xD;
			int i = 0;&#xD;
			while (i &lt; lista.size()) {&#xD;
				System.out.print(&quot;&quot;&#xD;
						+ lista.get(i).getID() + &quot;\t| &quot;&#xD;
						+ lista.get(i).getFecIni().toString() + &quot;\t| &quot;&#xD;
						+ lista.get(i).getFecFin().toString() + &quot;\t| &quot;&#xD;
						+ lista.get(i).getCliente().getDNI() + &quot;\t| &quot;&#xD;
						+ &#xD;
						(&#xD;
							(lista.get(i).getCliente().getNombre().length() &lt; 6) ? &#xD;
								(lista.get(i).getCliente().getNombre() + &quot;\t\t| &quot;) : &#xD;
								(lista.get(i).getCliente().getNombre() + &quot;\t| &quot;)&#xD;
						)&#xD;
						&#xD;
						+ &#xD;
						(&#xD;
							(lista.get(i).getCliente().getApellidos().length() &lt; 6) ? &#xD;
								(lista.get(i).getCliente().getApellidos() + &quot;\t\t| &quot;) : &#xD;
								(lista.get(i).getCliente().getApellidos() + &quot;\t| &quot;)&#xD;
						)&#xD;
						&#xD;
						+ lista.get(i).getSala().getHotel().getNombre() + &quot;\t| &quot;&#xD;
						+ lista.get(i).getSala().getNum() + &quot;\n&quot;&#xD;
				);&#xD;
				i++;&#xD;
				if (i%5 == 0) System.out.print(&quot;--------------------------------------------------------------------------------------------------------------------\n&quot;);&#xD;
			}&#xD;
			System.out.print(&quot;\n&quot;);&#xD;
			&#xD;
		} else {&#xD;
			System.out.print(&quot;\n\n>>> No hay reservas &lt;&lt;&lt;\n\n&quot;);&#xD;
			printReservas();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYSoIuimEe-n_bccIa6R9w" name="addReserva" specification="_kKA7kOimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print(&quot;\n>>> Recuerda tener todos los datos (incluido el numero de habitacion) &lt;&lt;&lt;\n&quot;&#xD;
				+ &quot;¿Tienes los datos? &quot;);&#xD;
		if (Input.inYesNo()) {&#xD;
			RepoReserva rR = new RepoReserva();&#xD;
			RepoCliente rC = new RepoCliente();&#xD;
			RepoSala rS = new RepoSala();&#xD;
			RepoHotel rH = new RepoHotel();&#xD;
			ArrayList&lt;String> hoteles = rH.getMenuPrincipal();&#xD;
			int i = 0;&#xD;
			while(i &lt; hoteles.size()) {&#xD;
				System.out.print((i+1) + &quot;. &quot; + hoteles.get(i) + &quot;\n&quot;);&#xD;
				i++;&#xD;
			}	&#xD;
			System.out.print(&quot;Seleccione el hotel que desea: &quot;);&#xD;
			int hotel = Input.inOpc();&#xD;
		&#xD;
			Hotel h = rH.get(hotel);&#xD;
			Reserva r = new Reserva(&#xD;
								rR.getNewID(),&#xD;
								Input.inFecIni(),&#xD;
								Input.inFecFin(),&#xD;
								rC.get(Input.inDNI()),&#xD;
								rS.get(h.getID(), Input.inNum()),&#xD;
								0&#xD;
							);&#xD;
			rR.insert(r);&#xD;
			System.out.println(&quot;&quot;);&#xD;
		} else {&#xD;
			printReservas();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYSoI-imEe-n_bccIa6R9w" name="listaReserva" specification="_kKA7keimEe-n_bccIa6R9w">
          <language>java</language>
          <body>if (!filtroReserva()) {&#xD;
			Reserva filtro = new Reserva(0, null, null, null, null, 0);&#xD;
			printResultadoFiltroReserva(filtro);&#xD;
		}	&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYSoJOimEe-n_bccIa6R9w" name="filtroReserva" specification="_kKA7kuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYSoJeimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&quot;\n¿Deseas filtrar el resultado? &quot;);&#xD;
		boolean respuesta = Input.inYesNo();&#xD;
		if (respuesta) {&#xD;
&#xD;
			int opc = 0;&#xD;
			Reserva filtro = new Reserva(0, null, null, null, null, 0);&#xD;
			do {&#xD;
	&#xD;
				// Print filtro&#xD;
				printMenuFiltroReserva(filtro);&#xD;
				System.out.print(&quot;Seleccione la opcion que desea: &quot;);&#xD;
				opc = Input.inOpc();&#xD;
				&#xD;
				// Selector&#xD;
				filtro = selectorMenuFiltroReserva(filtro, opc);&#xD;
			} while(opc != 0);&#xD;
			&#xD;
						&#xD;
			// Print resultado&#xD;
			printResultadoFiltroReserva(filtro);&#xD;
			return true;&#xD;
		}&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYSoJuimEe-n_bccIa6R9w" name="printMenuFiltroReserva" specification="_kWMWYOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYSoJ-imEe-n_bccIa6R9w" name="filtro" type="_kLQ4wOimEe-n_bccIa6R9w"/>
          <language>java</language>
          <body>System.out.print(&#xD;
				&quot;\n>>> Filtro &lt;&lt;&lt;\n&quot;&#xD;
				&#xD;
				// 1. Por hotel		&#xD;
				+ 														 &#xD;
				((filtro.getSala() == null) ?&#xD;
						&quot;1. Por hotel\n&quot; :&#xD;
						((filtro.getSala().getHotel() == null) ? &#xD;
							&quot;1. Por hotel\n&quot; : 						&#xD;
							filtro.getSala().getHotel().getNombre() + &quot;\n&quot;&#xD;
						)&#xD;
				)&#xD;
				&#xD;
				// 2. Por cliente&#xD;
				+ &#xD;
				((filtro.getCliente() == null) ?&#xD;
						&quot;2. Por cliente\n&quot; :&#xD;
						((filtro.getCliente().getDNI() == &quot;&quot;) ? &#xD;
								&quot;2. Por cliente\n&quot; : &#xD;
								filtro.getCliente().getNombre() + &quot; &quot; + filtro.getCliente().getNombre() + &quot;\n&quot;&#xD;
						)&#xD;
				)&#xD;
				&#xD;
				// 3. Por numero de habitacion&#xD;
				+ &#xD;
				((filtro.getSala() == null) ?&#xD;
						&quot;3. Por numero de habitacion\n&quot; :&#xD;
						((filtro.getSala().getNum() == 0) ? &#xD;
								&quot;3. Por numero de habitacion\n&quot; : &#xD;
								filtro.getSala().getNum() + &quot;\n&quot;&#xD;
						)&#xD;
				)&#xD;
				&#xD;
				// 4. Por fecha&#xD;
				+ // Si no esta el filtro muestra &quot;4. Por fechas&quot; si esta relleno, solo con minimo o maximo o ambos muestra las fechas.&#xD;
				(((filtro.getFecIni() == null) &amp;&amp; (filtro.getFecFin() == null)) ? &#xD;
						&quot;4. Por fechas\n&quot; : &#xD;
						(((filtro.getFecIni() != null) &amp;&amp; (filtro.getFecFin() == null)) ?&#xD;
								&quot;Desde &quot; + filtro.getFecIni().toString() + &quot;\n&quot;:&#xD;
								(((filtro.getFecIni() == null) &amp;&amp; (filtro.getFecFin() != null)) ?&#xD;
										&quot;Hasta &quot; + filtro.getFecFin().toString() + &quot;\n&quot;:&#xD;
										&quot;Desde &quot; + filtro.getFecIni().toString() + &quot; hasta &quot; + filtro.getFecFin().toString() + &quot;\n&quot;&#xD;
								)&#xD;
						)&#xD;
				)&#xD;
				&#xD;
				+ &quot;0. Para continuar\n&quot;&#xD;
		);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYSoKOimEe-n_bccIa6R9w" name="selectorMenuFiltroReserva" specification="_kWMWYuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYSoKeimEe-n_bccIa6R9w" name="filtro" type="_kLQ4wOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYSoKuimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYSoK-imEe-n_bccIa6R9w" type="_kLQ4wOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>switch (opc) {&#xD;
		&#xD;
		// Filtro hotel&#xD;
		//--------------------------------------------------------------------------------------------------------------&#xD;
		case 1: // Si no hay una sala asociada la crea con el hotel, si ya existe le asigna el hotel&#xD;
			RepoHotel rH = new RepoHotel();&#xD;
			ArrayList&lt;String> hoteles = rH.getMenuPrincipal();&#xD;
			int i = 0;&#xD;
			while(i &lt; hoteles.size()) {&#xD;
				System.out.print((i+1) + &quot;. &quot; + hoteles.get(i) + &quot;\n&quot;);&#xD;
				i++;&#xD;
			}	&#xD;
			System.out.print(&quot;Seleccione el hotel que desea: &quot;);&#xD;
			int hotel = Input.inOpc();&#xD;
		&#xD;
			if (filtro.getSala() == null) {&#xD;
				Sala s = new Sala(0, 0, &quot;&quot;, 0, rH.get(hotel), &quot;&quot;);&#xD;
				filtro.setSala(s);&#xD;
			} else {&#xD;
				filtro.getSala().setHotel(rH.get(hotel));&#xD;
			}&#xD;
			break;&#xD;
			&#xD;
		// Filtro cliente&#xD;
		//--------------------------------------------------------------------------------------------------------------		&#xD;
		case 2: // Añade y sobreescribe el cliente al filtro&#xD;
			RepoCliente rC = new RepoCliente();&#xD;
			filtro.setCliente(rC.get(Input.inDNI()));&#xD;
			break;&#xD;
			&#xD;
		// Filtro sala	&#xD;
		//--------------------------------------------------------------------------------------------------------------&#xD;
		case 3: // Si no hay una sala en el filtro la crea con el numero, si ya existe sobreescribe el numero&#xD;
			if (filtro.getSala() == null) {&#xD;
				Sala s = new Sala(Input.inNum(), 0, &quot;&quot;, 0, null, &quot;&quot;);&#xD;
				filtro.setSala(s);&#xD;
			} else {&#xD;
				filtro.getSala().setNum(Input.inNum());&#xD;
			}&#xD;
			break;&#xD;
			&#xD;
		// Filtro fecha	&#xD;
		//--------------------------------------------------------------------------------------------------------------&#xD;
		case 4: // Por fecha&#xD;
			System.out.print(&quot;\n&quot;&#xD;
					+ &quot;1. Por fecha de inicio\n&quot;&#xD;
					+ &quot;2. Por fecha de finalizacion\n&quot;&#xD;
					+ &quot;3. Por ambas fechas\n&quot;&#xD;
					+ &quot;0. Volver atras\n&quot;&#xD;
					+ &quot;Seleccione la opcion que desee: &quot;);&#xD;
			int opc2 = Input.inOpc();&#xD;
			&#xD;
			switch (opc2) {&#xD;
			case 1:&#xD;
				filtro.setFecIni(Input.inFecIni());&#xD;
				break;&#xD;
			case 2:&#xD;
				filtro.setFecFin(Input.inFecFin());&#xD;
				break;&#xD;
			case 3:&#xD;
				filtro.setFecIni(Input.inFecIni());&#xD;
				filtro.setFecFin(Input.inFecFin());&#xD;
				break;&#xD;
			default:&#xD;
				break; &#xD;
			}&#xD;
			break;&#xD;
			&#xD;
		//--------------------------------------------------------------------------------------------------------------&#xD;
		default:&#xD;
			break;&#xD;
			&#xD;
		}&#xD;
		return filtro;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYTPMOimEe-n_bccIa6R9w" name="printResultadoFiltroReserva" specification="_kWM9ceimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYTPMeimEe-n_bccIa6R9w" name="filtro" type="_kLQ4wOimEe-n_bccIa6R9w"/>
          <language>java</language>
          <body>RepoReserva rR = new RepoReserva();&#xD;
		ArrayList&lt;Reserva> lista = rR.getListaFiltrada(filtro);&#xD;
		&#xD;
		System.out.print(&#xD;
				&quot;Fecha Inicio&quot; + &quot;\t| &quot;&#xD;
				+ &quot;Fecha Fin&quot; + &quot;\t| &quot;&#xD;
				+ &quot;DNI&quot; + &quot;\t\t| &quot;&#xD;
				+ &quot;Nombre&quot; + &quot;\t| &quot;&#xD;
				+ &quot;Apellido/s&quot; + &quot;\t| &quot;&#xD;
				+ &quot;Hotel&quot; + &quot;\t\t| &quot;&#xD;
				+ &quot;Numero habitacion&quot; + &quot;\n&quot;&#xD;
						+ &quot;--------------------------------------------------------------------------------------------------------------------\n&quot;);&#xD;
		int i = 0;&#xD;
		while (i &lt; lista.size()) {&#xD;
			System.out.print(&#xD;
					lista.get(i).getFecIni().toString() + &quot;\t| &quot;&#xD;
					+ lista.get(i).getFecFin().toString() + &quot;\t| &quot;&#xD;
					+ lista.get(i).getCliente().getDNI() + &quot;\t| &quot;&#xD;
					+ (&#xD;
						(lista.get(i).getCliente().getNombre().length() &lt; 6) ? &#xD;
							(lista.get(i).getCliente().getNombre() + &quot;\t\t| &quot;) : &#xD;
							(lista.get(i).getCliente().getNombre() + &quot;\t| &quot;)&#xD;
					)&#xD;
					+ (&#xD;
							(lista.get(i).getCliente().getApellidos().length() &lt; 6) ? &#xD;
								(lista.get(i).getCliente().getApellidos() + &quot;\t\t| &quot;) : &#xD;
								(lista.get(i).getCliente().getApellidos() + &quot;\t| &quot;)&#xD;
						)&#xD;
					+ lista.get(i).getSala().getHotel().getNombre() + &quot;\t| &quot;&#xD;
					+ lista.get(i).getSala().getNum() + &quot;\n&quot;&#xD;
			);&#xD;
			i++;&#xD;
			if (i%5 == 0) System.out.print(&quot;--------------------------------------------------------------------------------------------------------------------\n&quot;);&#xD;
		}&#xD;
		System.out.print(&quot;\n&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYTPMuimEe-n_bccIa6R9w" name="printClientes" specification="_kKBioOimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print(&#xD;
				&quot;\n~~~ Menu de administración / Clientes ~~~\n&quot;&#xD;
				+ &quot;1. Listado\n&quot;&#xD;
				+ &quot;2. Agregar\n&quot;&#xD;
				+ &quot;3. Modificar\n&quot;&#xD;
				+ &quot;4. Eliminar\n&quot;&#xD;
				+ &quot;0. Volver atras\n&quot;&#xD;
				+ &quot;Seleccione la opcion que desee: &quot;);&#xD;
		selectorClientes(Input.inOpc());&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYTPM-imEe-n_bccIa6R9w" name="selectorClientes" specification="_kKBioeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYTPNOimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>switch (opc) {&#xD;
		case 1:&#xD;
			listaClientes();&#xD;
			break;&#xD;
		case 2:&#xD;
			addCliente();&#xD;
			break;&#xD;
		case 3:&#xD;
			modifyCliente();&#xD;
			break;&#xD;
		case 4:&#xD;
			deleteCliente();&#xD;
			break;&#xD;
		case 0:&#xD;
			print();&#xD;
		default:&#xD;
			printClientes();&#xD;
		}&#xD;
		printClientes();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYTPNeimEe-n_bccIa6R9w" name="deleteCliente" specification="_kKCJsOimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print( &#xD;
				&quot;¿Que cliente deseas eliminar?\n&quot;&#xD;
				+ &quot;1. Buscar por DNI\n&quot;&#xD;
				+ &quot;2. Buscar por NOMBRE\n&quot;&#xD;
				+ &quot;3. Buscar por TELEFONO\n&quot;&#xD;
				+ &quot;4. Buscar por EMAIL\n&quot;&#xD;
				+ &quot;Seleccione la opcion que deseas: &quot;&#xD;
				);&#xD;
		Cliente aBorrar = selectorModifyClientes(Input.inOpc());&#xD;
		RepoCliente rC = new RepoCliente();&#xD;
		System.out.print((rC.delete(aBorrar)) ? &quot;Borrado correctamente&quot; : &quot;Error al eliminar&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYTPNuimEe-n_bccIa6R9w" name="modifyCliente" specification="_kKCJseimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print( &#xD;
				&quot;\n¿Que cliente deseas modificar?\n&quot;&#xD;
				+ &quot;1. Buscar por DNI\n&quot;&#xD;
				+ &quot;2. Buscar por NOMBRE\n&quot;&#xD;
				+ &quot;3. Buscar por TELEFONO\n&quot;&#xD;
				+ &quot;4. Buscar por EMAIL\n&quot;&#xD;
				+ &quot;Seleccione la opcion que deseas: &quot;&#xD;
				);&#xD;
		Cliente aModificar = selectorModifyClientes(Input.inOpc());&#xD;
		if (aModificar == null) {&#xD;
			System.out.print(&quot;\n>>> ERROR: Cliente no valido &lt;&lt;&lt;\n&quot;);&#xD;
			modifyReserva();&#xD;
		} else {&#xD;
		System.out.print(&#xD;
				&quot;\n~~~ Datos actuales ~~~\n&quot; +&#xD;
				aModificar.toString() + &quot;\n&quot; +&#xD;
				&quot;\n¿Que desea modificar?\n&quot; +&#xD;
				&quot;1. Trabajador o cliente\n&quot; +&#xD;
				&quot;2. Email\n&quot; +&#xD;
				&quot;3. Telefono\n&quot; +&#xD;
				&quot;4. Tarifa\n&quot; +&#xD;
				&quot;5. Nombre\n&quot; +&#xD;
				&quot;6. Apellidos\n&quot; +&#xD;
				&quot;7. Contraseña\n&quot; +&#xD;
				&quot;0. Volver atras\n&quot; +&#xD;
				&quot;Selecciones la opcion que desee: &quot;&#xD;
				);&#xD;
		selectorModifyCliente(Input.inOpc(), aModificar);&#xD;
		System.out.print(&quot;Cliente modificado&quot;);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYTPN-imEe-n_bccIa6R9w" name="selectorModifyCliente" specification="_kWNkgOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYTPOOimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYTPOeimEe-n_bccIa6R9w" name="aModificar" type="_kKqb0uimEe-n_bccIa6R9w"/>
          <language>java</language>
          <body>RepoCliente rC = new RepoCliente();&#xD;
		switch (opc) {&#xD;
		&#xD;
		// Trabajador o cliente&#xD;
		case 1:&#xD;
			System.out.print(&quot;¿Es trabajador? &quot;);&#xD;
			aModificar.setbTrabajador(Input.inYesNo());&#xD;
			rC.update(aModificar);&#xD;
			break;&#xD;
		&#xD;
		// Email&#xD;
		case 2:&#xD;
			aModificar.setEmail(Input.inEmail());&#xD;
			rC.update(aModificar);&#xD;
			break;&#xD;
			&#xD;
		// Telefono	&#xD;
		case 3:	&#xD;
			aModificar.setTelefono(Input.inTelefono());&#xD;
			rC.update(aModificar);&#xD;
			break;			&#xD;
			&#xD;
		// Tarifa&#xD;
		case 4:&#xD;
			aModificar.setTarifa(Input.inTarifa());&#xD;
			rC.update(aModificar);&#xD;
			break;&#xD;
			&#xD;
		// Nombre&#xD;
		case 5:&#xD;
			aModificar.setNombre(Input.inNombre());&#xD;
			rC.update(aModificar);&#xD;
			break;&#xD;
			&#xD;
		// Apellido&#xD;
		case 6:&#xD;
			aModificar.setApellidos(Input.inApellido());&#xD;
			rC.update(aModificar);&#xD;
			break;&#xD;
			&#xD;
		// Contraseña&#xD;
		case 7:&#xD;
			aModificar.setPass(Input.inPass());&#xD;
			rC.update(aModificar);&#xD;
			break;&#xD;
			&#xD;
		default:&#xD;
			modifyCliente();	&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYTPOuimEe-n_bccIa6R9w" name="selectorModifyClientes" specification="_kKCwwOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYTPO-imEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYTPPOimEe-n_bccIa6R9w" type="_kKqb0uimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>Cliente aModificar = null;&#xD;
		RepoCliente rC = new RepoCliente();&#xD;
		Cliente filtro = null;&#xD;
		int trabajador = -1;&#xD;
		switch (opc) {&#xD;
		&#xD;
		// Buscar por DNI&#xD;
		case 1:&#xD;
			aModificar = rC.get(Input.inDNI());&#xD;
			break;&#xD;
			&#xD;
		// Buscar por NOMBRE&#xD;
		case 2:&#xD;
			filtro = new Cliente(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, false, &quot;&quot;, &quot;-1&quot;);&#xD;
			trabajador = Integer.parseInt(filtro.getPass());&#xD;
			printResultadoFiltroCliente(filtro, trabajador);&#xD;
			&#xD;
			// Elige el cliente por DNI&#xD;
			System.out.print(&quot;Seleccione &quot;);&#xD;
			aModificar = rC.get(Input.inDNI());&#xD;
			break;&#xD;
		&#xD;
		// Buscar por TELEFONO&#xD;
		case 3:&#xD;
			filtro = new Cliente(&quot;&quot;, &quot;&quot;, &quot;&quot;, Input.inTelefono(), &quot;&quot;, false, &quot;&quot;, &quot;-1&quot;);&#xD;
			trabajador = Integer.parseInt(filtro.getPass());&#xD;
			printResultadoFiltroCliente(filtro, trabajador);&#xD;
			&#xD;
			// Elige la reserva por DNI&#xD;
			System.out.print(&quot;Seleccione &quot;);&#xD;
			aModificar = rC.get(Input.inDNI());&#xD;
			break;&#xD;
		&#xD;
		// Buscar por EMAIL&#xD;
		case 4:&#xD;
			filtro = new Cliente(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, Input.inEmail(), false, &quot;&quot;, &quot;-1&quot;);&#xD;
			trabajador = Integer.parseInt(filtro.getPass());&#xD;
			printResultadoFiltroCliente(filtro, trabajador);&#xD;
			&#xD;
			// Elige la reserva por DNI&#xD;
			System.out.print(&quot;Seleccione &quot;);&#xD;
			aModificar = rC.get(Input.inDNI());&#xD;
			break;&#xD;
		&#xD;
		// Volver atras&#xD;
		case 0: &#xD;
			printClientes();&#xD;
		// Vuelve atras&#xD;
		default:&#xD;
			modifyCliente();&#xD;
		}&#xD;
		return aModificar;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYT2QOimEe-n_bccIa6R9w" name="addCliente" specification="_kKDX0OimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print(&quot;\n>>> Recuerda tener todos los datos &lt;&lt;&lt;\n&quot;&#xD;
				+ &quot;¿Tienes los datos? &quot;);&#xD;
		if (Input.inYesNo()) {&#xD;
			RepoCliente rC = new RepoCliente();&#xD;
			System.out.print(&quot;¿Es trabajador? &quot;);&#xD;
			boolean bTrabajador = Input.inYesNo();&#xD;
			Cliente c = new Cliente(&#xD;
					Input.inDNI(),&#xD;
					Input.inNombre(),&#xD;
					Input.inApellido(),&#xD;
					Input.inTelefono(),&#xD;
					Input.inEmail(),&#xD;
					bTrabajador,&#xD;
					Input.inPass()&#xD;
					);&#xD;
			rC.insert(c);&#xD;
			System.out.println(&quot;&quot;);&#xD;
		} else {&#xD;
			printClientes();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYT2QeimEe-n_bccIa6R9w" name="listaClientes" specification="_kKDX0eimEe-n_bccIa6R9w">
          <language>java</language>
          <body>if (!filtroCliente()) {&#xD;
			printResultadoCliente();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYT2QuimEe-n_bccIa6R9w" name="filtroCliente" specification="_kKDX0uimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYT2Q-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&quot;\n¿Deseas filtrar el resultado? &quot;);&#xD;
		boolean respuesta = Input.inYesNo();&#xD;
		if (respuesta) {&#xD;
&#xD;
			int opc = 0;&#xD;
			Cliente filtro = new Cliente(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, false, &quot;&quot;, &quot;-1&quot;);&#xD;
			do {&#xD;
	&#xD;
				// Print filtro&#xD;
				printMenuFiltroCliente(filtro);&#xD;
				System.out.print(&quot;Seleccione la opcion que desea: &quot;);&#xD;
				opc = Input.inOpc();&#xD;
				&#xD;
				// Selector&#xD;
				filtro = selectorMenuFiltroCliente(filtro, opc);&#xD;
			} while(opc != 0);&#xD;
			&#xD;
			int trabajador = Integer.parseInt(filtro.getPass());&#xD;
			&#xD;
			// Print resultado&#xD;
			printResultadoFiltroCliente(filtro, trabajador);&#xD;
			return true;&#xD;
		}&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYT2ROimEe-n_bccIa6R9w" name="printMenuFiltroCliente" specification="_kWOLkOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYT2ReimEe-n_bccIa6R9w" name="filtro" type="_kKqb0uimEe-n_bccIa6R9w"/>
          <language>java</language>
          <body>System.out.print(&#xD;
				&quot;\n>>> Filtro &lt;&lt;&lt;\n&quot;&#xD;
				&#xD;
				// 1. Por nombre		&#xD;
				+ 														 &#xD;
				((filtro.getNombre().equals(&quot;&quot;)) ?&#xD;
						&quot;1. Por nombre\n&quot; :&#xD;
						filtro.getNombre() + &quot;\n&quot;&#xD;
				)&#xD;
				&#xD;
				// 2. Cliente o trabajador&#xD;
				+ &#xD;
				(&#xD;
					(filtro.getPass().equals(&quot;-1&quot;)) ?&#xD;
						&quot;2. Trabajador o cliente\n&quot; :&#xD;
						(filtro.getPass().equals(&quot;1&quot;)) ?&#xD;
							&quot;2. Es trabajador\n&quot; :&#xD;
							&quot;2. Es cliente\n&quot;&#xD;
				)&#xD;
				&#xD;
				// 3. Por telefono&#xD;
				+ &#xD;
				((filtro.getTelefono().equals(&quot;&quot;)) ?&#xD;
						&quot;3. Por telefono\n&quot; : &#xD;
						filtro.getTelefono() + &quot;\n&quot;&#xD;
				)&#xD;
				&#xD;
				// 4. Por email&#xD;
				+ &#xD;
				((filtro.getEmail().equals(&quot;&quot;)) ?&#xD;
						&quot;4. Por email\n&quot; : &#xD;
						filtro.getEmail() + &quot;\n&quot;&#xD;
				)&#xD;
				&#xD;
				+ &quot;0. Para continuar\n&quot;&#xD;
		);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYT2RuimEe-n_bccIa6R9w" name="selectorMenuFiltroCliente" specification="_kWOLkuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYT2R-imEe-n_bccIa6R9w" name="filtro" type="_kKqb0uimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYT2SOimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYT2SeimEe-n_bccIa6R9w" type="_kKqb0uimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>switch (opc) {&#xD;
		&#xD;
		// Filtro nombre&#xD;
		//--------------------------------------------------------------------------------------------------------------&#xD;
		case 1:&#xD;
			filtro.setNombre(Input.inNombre());&#xD;
			break;&#xD;
			&#xD;
		// Filtro trabajador&#xD;
		//--------------------------------------------------------------------------------------------------------------		&#xD;
		case 2:&#xD;
			System.out.print(&quot;¿Es trabajador? &quot;);&#xD;
			boolean respuesta = Input.inYesNo();&#xD;
			if (respuesta) {&#xD;
				// Como la contraseña en el filtro no sirve de nada la utilizo para guardar si bTrabajador a sido modificado&#xD;
				filtro.setPass(&quot;1&quot;);&#xD;
				filtro.setbTrabajador(true);&#xD;
			} else {&#xD;
				filtro.setPass(&quot;0&quot;);&#xD;
				filtro.setbTrabajador(false);&#xD;
			}&#xD;
			break;&#xD;
			&#xD;
		// Filtro telefono	&#xD;
		//--------------------------------------------------------------------------------------------------------------&#xD;
		case 3:&#xD;
			filtro.setTelefono(Input.inTelefono());&#xD;
			break;&#xD;
			&#xD;
		// Filtro email&#xD;
		//--------------------------------------------------------------------------------------------------------------&#xD;
		case 4:&#xD;
			filtro.setEmail(Input.inEmail());&#xD;
			break;&#xD;
			&#xD;
		//--------------------------------------------------------------------------------------------------------------&#xD;
		default:&#xD;
			break;&#xD;
			&#xD;
		}&#xD;
		return filtro;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYT2SuimEe-n_bccIa6R9w" name="printResultadoFiltroCliente" specification="_kWOLluimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYT2S-imEe-n_bccIa6R9w" name="filtro" type="_kKqb0uimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYT2TOimEe-n_bccIa6R9w" name="trabajador">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>RepoCliente rC = new RepoCliente();&#xD;
		ArrayList&lt;Cliente> lista = rC.getListaFiltrada(filtro, trabajador);&#xD;
		&#xD;
		System.out.print(&#xD;
				&quot;Nombre&quot; + &quot;\t\t| &quot;&#xD;
				+ &quot;Apellido/s&quot; + &quot;\t\t| &quot;&#xD;
				+ &quot;DNI&quot; + &quot;\t\t| &quot;&#xD;
				+ &quot;Telefono&quot; + &quot;\t| &quot;&#xD;
				+ &quot;Email&quot; + &quot;\t\t\t\t| &quot;&#xD;
				+ &quot;Trabajador/Cliente&quot; + &quot;\t| &quot;&#xD;
				+ &quot;Tarifa&quot; + &quot;\n&quot;&#xD;
						+ &quot;---------------------------------------------------------------------------------------------------------------------------------------------\n&quot;);&#xD;
		int i = 0;&#xD;
		while (i &lt; lista.size()) {&#xD;
			System.out.print(&#xD;
					(&#xD;
							(lista.get(i).getNombre().length() &lt; 7) ? &#xD;
								(lista.get(i).getNombre() + &quot;\t\t| &quot;) : &#xD;
								(lista.get(i).getNombre() + &quot;\t| &quot;)&#xD;
					)&#xD;
					+&#xD;
					(&#xD;
							(lista.get(i).getApellidos().length() &lt; 6) ? &#xD;
								(lista.get(i).getApellidos() + &quot;\t\t\t| &quot;) : &#xD;
								(lista.get(i).getApellidos() + &quot;\t\t| &quot;)&#xD;
					)&#xD;
					+ lista.get(i).getDNI() + &quot;\t| &quot;&#xD;
					+ lista.get(i).getTelefono() + &quot;\t| &quot;&#xD;
					+&#xD;
					(&#xD;
							(lista.get(i).getEmail().length() &lt; 22) ? &#xD;
								(lista.get(i).getEmail() + &quot;\t\t| &quot;) : &#xD;
								(lista.get(i).getEmail() + &quot;\t| &quot;)&#xD;
					)&#xD;
					+&#xD;
					(&#xD;
							(lista.get(i).isbTrabajador()) ?&#xD;
									&quot;Trabajador\t\t| &quot; :&#xD;
									&quot;Cliente\t\t| &quot;&#xD;
					)&#xD;
					+ lista.get(i).getTarifa().toString()&#xD;
					+ &quot;\n&quot;&#xD;
			);&#xD;
			i++;&#xD;
			if (i%5 == 0) System.out.print(&quot;-----------------------------------------------------------------------------------------------------------------------------------------------------\n&quot;);&#xD;
		}&#xD;
		System.out.print(&quot;\n&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYUdUOimEe-n_bccIa6R9w" name="printResultadoCliente" specification="_kKD-4eimEe-n_bccIa6R9w">
          <language>java</language>
          <body>RepoCliente rC = new RepoCliente();&#xD;
		ArrayList&lt;Cliente> lista = rC.getLista();&#xD;
		&#xD;
		System.out.print(&#xD;
				&quot;Nombre&quot; + &quot;\t\t| &quot;&#xD;
				+ &quot;Apellido/s&quot; + &quot;\t\t| &quot;&#xD;
				+ &quot;DNI&quot; + &quot;\t\t| &quot;&#xD;
				+ &quot;Telefono&quot; + &quot;\t| &quot;&#xD;
				+ &quot;Email&quot; + &quot;\t\t\t\t| &quot;&#xD;
				+ &quot;Trabajador/Cliente&quot; + &quot;\t| &quot;&#xD;
				+ &quot;Tarifa&quot; + &quot;\n&quot;&#xD;
						+ &quot;---------------------------------------------------------------------------------------------------------------------------------------------\n&quot;);&#xD;
		int i = 0;&#xD;
		while (i &lt; lista.size()) {&#xD;
			System.out.print(&#xD;
					(&#xD;
							(lista.get(i).getNombre().length() &lt; 7) ? &#xD;
								(lista.get(i).getNombre() + &quot;\t\t| &quot;) : &#xD;
								(lista.get(i).getNombre() + &quot;\t| &quot;)&#xD;
					)&#xD;
					+&#xD;
					(&#xD;
							(lista.get(i).getApellidos().length() &lt; 6) ? &#xD;
								(lista.get(i).getApellidos() + &quot;\t\t\t| &quot;) : &#xD;
								(lista.get(i).getApellidos() + &quot;\t\t| &quot;)&#xD;
					)&#xD;
					+ lista.get(i).getDNI() + &quot;\t| &quot;&#xD;
					+ lista.get(i).getTelefono() + &quot;\t| &quot;&#xD;
					+&#xD;
					(&#xD;
							(lista.get(i).getEmail().length() &lt; 22) ? &#xD;
								(lista.get(i).getEmail() + &quot;\t\t| &quot;) : &#xD;
								(lista.get(i).getEmail() + &quot;\t| &quot;)&#xD;
					)&#xD;
					+&#xD;
					(&#xD;
							(lista.get(i).isbTrabajador()) ?&#xD;
									&quot;Trabajador\t\t| &quot; :&#xD;
									&quot;Cliente\t\t| &quot;&#xD;
					)&#xD;
					+ lista.get(i).getTarifa().toString()&#xD;
					+ &quot;\n&quot;&#xD;
			);&#xD;
			i++;&#xD;
			if (i%5 == 0) System.out.print(&quot;-----------------------------------------------------------------------------------------------------------------------------------------------------\n&quot;);&#xD;
		}&#xD;
		System.out.print(&quot;\n&quot;);&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYUdUeimEe-n_bccIa6R9w" name="printHoteles" specification="_kKEl8OimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print(&#xD;
				&quot;\n~~~ Menu de administración / Hoteles ~~~\n&quot;&#xD;
				+ &quot;1. Lista\n&quot;&#xD;
				+ &quot;2. Agregar\n&quot;&#xD;
				+ &quot;3. Modificar\n&quot;&#xD;
				+ &quot;4. Eliminar\n&quot;&#xD;
				+ &quot;0. Volver atras\n&quot;&#xD;
				+ &quot;Seleccione la opcion que desee: &quot;);&#xD;
		selectorHoteles(Input.inOpc());&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYUdUuimEe-n_bccIa6R9w" name="selectorHoteles" specification="_kKEl8eimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYUdU-imEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>switch (opc) {&#xD;
		case 1:&#xD;
			listaHoteles();&#xD;
			break;&#xD;
		case 2:&#xD;
			addHotel();&#xD;
			break;&#xD;
		case 3:&#xD;
			modifyHotel();&#xD;
			break;&#xD;
		case 4:&#xD;
			deleteHotel();&#xD;
			break;&#xD;
		case 0:&#xD;
			print();&#xD;
		default:&#xD;
			printHoteles();&#xD;
		}&#xD;
		printHoteles();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYUdVOimEe-n_bccIa6R9w" name="deleteHotel" specification="_kKFNAOimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print( &#xD;
				&quot;¿Que cliente deseas eliminar?\n&quot;&#xD;
				+ &quot;1. Buscar por ID\n&quot;&#xD;
				+ &quot;2. Buscar por NOMBRE\n&quot;&#xD;
				+ &quot;3. Buscar por TELEFONO\n&quot;&#xD;
				+ &quot;4. Buscar por EMAIL\n&quot;&#xD;
				+ &quot;Seleccione la opcion que deseas: &quot;&#xD;
				);&#xD;
		Hotel aBorrar = selectorModifyHoteles(Input.inOpc());&#xD;
		RepoHotel rH = new RepoHotel();&#xD;
		System.out.print((rH.delete(aBorrar)) ? &quot;Borrado correctamente&quot; : &quot;Error al eliminar&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYUdVeimEe-n_bccIa6R9w" name="modifyHotel" specification="_kKFNAeimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print( &#xD;
				&quot;\n¿Que hotel deseas modificar?\n&quot;&#xD;
				+ &quot;1. Buscar por ID\n&quot;&#xD;
				+ &quot;2. Buscar por NOMBRE\n&quot;&#xD;
				+ &quot;3. Buscar por TELEFONO\n&quot;&#xD;
				+ &quot;4. Buscar por EMAIL\n&quot;&#xD;
				+ &quot;Seleccione la opcion que deseas: &quot;&#xD;
				);&#xD;
		Hotel aModificar = selectorModifyHoteles(Input.inOpc());&#xD;
		if (aModificar == null) {&#xD;
			System.out.print(&quot;\n>>> ERROR: Hotel no valido &lt;&lt;&lt;\n&quot;);&#xD;
			modifyHotel();&#xD;
		} else {&#xD;
			System.out.print(&#xD;
					&quot;\n~~~ Datos actuales ~~~\n&quot; +&#xD;
					aModificar.toString() + &quot;\n&quot; +&#xD;
					&quot;\n¿Que desea modificar?\n&quot; +&#xD;
					&quot;1. Nombre\n&quot; +&#xD;
					&quot;2. Ciudad\n&quot; +&#xD;
					&quot;3. Direccion\n&quot; +&#xD;
					&quot;4. Telefono\n&quot; +&#xD;
					&quot;5. Email\n&quot; +&#xD;
					&quot;0. Volver atras\n&quot; +&#xD;
					&quot;Selecciones la opcion que desee: &quot;&#xD;
					);&#xD;
			selectorModifyHotel(Input.inOpc(), aModificar);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYUdVuimEe-n_bccIa6R9w" name="selectorModifyHoteles" specification="_kKFNAuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYUdV-imEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYUdWOimEe-n_bccIa6R9w" type="_kLN1cOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>Hotel aModificar = null;&#xD;
		RepoHotel rH = new RepoHotel();&#xD;
		Hotel filtro = null;&#xD;
		switch (opc) {&#xD;
		&#xD;
		// Buscar por ID&#xD;
		case 1:&#xD;
			aModificar = rH.get(Input.inID());&#xD;
			break;&#xD;
			&#xD;
		// Buscar por NOMBRE&#xD;
		case 2:&#xD;
			filtro = new Hotel(0, Input.inNombre(), &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;);&#xD;
			printResultadoFiltroHotel(filtro);&#xD;
			&#xD;
			// Elige el cliente por DNI&#xD;
			System.out.print(&quot;Seleccione &quot;);&#xD;
			aModificar = rH.get(Input.inID());&#xD;
			break;&#xD;
		&#xD;
		// Buscar por TELEFONO&#xD;
		case 3:&#xD;
			filtro = new Hotel(0, &quot;&quot;, &quot;&quot;, &quot;&quot;, Input.inTelefono(), &quot;&quot;);&#xD;
			printResultadoFiltroHotel(filtro);&#xD;
			&#xD;
			// Elige el cliente por DNI&#xD;
			System.out.print(&quot;Seleccione &quot;);&#xD;
			aModificar = rH.get(Input.inID());&#xD;
			break;&#xD;
		&#xD;
		// Buscar por EMAIL&#xD;
		case 4:&#xD;
			filtro = new Hotel(0, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, Input.inEmail());&#xD;
			printResultadoFiltroHotel(filtro);&#xD;
			&#xD;
			// Elige el cliente por DNI&#xD;
			System.out.print(&quot;Seleccione &quot;);&#xD;
			aModificar = rH.get(Input.inID());&#xD;
			break;&#xD;
		&#xD;
		// Volver atras&#xD;
		case 0: &#xD;
			printClientes();&#xD;
		// Vuelve atras&#xD;
		default:&#xD;
			modifyCliente();&#xD;
		}&#xD;
		return aModificar;	&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYUdWeimEe-n_bccIa6R9w" name="selectorModifyHotel" specification="_kWOyoeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYUdWuimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYUdW-imEe-n_bccIa6R9w" name="aModificar" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <language>java</language>
          <body>RepoHotel rH = new RepoHotel();&#xD;
		switch (opc) {&#xD;
		&#xD;
		// Nombre&#xD;
		case 1:&#xD;
			aModificar.setNombre(Input.inNombre());&#xD;
			rH.update(aModificar);&#xD;
			break;&#xD;
		&#xD;
		// Ciudad&#xD;
		case 2:&#xD;
			aModificar.setCiudad(Input.inCiudad());&#xD;
			rH.update(aModificar);&#xD;
			break;&#xD;
			&#xD;
		// Direccion	&#xD;
		case 3:	&#xD;
			aModificar.setDir(Input.inDir());&#xD;
			rH.update(aModificar);&#xD;
			break;			&#xD;
			&#xD;
		// Telefono&#xD;
		case 4:&#xD;
			aModificar.setTlfno(Input.inTelefono());&#xD;
			rH.update(aModificar);&#xD;
			break;&#xD;
			&#xD;
		// Email&#xD;
		case 5:&#xD;
			aModificar.setEmail(Input.inEmail());&#xD;
			rH.update(aModificar);&#xD;
			break;&#xD;
			&#xD;
		// Volver atras	&#xD;
		default:&#xD;
			modifyCliente();	&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYUdXOimEe-n_bccIa6R9w" name="addHotel" specification="_kKF0EOimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print(&quot;\n>>> Recuerda tener todos los datos &lt;&lt;&lt;\n&quot;&#xD;
				+ &quot;¿Tienes los datos? &quot;);&#xD;
		if (Input.inYesNo()) {&#xD;
			RepoHotel rH = new RepoHotel();&#xD;
			Hotel ho = new Hotel(&#xD;
					0,&#xD;
					Input.inNombre(),&#xD;
					Input.inCiudad(),&#xD;
					Input.inDir(),&#xD;
					Input.inTelefono(),&#xD;
					Input.inEmail()&#xD;
					);&#xD;
			rH.insert(ho);&#xD;
			System.out.println(&quot;&quot;);&#xD;
		} else {&#xD;
			printHoteles();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYVEYOimEe-n_bccIa6R9w" name="listaHoteles" specification="_kKGbIOimEe-n_bccIa6R9w">
          <language>java</language>
          <body>if (!filtroHotel()) {&#xD;
			Hotel filtro = new Hotel(0, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;);&#xD;
			printResultadoFiltroHotel(filtro);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYVEYeimEe-n_bccIa6R9w" name="filtroHotel" specification="_kKGbIeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYVEYuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&quot;\n¿Deseas filtrar el resultado? &quot;);&#xD;
		boolean respuesta = Input.inYesNo();&#xD;
		if (respuesta) {&#xD;
&#xD;
			int opc = 0;&#xD;
			Hotel filtro = new Hotel(0, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;);&#xD;
			do {&#xD;
	&#xD;
				// Print filtro&#xD;
				printMenuFiltroHotel(filtro);&#xD;
				System.out.print(&quot;Seleccione la opcion que desea: &quot;);&#xD;
				opc = Input.inOpc();&#xD;
				&#xD;
				// Selector&#xD;
				filtro = selectorMenuFiltroHotel(filtro, opc);&#xD;
			} while(opc != 0);&#xD;
		&#xD;
			// Print resultado&#xD;
			printResultadoFiltroHotel(filtro);&#xD;
			return true;&#xD;
		}&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYVEY-imEe-n_bccIa6R9w" name="printResultadoFiltroHotel" specification="_kWOypOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYVEZOimEe-n_bccIa6R9w" name="filtro" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <language>java</language>
          <body>RepoHotel rH = new RepoHotel();&#xD;
		ArrayList&lt;Hotel> lista = rH.getListaFiltrada(filtro);&#xD;
		&#xD;
		System.out.print(&#xD;
				&quot;ID&quot; + &quot;\t| &quot;&#xD;
				+ &quot;Nombre&quot; + &quot;\t\t| &quot;&#xD;
				+ &quot;Ciudad&quot; + &quot;\t\t| &quot;&#xD;
				+ &quot;Telefono&quot; + &quot;\t| &quot;&#xD;
				+ &quot;Email&quot; + &quot;\t\t\t\t| &quot;&#xD;
				+ &quot;Direccion completa\n&quot;&#xD;
				+ &quot;---------------------------------------------------------------------------------------------------------------------------------------------\n&quot;);&#xD;
		int i = 0;&#xD;
		while (i &lt; lista.size()) {&#xD;
			System.out.print(&#xD;
					lista.get(i).getID() + &quot;\t| &quot; +&#xD;
					(&#xD;
							(lista.get(i).getNombre().length() &lt; 14) ? &#xD;
								(lista.get(i).getNombre() + &quot;\t\t| &quot;) : &#xD;
								(lista.get(i).getNombre() + &quot;\t| &quot;)&#xD;
					)&#xD;
					+&#xD;
					(&#xD;
							(lista.get(i).getCiudad().length() &lt; 6) ? &#xD;
								(lista.get(i).getCiudad() + &quot;\t\t\t| &quot;) : &#xD;
								(lista.get(i).getCiudad() + &quot;\t\t| &quot;)&#xD;
					)&#xD;
					+ lista.get(i).getTlfno() + &quot;\t| &quot;&#xD;
					+&#xD;
					(&#xD;
							(lista.get(i).getEmail().length() &lt; 14) ? &#xD;
									(lista.get(i).getEmail() + &quot;\t\t\t| &quot;) : &#xD;
									(lista.get(i).getEmail().length() &lt; 22) ? &#xD;
										(lista.get(i).getEmail() + &quot;\t\t| &quot;) : &#xD;
										(lista.get(i).getEmail() + &quot;\t| &quot;)&#xD;
					)&#xD;
					+ lista.get(i).getDir()&#xD;
					+ &quot;\n&quot;&#xD;
			);&#xD;
			i++;&#xD;
			if (i%5 == 0) System.out.print(&quot;-----------------------------------------------------------------------------------------------------------------------------------------------------\n&quot;);&#xD;
		}&#xD;
		System.out.print(&quot;\n&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYVEZeimEe-n_bccIa6R9w" name="selectorMenuFiltroHotel" specification="_kWPZsOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYVEZuimEe-n_bccIa6R9w" name="filtro" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYVEZ-imEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYVEaOimEe-n_bccIa6R9w" type="_kLN1cOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>switch (opc) {&#xD;
		&#xD;
		// Filtro nombre&#xD;
		//--------------------------------------------------------------------------------------------------------------&#xD;
		case 1:&#xD;
			filtro.setNombre(Input.inNombre());&#xD;
			break;&#xD;
			&#xD;
		// Filtro ciudad&#xD;
		//--------------------------------------------------------------------------------------------------------------		&#xD;
		case 2:&#xD;
			filtro.setCiudad(Input.inCiudad());&#xD;
			break;&#xD;
			&#xD;
		// Filtro telefono	&#xD;
		//--------------------------------------------------------------------------------------------------------------&#xD;
		case 3:&#xD;
			filtro.setTlfno(Input.inTelefono());&#xD;
			break;&#xD;
			&#xD;
		// Filtro email&#xD;
		//--------------------------------------------------------------------------------------------------------------&#xD;
		case 4:&#xD;
			filtro.setEmail(Input.inEmail());&#xD;
			break;&#xD;
			&#xD;
		//--------------------------------------------------------------------------------------------------------------&#xD;
		default:&#xD;
			break;&#xD;
			&#xD;
		}&#xD;
		return filtro;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYVEaeimEe-n_bccIa6R9w" name="printMenuFiltroHotel" specification="_kWPZtOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYVEauimEe-n_bccIa6R9w" name="filtro" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <language>java</language>
          <body>System.out.print(&#xD;
				&quot;\n>>> Filtro &lt;&lt;&lt;\n&quot;&#xD;
				&#xD;
				// 1. Por nombre		&#xD;
				+ 														 &#xD;
				((filtro.getNombre().equals(&quot;&quot;)) ?&#xD;
						&quot;1. Por nombre\n&quot; :&#xD;
						filtro.getNombre() + &quot;\n&quot;&#xD;
				)&#xD;
				&#xD;
				// 2. Por ciudad&#xD;
				+ &#xD;
				(&#xD;
					(filtro.getCiudad().equals(&quot;&quot;)) ?&#xD;
						&quot;2. Por ciudad\n&quot; :&#xD;
						filtro.getCiudad() + &quot;\n&quot;&#xD;
				)&#xD;
				&#xD;
				// 3. Por telefono&#xD;
				+ &#xD;
				((filtro.getTlfno().equals(&quot;&quot;)) ?&#xD;
						&quot;3. Por telefono\n&quot; : &#xD;
						filtro.getTlfno() + &quot;\n&quot;&#xD;
				)&#xD;
				&#xD;
				// 4. Por email&#xD;
				+ &#xD;
				((filtro.getEmail().equals(&quot;&quot;)) ?&#xD;
						&quot;4. Por email\n&quot; : &#xD;
						filtro.getEmail() + &quot;\n&quot;&#xD;
				)&#xD;
				&#xD;
				+ &quot;0. Para continuar\n&quot;&#xD;
		);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYVEa-imEe-n_bccIa6R9w" name="printHabitaciones" specification="_kKHCMOimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print(&#xD;
				&quot;\n~~~ Menu de administración / Habitaciones ~~~\n&quot;&#xD;
				+ &quot;1. Lista\n&quot;&#xD;
				+ &quot;2. Agregar\n&quot;&#xD;
				+ &quot;3. Modificar\n&quot;&#xD;
				+ &quot;4. Eliminar\n&quot;&#xD;
				+ &quot;0. Volver atras\n&quot;&#xD;
				+ &quot;Seleccione la opcion que desee: &quot;);&#xD;
		selectorHabitaciones(Input.inOpc());	&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYVEbOimEe-n_bccIa6R9w" name="selectorHabitaciones" specification="_kKHCMeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYVEbeimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>switch (opc) {&#xD;
		case 1:&#xD;
			listaHabitaciones();&#xD;
			break;&#xD;
		case 2:&#xD;
			addHabitacion();&#xD;
			break;&#xD;
		case 3:&#xD;
			modifyHabitacion();&#xD;
			break;&#xD;
		case 4:&#xD;
			deleteHabitacion();&#xD;
			break;&#xD;
		case 0:&#xD;
			print();&#xD;
		default:&#xD;
			printHabitaciones();&#xD;
		}&#xD;
		printHabitaciones();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYVEbuimEe-n_bccIa6R9w" name="deleteHabitacion" specification="_kKHpQOimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print( &#xD;
				&quot;¿Que habitacion deseas eliminar?\n&quot;&#xD;
				+ &quot;1. Buscar por HOTEL\n&quot;&#xD;
				+ &quot;2. Buscar por NUMERO\n&quot;&#xD;
				+ &quot;3. Buscar por TIPO\n&quot;&#xD;
				+ &quot;4. Buscar por PVP\n&quot;&#xD;
				+ &quot;Seleccione la opcion que deseas: &quot;&#xD;
				);&#xD;
		Habitacion aBorrar = selectorModifyHabitaciones(Input.inOpc());&#xD;
		RepoHabitacion rH = new RepoHabitacion();&#xD;
		System.out.print((rH.delete(aBorrar)) ? &quot;Borrado correctamente&quot; : &quot;Error al eliminar&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYVrcOimEe-n_bccIa6R9w" name="modifyHabitacion" specification="_kKHpQeimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print( &#xD;
				&quot;\n¿Que habitacion deseas modificar?\n&quot;&#xD;
				+ &quot;1. Buscar por HOTEL\n&quot;&#xD;
				+ &quot;2. Buscar por NUMERO\n&quot;&#xD;
				+ &quot;3. Buscar por TIPO\n&quot;&#xD;
				+ &quot;4. Buscar por PVP\n&quot;&#xD;
				+ &quot;Seleccione la opcion que deseas: &quot;&#xD;
				);&#xD;
		Habitacion aModificar = selectorModifyHabitaciones(Input.inOpc());&#xD;
		if (aModificar == null) {&#xD;
			System.out.print(&quot;\n>>> ERROR: Habitacion no valida &lt;&lt;&lt;\n&quot;);&#xD;
			modifyHabitacion();&#xD;
		} else {&#xD;
			System.out.print(&#xD;
					&quot;\n~~~ Datos actuales ~~~\n&quot; +&#xD;
					aModificar.toString() + &quot;\n&quot; +&#xD;
					&quot;\n¿Que desea modificar?\n&quot; +&#xD;
					&quot;1. Hotel\n&quot; +&#xD;
					&quot;2. Numero\n&quot; +&#xD;
					&quot;3. Capacidad\n&quot; +&#xD;
					&quot;4. Telefono\n&quot; +&#xD;
					&quot;5. PVP\n&quot; +&#xD;
					&quot;6. Tipo de habitacion\n&quot; +&#xD;
					&quot;0. Volver atras\n&quot; +&#xD;
					&quot;Selecciones la opcion que desee: &quot;&#xD;
					);&#xD;
			selectorModifyHabitacion(Input.inOpc(), aModificar);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYVrceimEe-n_bccIa6R9w" name="selectorModifyHabitacion" specification="_kWQAwOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYVrcuimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYVrc-imEe-n_bccIa6R9w" name="aModificar" type="_kLIV4OimEe-n_bccIa6R9w"/>
          <language>java</language>
          <body>RepoHabitacion rH = new RepoHabitacion();&#xD;
		RepoHotel rHo = new RepoHotel();&#xD;
		switch (opc) {&#xD;
		&#xD;
		// Hotel&#xD;
		case 1:&#xD;
			aModificar.setHotel(rHo.get(Input.inID()));&#xD;
			rH.update(aModificar);&#xD;
			break;&#xD;
		&#xD;
		// Numero&#xD;
		case 2:&#xD;
			aModificar.setNum(Input.inNum());&#xD;
			rH.update(aModificar);&#xD;
			break;&#xD;
			&#xD;
		// Capacidad&#xD;
		case 3:	&#xD;
			aModificar.setCapacidad(Input.inCapacidad());&#xD;
			rH.update(aModificar);&#xD;
			break;			&#xD;
			&#xD;
		// Telefono&#xD;
		case 4:&#xD;
			aModificar.setTlfno(Input.inTelefono());&#xD;
			rH.update(aModificar);&#xD;
			break;&#xD;
			&#xD;
		// PVP&#xD;
		case 5:&#xD;
			aModificar.setPvp(Input.inPvp());&#xD;
			rH.update(aModificar);&#xD;
			break;&#xD;
			&#xD;
		// Tipo de habitacion&#xD;
		case 6:&#xD;
			aModificar.setTipo(Input.inTipoHab());&#xD;
			rH.update(aModificar);&#xD;
			break;&#xD;
			&#xD;
		// Volver atras	&#xD;
		default:&#xD;
			modifyCliente();	&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYVrdOimEe-n_bccIa6R9w" name="selectorModifyHabitaciones" specification="_kKIQUOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYVrdeimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYVrduimEe-n_bccIa6R9w" type="_kLIV4OimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>Habitacion aModificar = null;&#xD;
		RepoHabitacion rH = new RepoHabitacion();&#xD;
		Habitacion filtro = null;&#xD;
		RepoHotel rHo = new RepoHotel();&#xD;
		switch (opc) {&#xD;
		&#xD;
		// Buscar por HOTEL&#xD;
		case 1:&#xD;
			int idHotel = Input.inID();&#xD;
			filtro = new Habitacion(rHo.get(idHotel), 0, 0, &quot;&quot;, 0, &quot;&quot;);&#xD;
			printResultadoFiltroHabitacion(filtro, -1);&#xD;
			&#xD;
			// Elige el cliente por Numero&#xD;
			System.out.print(&quot;Seleccione &quot;);&#xD;
			aModificar = rH.get(idHotel, Input.inNum());&#xD;
			break;&#xD;
			&#xD;
		// Buscar por NUMERO&#xD;
		case 2:&#xD;
			int num = Input.inNum();&#xD;
			filtro = new Habitacion(null, num , 0, &quot;&quot;, 0, &quot;&quot;);&#xD;
			printResultadoFiltroHabitacion(filtro, -1);&#xD;
			&#xD;
			// Elige el cliente por Hotel&#xD;
			System.out.print(&quot;Seleccione &quot;);&#xD;
			aModificar = rH.get(rHo.get(Input.inID()).getID(), num);&#xD;
			break;&#xD;
		&#xD;
		// Buscar por TIPO&#xD;
		case 3:&#xD;
			filtro = new Habitacion(null, 0, 0, &quot;&quot;, 0, Input.inTipoHab());&#xD;
			printResultadoFiltroHabitacion(filtro, -1);&#xD;
			&#xD;
			// Elige el cliente por Numero y Hotel&#xD;
			System.out.print(&quot;Seleccione &quot;);&#xD;
			aModificar = rH.get(Input.inID(), Input.inNum());&#xD;
			break;&#xD;
		&#xD;
		// Buscar por PVP&#xD;
		case 4:&#xD;
			filtro = new Habitacion(null, 0, 0, &quot;&quot;, 0, &quot;&quot;);&#xD;
			printResultadoFiltroHabitacion(filtro, -1);&#xD;
			&#xD;
			// Elige el cliente por Numero y Hotel&#xD;
			System.out.print(&quot;Seleccione &quot;);&#xD;
			aModificar = rH.get(Input.inID(), Input.inNum());&#xD;
			break;&#xD;
		&#xD;
		// Volver atras&#xD;
		case 0: &#xD;
			printHabitaciones();&#xD;
			&#xD;
		// Vuelve atras&#xD;
		default:&#xD;
			modifyHabitacion();&#xD;
		}&#xD;
		return aModificar;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYVrd-imEe-n_bccIa6R9w" name="addHabitacion" specification="_kKI3YOimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print(&quot;\n>>> Recuerda tener todos los datos &lt;&lt;&lt;\n&quot;&#xD;
				+ &quot;¿Tienes los datos? &quot;);&#xD;
		if (Input.inYesNo()) {&#xD;
			RepoHabitacion rH = new RepoHabitacion();&#xD;
			RepoHotel rHo = new RepoHotel();&#xD;
			Habitacion h = new Habitacion(&#xD;
					rHo.get(Input.inID()),&#xD;
					Input.inNum(),&#xD;
					Input.inCapacidad(),&#xD;
					Input.inTelefono(),&#xD;
					Input.inPvp(),&#xD;
					Input.inTipoHab()&#xD;
					);&#xD;
			rH.insert(h);&#xD;
			System.out.println(&quot;&quot;);&#xD;
		} else {&#xD;
			printHoteles();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYVreOimEe-n_bccIa6R9w" name="listaHabitaciones" specification="_kKI3YeimEe-n_bccIa6R9w">
          <language>java</language>
          <body>if (!filtroHabitaciones()) {&#xD;
			Habitacion filtro = new Habitacion(null, 0, 0, &quot;&quot;, 0, &quot;&quot;);&#xD;
			int disponible = -1;&#xD;
			printResultadoFiltroHabitacion(filtro, disponible);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYVreeimEe-n_bccIa6R9w" name="filtroHabitaciones" specification="_kKI3YuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYVreuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&quot;\n¿Deseas filtrar el resultado? (Si/no): &quot;);&#xD;
		boolean respuesta = Input.inYesNo();&#xD;
		if (respuesta) {&#xD;
			&#xD;
			int opc = 0;&#xD;
			int disponible = -1; // -1 - vacio, 0 - no diponible, 1 - diponible &#xD;
			Habitacion filtro = new Habitacion(null, 0, 0, &quot;&quot;, 0, &quot;&quot;);&#xD;
			do {&#xD;
	&#xD;
				// Print filtro&#xD;
				printMenuFiltroHabitaciones(filtro, disponible);&#xD;
				opc = Input.inOpc();&#xD;
				&#xD;
				// Selector&#xD;
				switch (opc) {&#xD;
				case 1:&#xD;
					RepoHotel rH = new RepoHotel();&#xD;
					filtro.setHotel(rH.get(rH.getPKByName(Input.inNombre())));&#xD;
				&#xD;
				case 2:&#xD;
					filtro.setTipo(filtroTipoHab());&#xD;
					&#xD;
				case 3:&#xD;
					System.out.print(&#xD;
							&quot;¿Quieres que esten libre u ocupadas?&quot;&#xD;
							+ &quot;1. Libres\n&quot;&#xD;
							+ &quot;2. Ocupadas\n&quot;&#xD;
							);&#xD;
					opc = Input.inOpc();&#xD;
					switch (opc) {&#xD;
					case 1:&#xD;
						disponible = 1;&#xD;
					case 2:&#xD;
						disponible = 0;&#xD;
					default:&#xD;
						disponible = -1;&#xD;
					}&#xD;
					&#xD;
				case 4:&#xD;
					filtro.setPvp(Input.inPvp());&#xD;
					&#xD;
				default:&#xD;
					break;&#xD;
					&#xD;
				}&#xD;
			} while(opc != 0);&#xD;
			&#xD;
						&#xD;
			// Print resultado&#xD;
			printResultadoFiltroHabitacion(filtro, disponible);&#xD;
			return true;	&#xD;
		}&#xD;
		return false;&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYWSgOimEe-n_bccIa6R9w" name="printMenuFiltroHabitaciones" specification="_kWQAxOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYWSgeimEe-n_bccIa6R9w" name="filtro" type="_kLIV4OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYWSguimEe-n_bccIa6R9w" name="disponible">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&#xD;
				&quot;\n&quot;&#xD;
				+ ((filtro.getHotel() == null) ? &quot;1. Por hotel\n&quot; : filtro.getHotel().getNombre())&#xD;
				+ ((filtro.getTipo() == tipoHab.desconocido) ? &quot;2. Por tipo\n&quot; : filtro.getTipo().toString())&#xD;
				+ ((disponible == -1) ? &quot;3. Por disponibilidad\n&quot; : ((disponible == 1) ? &quot;Habitaciones libres&quot; : &quot;Habitaciones ocupadas&quot;))&#xD;
				+ ((filtro.getPvp() == 0) ? &quot;4. Por precio\n&quot; : (&quot;Al menos &quot; + filtro.getPvp() + &quot;€&quot;))&#xD;
				+ &quot;0. Para continuar\n&quot;&#xD;
		);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYWSg-imEe-n_bccIa6R9w" name="printResultadoFiltroHabitacion" specification="_kWSdAOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYWShOimEe-n_bccIa6R9w" name="filtro" type="_kLIV4OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYWSheimEe-n_bccIa6R9w" name="disponible">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>RepoHabitacion rH = new RepoHabitacion();&#xD;
		System.out.print( &quot;Hotel\t\t| Habitacion\t| Tipo\t\t| Telefono\t| PVP\t\t| Ocupada\n&quot;&#xD;
			+ &quot;-------------------------------------------------------------------------------------------------\n&quot; );&#xD;
		int i = 0;&#xD;
		for(HabDisponible h : rH.getListaFiltrada(filtro, disponible)) {&#xD;
			System.out.print(&#xD;
					h.getHabitacion().getHotel().getNombre() + &quot;\t| &quot; + &#xD;
					h.getHabitacion().getNum() + &quot;\t\t| &quot; +&#xD;
					&#xD;
					((h.getHabitacion().getTipo().toString().length() > 6) ?&#xD;
					(h.getHabitacion().getTipo().toString() + &quot;\t| &quot;) :&#xD;
					(h.getHabitacion().getTipo().toString() + &quot;\t\t| &quot;)&#xD;
					)&#xD;
					&#xD;
					+&#xD;
					&#xD;
					&#xD;
					h.getHabitacion().getTlfno() + &quot;\t| &quot; +&#xD;
					&#xD;
					((h.getHabitacion().getPvp() >= 100) ?&#xD;
					(h.getHabitacion().getPvp() + &quot;€\t| &quot;) :&#xD;
					(h.getHabitacion().getPvp() + &quot;€\t\t| &quot;)&#xD;
					)&#xD;
					+&#xD;
					h.isDisponible() + &quot;\n&quot;&#xD;
				);&#xD;
			i++;&#xD;
			if (i%5 == 0) System.out.print(&quot;-------------------------------------------------------------------------------------------------\n&quot;);&#xD;
		};&#xD;
		System.out.println(&quot;&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYWShuimEe-n_bccIa6R9w" name="filtroTipoHab" specification="_kKJecOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYWSh-imEe-n_bccIa6R9w" type="_kLI88OimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>int opc = 0;&#xD;
		do {&#xD;
			&#xD;
			// Menu de seleccion&#xD;
			System.out.print(&#xD;
					&quot;¿Que tipo de habitacion deseas?\n&quot;&#xD;
					+ &quot;1. Individual\n&quot;&#xD;
					+ &quot;2. Doble\n&quot;&#xD;
					+ &quot;3. Familiar\n&quot;&#xD;
					+ &quot;4. Suite\n&quot;&#xD;
					+ &quot;5. Apartamento\n&quot;&#xD;
					+ &quot;Selecciona el tipo: &quot;&#xD;
			);&#xD;
			opc = Input.inOpc();&#xD;
			&#xD;
			// Actua segun la opcion y devuelve el enum correspondiente&#xD;
			switch (opc) {&#xD;
			case 1:&#xD;
				return tipoHab.individual;  &#xD;
			case 2:&#xD;
				return tipoHab.doble;&#xD;
			case 3:&#xD;
				return tipoHab.familiar;&#xD;
			case 4:&#xD;
				return tipoHab.suite;&#xD;
			case 5:&#xD;
				return tipoHab.apartamento;&#xD;
			default:&#xD;
				System.out.print(&quot;ERROR, elige una de las opciones disponibles&quot;);&#xD;
				opc = 0;&#xD;
			}&#xD;
		} while (opc == 0);&#xD;
		return null;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYWSiOimEe-n_bccIa6R9w" name="printOtros" specification="_kKKFgOimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print(&#xD;
				&quot;\n~~~ Menu de administración / Otros ~~~\n&quot;&#xD;
				+ &quot;1. Salas de reunion\n&quot;&#xD;
				+ &quot;2. Espacios comunes\n&quot;&#xD;
				+ &quot;0. Volver atras\n&quot;&#xD;
				+ &quot;Seleccione la opcion que desee: &quot;);&#xD;
		selectorOtros(Input.inOpc());&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYWSieimEe-n_bccIa6R9w" name="selectorOtros" specification="_kKKskOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYWSiuimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>switch (opc) {&#xD;
		case 1:&#xD;
			printReuniones();&#xD;
		case 2:&#xD;
			printComunes();&#xD;
		case 0:&#xD;
			print();&#xD;
		default:&#xD;
			printOtros();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYWSi-imEe-n_bccIa6R9w" name="printComunes" specification="_kKKskuimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print(&#xD;
				&quot;\n~~~ Menu de administración / Otros / Espacios comunes ~~~\n&quot;&#xD;
				+ &quot;1. Lista\n&quot;&#xD;
				+ &quot;2. Agregar\n&quot;&#xD;
				+ &quot;3. Modificar\n&quot;&#xD;
				+ &quot;4. Eliminar\n&quot;&#xD;
				+ &quot;0. Volver atras\n&quot;&#xD;
				+ &quot;Seleccione la opcion que desee: &quot;);&#xD;
		selectorComunes(Input.inOpc());&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYW5kOimEe-n_bccIa6R9w" name="selectorComunes" specification="_kKKsk-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYW5keimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>switch (opc) {&#xD;
		case 1:&#xD;
			listaComunes();&#xD;
			break;&#xD;
		case 2:&#xD;
			addComun();&#xD;
			break;&#xD;
		case 3:&#xD;
			modifyComun();&#xD;
			break;&#xD;
		case 4:&#xD;
			deleteComun();&#xD;
			break;&#xD;
		case 0:&#xD;
			print();&#xD;
		default:&#xD;
			printComunes();&#xD;
		}&#xD;
		printOtros();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYW5kuimEe-n_bccIa6R9w" name="deleteComun" specification="_kKLToOimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print( &#xD;
				&quot;¿Que espacio comun deseas eliminar?\n&quot;&#xD;
				+ &quot;1. Buscar por HOTEL\n&quot;&#xD;
				+ &quot;2. Buscar por NUMERO\n&quot;&#xD;
				+ &quot;Seleccione la opcion que deseas: &quot;&#xD;
				);&#xD;
		EspacioComun aBorrar = selectorModifyComunes(Input.inOpc());&#xD;
		RepoEspacioComun rEc = new RepoEspacioComun();&#xD;
		System.out.print((rEc.delete(aBorrar)) ? &quot;Borrado correctamente&quot; : &quot;Error al eliminar&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYW5k-imEe-n_bccIa6R9w" name="modifyComun" specification="_kKLToeimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print( &#xD;
				&quot;\n¿Que habitacion deseas modificar?\n&quot;&#xD;
				+ &quot;1. Buscar por HOTEL\n&quot;&#xD;
				+ &quot;2. Buscar por NUMERO\n&quot;&#xD;
				+ &quot;3. Buscar por TIPO\n&quot;&#xD;
				+ &quot;4. Buscar por PVP\n&quot;&#xD;
				+ &quot;Seleccione la opcion que deseas: &quot;&#xD;
				);&#xD;
		EspacioComun aModificar = selectorModifyComunes(Input.inOpc());&#xD;
		if (aModificar == null) {&#xD;
			System.out.print(&quot;\n>>> ERROR: Cliente no valido &lt;&lt;&lt;\n&quot;);&#xD;
			modifyComun();&#xD;
		} else {&#xD;
			System.out.print(&#xD;
					&quot;\n~~~ Datos actuales ~~~\n&quot; +&#xD;
					aModificar.toString() + &quot;\n&quot; +&#xD;
					&quot;\n¿Que desea modificar?\n&quot; +&#xD;
					&quot;1. Hotel\n&quot; +&#xD;
					&quot;2. Numero\n&quot; +&#xD;
					&quot;3. Capacidad\n&quot; +&#xD;
					&quot;4. Telefono\n&quot; +&#xD;
					&quot;5. PVP\n&quot; +&#xD;
					&quot;6. Tipo de habitacion\n&quot; +&#xD;
					&quot;0. Volver atras\n&quot; +&#xD;
					&quot;Selecciones la opcion que desee: &quot;&#xD;
					);&#xD;
			selectorModifyComun(Input.inOpc(), aModificar);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYW5lOimEe-n_bccIa6R9w" name="selectorModifyComun" specification="_kWTEEeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYW5leimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYW5luimEe-n_bccIa6R9w" name="aModificar" type="_kLBoMOimEe-n_bccIa6R9w"/>
          <language>java</language>
          <body>RepoEspacioComun rEc = new RepoEspacioComun();&#xD;
		RepoHotel rHo = new RepoHotel();&#xD;
		switch (opc) {&#xD;
		&#xD;
		// Hotel&#xD;
		case 1:&#xD;
			aModificar.setHotel(rHo.get(Input.inID()));&#xD;
			rEc.update(aModificar);&#xD;
			break;&#xD;
		&#xD;
		// Numero&#xD;
		case 2:&#xD;
			aModificar.setNum(Input.inNum());&#xD;
			rEc.update(aModificar);&#xD;
			break;&#xD;
			&#xD;
		// Capacidad&#xD;
		case 3:	&#xD;
			aModificar.setCapacidad(Input.inCapacidad());&#xD;
			rEc.update(aModificar);&#xD;
			break;			&#xD;
			&#xD;
		// Telefono&#xD;
		case 4:&#xD;
			aModificar.setTlfno(Input.inTelefono());&#xD;
			rEc.update(aModificar);&#xD;
			break;&#xD;
			&#xD;
		// PVP&#xD;
		case 5:&#xD;
			aModificar.setPvp(Input.inPvp());&#xD;
			rEc.update(aModificar);&#xD;
			break;&#xD;
			&#xD;
		// Tipo de habitacion&#xD;
		case 6:&#xD;
			aModificar.setTipo(Input.inTipoComun());&#xD;
			rEc.update(aModificar);&#xD;
			break;&#xD;
			&#xD;
		// Volver atras	&#xD;
		default:&#xD;
			modifyCliente();	&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYW5l-imEe-n_bccIa6R9w" name="selectorModifyComunes" specification="_kKL6sOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYW5mOimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYW5meimEe-n_bccIa6R9w" type="_kLBoMOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>EspacioComun aModificar = null;&#xD;
		RepoEspacioComun rEc = new RepoEspacioComun();&#xD;
		EspacioComun filtro = null;&#xD;
		RepoHotel rHo = new RepoHotel();&#xD;
		switch (opc) {&#xD;
		&#xD;
		// Buscar por HOTEL&#xD;
		case 1:&#xD;
			int idHotel = Input.inID();&#xD;
			filtro = new EspacioComun(0, 0, &quot;&quot;, 0, rHo.get(idHotel), &quot;&quot;);&#xD;
			printResultadoFiltroComunes(filtro);&#xD;
			&#xD;
			// Elige el cliente por Numero&#xD;
			System.out.print(&quot;Seleccione &quot;);&#xD;
			aModificar = rEc.get(idHotel, Input.inNum());&#xD;
			break;&#xD;
			&#xD;
		// Buscar por NUMERO&#xD;
		case 2:&#xD;
			int num = Input.inNum();&#xD;
			filtro = new EspacioComun(num, 0, &quot;&quot;, 0, null, &quot;&quot;);&#xD;
			printResultadoFiltroComunes(filtro);&#xD;
			&#xD;
			// Elige el cliente por Hotel&#xD;
			System.out.print(&quot;Seleccione &quot;);&#xD;
			aModificar = rEc.get(rHo.get(Input.inID()).getID(), num);&#xD;
			break;&#xD;
		&#xD;
		// Volver atras&#xD;
		case 0: &#xD;
			printHabitaciones();&#xD;
			&#xD;
		// Vuelve atras&#xD;
		default:&#xD;
			modifyHabitacion();&#xD;
		}&#xD;
		return aModificar;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYW5muimEe-n_bccIa6R9w" name="addComun" specification="_kKL6suimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print(&quot;\n>>> Recuerda tener todos los datos &lt;&lt;&lt;\n&quot;&#xD;
				+ &quot;¿Tienes los datos? &quot;);&#xD;
		if (Input.inYesNo()) {&#xD;
			RepoEspacioComun rEc = new RepoEspacioComun();&#xD;
			RepoHotel rHo = new RepoHotel();&#xD;
			EspacioComun e = new EspacioComun(&#xD;
					Input.inNum(),&#xD;
					Input.inCapacidad(),&#xD;
					Input.inTelefono(),&#xD;
					Input.inPvp(),&#xD;
					rHo.get(Input.inID()),&#xD;
					Input.inTipoComun()&#xD;
					);&#xD;
			rEc.insert(e);&#xD;
			System.out.println(&quot;&quot;);&#xD;
		} else {&#xD;
			printHoteles();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYW5m-imEe-n_bccIa6R9w" name="listaComunes" specification="_kKL6s-imEe-n_bccIa6R9w">
          <language>java</language>
          <body>if (!filtroComunes()) {&#xD;
			EspacioComun filtro = new EspacioComun(0, 0, &quot;&quot;, 0, null, &quot;&quot;);&#xD;
			printResultadoFiltroComunes(filtro);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYW5nOimEe-n_bccIa6R9w" name="filtroComunes" specification="_kKMhwOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYW5neimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&quot;\n¿Deseas filtrar el resultado? &quot;);&#xD;
		boolean respuesta = Input.inYesNo();&#xD;
		if (respuesta) {&#xD;
&#xD;
			int opc = 0;&#xD;
			EspacioComun filtro = new EspacioComun(0, 0, &quot;&quot;, 0, null, &quot;&quot;);&#xD;
			do {&#xD;
	&#xD;
				// Print filtro&#xD;
				printMenuFiltroComunes(filtro);&#xD;
				System.out.print(&quot;Seleccione la opcion que desea: &quot;);&#xD;
				opc = Input.inOpc();&#xD;
				&#xD;
				// Selector&#xD;
				filtro = selectorMenuFiltroComunes(filtro, opc);&#xD;
			} while(opc != 0);&#xD;
		&#xD;
			// Print resultado&#xD;
			printResultadoFiltroComunes(filtro);&#xD;
			return true;&#xD;
		}&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYXgoOimEe-n_bccIa6R9w" name="printMenuFiltroComunes" specification="_kWTrIOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYXgoeimEe-n_bccIa6R9w" name="filtro" type="_kLBoMOimEe-n_bccIa6R9w"/>
          <language>java</language>
          <body>System.out.print(&#xD;
				&quot;\n>>> Filtro &lt;&lt;&lt;\n&quot;&#xD;
				&#xD;
				// 1. Por numero		&#xD;
				+ 														 &#xD;
				((filtro.getNum() == 0) ?&#xD;
						&quot;1. Por nombre\n&quot; :&#xD;
						filtro.getNum() + &quot;\n&quot;&#xD;
				)&#xD;
				&#xD;
				// 2. Por hotel&#xD;
				+ &#xD;
				(&#xD;
				(filtro.getHotel() == null) ?&#xD;
					&quot;2. Por hotel\n&quot; : (&#xD;
					(filtro.getHotel().getID() == 0) ?&#xD;
						&quot;2. Por hotel\n&quot; :&#xD;
						filtro.getHotel().getID() + &quot;\n&quot;&#xD;
				))&#xD;
				&#xD;
				+ &quot;0. Para continuar\n&quot;&#xD;
		);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYXgouimEe-n_bccIa6R9w" name="printResultadoFiltroComunes" specification="_kWTrIuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYXgo-imEe-n_bccIa6R9w" name="filtro" type="_kLBoMOimEe-n_bccIa6R9w"/>
          <language>java</language>
          <body>RepoEspacioComun rEC = new RepoEspacioComun();&#xD;
		ArrayList&lt;EspacioComun> lista = rEC.getListaFiltrada(filtro);&#xD;
		&#xD;
		System.out.print(&#xD;
				&quot;Hotel&quot; + &quot;\t\t| &quot;&#xD;
				+ &quot;Numero&quot; + &quot;\t| &quot;&#xD;
				+ &quot;Capacidad&quot; + &quot;\t| &quot;&#xD;
				+ &quot;Precio&quot; + &quot;\t\t| &quot;&#xD;
				+ &quot;Telefono&quot; + &quot;\t| &quot;&#xD;
				+ &quot;Tipo\n&quot;&#xD;
				+ &quot;---------------------------------------------------------------------------------------------------------------------------------------------\n&quot;);&#xD;
		int i = 0;&#xD;
		while (i &lt; lista.size()) {&#xD;
			System.out.print(&#xD;
					(&#xD;
							(lista.get(i).getHotel().getNombre().length() &lt; 7) ? &#xD;
								(lista.get(i).getHotel().getNombre() + &quot;\t\t| &quot;) : &#xD;
								(lista.get(i).getHotel().getNombre() + &quot;\t| &quot;)&#xD;
					)&#xD;
					+ lista.get(i).getNum() + &quot;\t\t| &quot;&#xD;
					+ lista.get(i).getCapacidad() + &quot;\t\t| &quot;&#xD;
					+ lista.get(i).getPvp() + &quot;€\t\t| &quot;&#xD;
					+ lista.get(i).getTlfno() + &quot;\t| &quot;&#xD;
					+ lista.get(i).getTipo() + &quot;\n&quot;&#xD;
			);&#xD;
			i++;&#xD;
			if (i%5 == 0) System.out.print(&quot;-----------------------------------------------------------------------------------------------------------------------------------------------------\n&quot;);&#xD;
		}&#xD;
		System.out.print(&quot;\n&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYXgpOimEe-n_bccIa6R9w" name="selectorMenuFiltroComunes" specification="_kWUSMOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYXgpeimEe-n_bccIa6R9w" name="filtro" type="_kLBoMOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYXgpuimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYXgp-imEe-n_bccIa6R9w" type="_kLBoMOimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>switch (opc) {&#xD;
		&#xD;
		// Filtro numero&#xD;
		//--------------------------------------------------------------------------------------------------------------&#xD;
		case 1:&#xD;
			filtro.setNum(Input.inNum());&#xD;
			break;&#xD;
			&#xD;
		// Filtro hotel&#xD;
		//--------------------------------------------------------------------------------------------------------------		&#xD;
		case 2:&#xD;
			RepoHotel rH = new RepoHotel();&#xD;
			filtro.setHotel(rH.get(Input.inID()));&#xD;
			break;&#xD;
			&#xD;
		//--------------------------------------------------------------------------------------------------------------&#xD;
		default:&#xD;
			break;&#xD;
			&#xD;
		}&#xD;
		return filtro;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYXgqOimEe-n_bccIa6R9w" name="printReuniones" specification="_kKNI0OimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print(&#xD;
				&quot;\n~~~ Menu de administración / Otros / Sala de reuniones ~~~\n&quot;&#xD;
				+ &quot;1. Lista\n&quot;&#xD;
				+ &quot;2. Agregar\n&quot;&#xD;
				+ &quot;3. Modificar\n&quot;&#xD;
				+ &quot;4. Eliminar\n&quot;&#xD;
				+ &quot;0. Volver atras\n&quot;&#xD;
				+ &quot;Seleccione la opcion que desee: &quot;);&#xD;
		selectorReuniones(Input.inOpc());&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYXgqeimEe-n_bccIa6R9w" name="selectorReuniones" specification="_kKNv4OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYXgquimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>switch (opc) {&#xD;
		case 1:&#xD;
			listaReuniones();&#xD;
			break;&#xD;
		case 2:&#xD;
			addReunion();&#xD;
			break;&#xD;
		case 3:&#xD;
			modifyReuniones();&#xD;
			break;&#xD;
		case 4:&#xD;
			deleteReuniones();&#xD;
			break;&#xD;
		case 0:&#xD;
			print();&#xD;
		default:&#xD;
			printReuniones();&#xD;
		}&#xD;
		printOtros();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYXgq-imEe-n_bccIa6R9w" name="deleteReuniones" specification="_kKNv4uimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print( &#xD;
				&quot;¿Que sala de reuniones deseas eliminar?\n&quot;&#xD;
				+ &quot;1. Buscar por HOTEL\n&quot;&#xD;
				+ &quot;2. Buscar por NUMERO\n&quot;&#xD;
				+ &quot;Seleccione la opcion que deseas: &quot;&#xD;
				);&#xD;
		SalaReunion aBorrar = selectorModifyReuniones(Input.inOpc());&#xD;
		RepoSalaReunion rSr = new RepoSalaReunion();&#xD;
		System.out.print((rSr.delete(aBorrar)) ? &quot;Borrado correctamente\n&quot; : &quot;Error al eliminar\n&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYXgrOimEe-n_bccIa6R9w" name="modifyReuniones" specification="_kKOW8OimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print( &#xD;
				&quot;\n¿Que sala de reuniones deseas modificar?\n&quot;&#xD;
				+ &quot;1. Buscar por HOTEL\n&quot;&#xD;
				+ &quot;2. Buscar por NUMERO\n&quot;&#xD;
				+ &quot;Seleccione la opcion que deseas: &quot;&#xD;
				);&#xD;
		SalaReunion aModificar = selectorModifyReuniones(Input.inOpc());&#xD;
		if (aModificar == null) {&#xD;
			System.out.print(&quot;\n>>> ERROR: Sala de reuniones no valido &lt;&lt;&lt;\n&quot;);&#xD;
			modifyReuniones();&#xD;
		} else {&#xD;
			System.out.print(&#xD;
					&quot;\n~~~ Datos actuales ~~~\n&quot; +&#xD;
					aModificar.toString() + &quot;\n&quot; +&#xD;
					&quot;\n¿Que desea modificar?\n&quot; +&#xD;
					&quot;1. Hotel\n&quot; +&#xD;
					&quot;2. Numero\n&quot; +&#xD;
					&quot;3. Capacidad\n&quot; +&#xD;
					&quot;4. Telefono\n&quot; +&#xD;
					&quot;5. PVP\n&quot; +&#xD;
					&quot;6. Saervicios\n&quot; +&#xD;
					&quot;0. Volver atras\n&quot; +&#xD;
					&quot;Selecciones la opcion que desee: &quot;&#xD;
					);&#xD;
			selectorModifyReunion(Input.inOpc(), aModificar);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYXgreimEe-n_bccIa6R9w" name="selectorModifyReunion" specification="_kWU5QOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYXgruimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYXgr-imEe-n_bccIa6R9w" name="aModificar" type="_kLbQ0OimEe-n_bccIa6R9w"/>
          <language>java</language>
          <body>RepoSalaReunion rSr = new RepoSalaReunion();&#xD;
		RepoHotel rHo = new RepoHotel();&#xD;
		switch (opc) {&#xD;
		&#xD;
		// Hotel&#xD;
		case 1:&#xD;
			aModificar.setHotel(rHo.get(Input.inID()));&#xD;
			rSr.update(aModificar);&#xD;
			break;&#xD;
		&#xD;
		// Numero&#xD;
		case 2:&#xD;
			aModificar.setNum(Input.inNum());&#xD;
			rSr.update(aModificar);&#xD;
			break;&#xD;
			&#xD;
		// Capacidad&#xD;
		case 3:	&#xD;
			aModificar.setCapacidad(Input.inCapacidad());&#xD;
			rSr.update(aModificar);&#xD;
			break;			&#xD;
			&#xD;
		// Telefono&#xD;
		case 4:&#xD;
			aModificar.setTlfno(Input.inTelefono());&#xD;
			rSr.update(aModificar);&#xD;
			break;&#xD;
			&#xD;
		// PVP&#xD;
		case 5:&#xD;
			aModificar.setPvp(Input.inPvp());&#xD;
			rSr.update(aModificar);&#xD;
			break;&#xD;
			&#xD;
		// Servicios&#xD;
		case 6:&#xD;
			aModificar.setServicios(Input.inServicios());&#xD;
			rSr.update(aModificar);&#xD;
			break;&#xD;
			&#xD;
		// Volver atras	&#xD;
		default:&#xD;
			modifyCliente();	&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYYHsOimEe-n_bccIa6R9w" name="selectorModifyReuniones" specification="_kKOW8eimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYYHseimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYYHsuimEe-n_bccIa6R9w" type="_kLbQ0OimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>SalaReunion aModificar = null;&#xD;
		RepoSalaReunion rSr = new RepoSalaReunion();&#xD;
		SalaReunion filtro = null;&#xD;
		RepoHotel rHo = new RepoHotel();&#xD;
		switch (opc) {&#xD;
		&#xD;
		// Buscar por HOTEL&#xD;
		case 1:&#xD;
			int idHotel = Input.inID();&#xD;
			filtro = new SalaReunion(0, 0, &quot;&quot;, 0, rHo.get(idHotel), &quot;&quot;);&#xD;
			printResultadoFiltroReuniones(filtro);&#xD;
			&#xD;
			// Elige el cliente por Numero&#xD;
			System.out.print(&quot;Seleccione &quot;);&#xD;
			aModificar = rSr.get(idHotel, Input.inNum());&#xD;
			break;&#xD;
			&#xD;
		// Buscar por NUMERO&#xD;
		case 2:&#xD;
			int num = Input.inNum();&#xD;
			filtro = new SalaReunion(num, 0, &quot;&quot;, 0, null, &quot;&quot;);&#xD;
			printResultadoFiltroReuniones(filtro);&#xD;
			&#xD;
			// Elige el cliente por Hotel&#xD;
			System.out.print(&quot;Seleccione &quot;);&#xD;
			aModificar = rSr.get(rHo.get(Input.inID()).getID(), num);&#xD;
			break;&#xD;
		&#xD;
		// Volver atras&#xD;
		case 0: &#xD;
			printReuniones();&#xD;
			&#xD;
		// Vuelve atras&#xD;
		default:&#xD;
			modifyReuniones();&#xD;
		}&#xD;
		return aModificar;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYYHs-imEe-n_bccIa6R9w" name="addReunion" specification="_kKPlEOimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print(&quot;\n>>> Recuerda tener todos los datos &lt;&lt;&lt;\n&quot;&#xD;
				+ &quot;¿Tienes los datos? &quot;);&#xD;
		if (Input.inYesNo()) {&#xD;
			RepoSalaReunion rSr = new RepoSalaReunion();&#xD;
			RepoHotel rHo = new RepoHotel();&#xD;
			SalaReunion s = new SalaReunion(&#xD;
					Input.inNum(),&#xD;
					Input.inCapacidad(),&#xD;
					Input.inTelefono(),&#xD;
					Input.inPvp(),&#xD;
					rHo.get(Input.inID()),&#xD;
					Input.inServicios()&#xD;
					);&#xD;
			rSr.insert(s);&#xD;
			System.out.println(&quot;&quot;);&#xD;
		} else {&#xD;
			printHoteles();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYYHtOimEe-n_bccIa6R9w" name="listaReuniones" specification="_kKQMIOimEe-n_bccIa6R9w">
          <language>java</language>
          <body>if (!filtroReuniones()) {&#xD;
			SalaReunion filtro = new SalaReunion(0, 0, &quot;&quot;, 0, null, &quot;&quot;);&#xD;
			printResultadoFiltroReuniones(filtro);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYYHteimEe-n_bccIa6R9w" name="filtroReuniones" specification="_kKQMIeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYYHtuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&quot;\n¿Deseas filtrar el resultado? &quot;);&#xD;
		boolean respuesta = Input.inYesNo();&#xD;
		if (respuesta) {&#xD;
&#xD;
			int opc = 0;&#xD;
			SalaReunion filtro = new SalaReunion(0, 0, &quot;&quot;, 0, null, &quot;&quot;);&#xD;
			do {&#xD;
	&#xD;
				// Print filtro&#xD;
				printMenuFiltroReuniones(filtro);&#xD;
				System.out.print(&quot;Seleccione la opcion que desea: &quot;);&#xD;
				opc = Input.inOpc();&#xD;
				&#xD;
				// Selector&#xD;
				filtro = selectorMenuFiltroReuniones(filtro, opc);&#xD;
			} while(opc != 0);&#xD;
		&#xD;
			// Print resultado&#xD;
			printResultadoFiltroReuniones(filtro);&#xD;
			return true;&#xD;
		}&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYYHt-imEe-n_bccIa6R9w" name="printMenuFiltroReuniones" specification="_kWU5ROimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYYHuOimEe-n_bccIa6R9w" name="filtro" type="_kLbQ0OimEe-n_bccIa6R9w"/>
          <language>java</language>
          <body>System.out.print(&#xD;
				&quot;\n>>> Filtro &lt;&lt;&lt;\n&quot;&#xD;
				&#xD;
				// 1. Por numero		&#xD;
				+ 														 &#xD;
				((filtro.getNum() == 0) ?&#xD;
						&quot;1. Por numero de sala\n&quot; :&#xD;
						filtro.getNum() + &quot;\n&quot;&#xD;
				)&#xD;
				&#xD;
				// 2. Por hotel&#xD;
				+ &#xD;
				(&#xD;
				(filtro.getHotel() == null) ?&#xD;
					&quot;2. Por hotel\n&quot; : (&#xD;
					(filtro.getHotel().getID() == 0) ?&#xD;
						&quot;2. Por hotel\n&quot; :&#xD;
						filtro.getHotel().getID() + &quot;\n&quot;&#xD;
				))&#xD;
				&#xD;
				+ &quot;0. Para continuar\n&quot;&#xD;
		);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYYHueimEe-n_bccIa6R9w" name="printResultadoFiltroReuniones" specification="_kWVgUOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYYHuuimEe-n_bccIa6R9w" name="filtro" type="_kLbQ0OimEe-n_bccIa6R9w"/>
          <language>java</language>
          <body>RepoSalaReunion rSr = new RepoSalaReunion();&#xD;
		ArrayList&lt;SalaReunion> lista = rSr.getListaFiltrada(filtro);&#xD;
		&#xD;
		System.out.print(&#xD;
				&quot;Hotel&quot; + &quot;\t\t| &quot;&#xD;
				+ &quot;Numero&quot; + &quot;\t| &quot;&#xD;
				+ &quot;Capacidad&quot; + &quot;\t| &quot;&#xD;
				+ &quot;Precio&quot; + &quot;\t| &quot;&#xD;
				+ &quot;Telefono&quot; + &quot;\t| &quot;&#xD;
				+ &quot;Servicios\n&quot;&#xD;
				+ &quot;---------------------------------------------------------------------------------------------------------------------------------------------\n&quot;);&#xD;
		int i = 0;&#xD;
		while (i &lt; lista.size()) {&#xD;
			System.out.print(&#xD;
					(&#xD;
							(lista.get(i).getHotel().getNombre().length() &lt; 7) ? &#xD;
								(lista.get(i).getHotel().getNombre() + &quot;\t\t| &quot;) : &#xD;
								(lista.get(i).getHotel().getNombre() + &quot;\t| &quot;)&#xD;
					)&#xD;
					+ lista.get(i).getNum() + &quot;\t\t| &quot;&#xD;
					+ lista.get(i).getCapacidad() + &quot;\t\t| &quot;&#xD;
					+ ((lista.get(i).getPvp() >= 100) ? lista.get(i).getPvp() + &quot;€\t| &quot; : lista.get(i).getPvp() + &quot;€\t\t| &quot;)&#xD;
					+ lista.get(i).getTlfno() + &quot;\t| &quot;&#xD;
					+ lista.get(i).getServicios() + &quot;\n&quot;&#xD;
			);&#xD;
			i++;&#xD;
			if (i%5 == 0) System.out.print(&quot;-----------------------------------------------------------------------------------------------------------------------------------------------------\n&quot;);&#xD;
		}&#xD;
		System.out.print(&quot;\n&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYYHu-imEe-n_bccIa6R9w" name="selectorMenuFiltroReuniones" specification="_kWWHYOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYYHvOimEe-n_bccIa6R9w" name="filtro" type="_kLbQ0OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kYYHveimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYYHvuimEe-n_bccIa6R9w" type="_kLbQ0OimEe-n_bccIa6R9w" direction="return"/>
          <language>java</language>
          <body>switch (opc) {&#xD;
		&#xD;
		// Filtro numero&#xD;
		//--------------------------------------------------------------------------------------------------------------&#xD;
		case 1:&#xD;
			filtro.setNum(Input.inNum());&#xD;
			break;&#xD;
			&#xD;
		// Filtro hotel&#xD;
		//--------------------------------------------------------------------------------------------------------------		&#xD;
		case 2:&#xD;
			RepoHotel rH = new RepoHotel();&#xD;
			filtro.setHotel(rH.get(Input.inID()));&#xD;
			break;&#xD;
			&#xD;
		//--------------------------------------------------------------------------------------------------------------&#xD;
		default:&#xD;
			break;&#xD;
			&#xD;
		}&#xD;
		return filtro;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kJ-fUOimEe-n_bccIa6R9w" name="print" isStatic="true" method="_kYSBEOimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kJ_GYOimEe-n_bccIa6R9w" name="selector" visibility="private" isStatic="true" method="_kYSBEeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kJ_GYeimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJ_tcOimEe-n_bccIa6R9w" name="printReservas" visibility="private" isStatic="true" method="_kYSBE-imEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kJ_tceimEe-n_bccIa6R9w" name="selectorReservas" visibility="private" isStatic="true" method="_kYSBFOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kJ_tcuimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kJ_tc-imEe-n_bccIa6R9w" name="deleteReserva" visibility="private" isStatic="true" method="_kYSBFuimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKAUgOimEe-n_bccIa6R9w" name="modifyReserva" visibility="private" isStatic="true" method="_kYSBF-imEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKAUgeimEe-n_bccIa6R9w" name="selectorModifyReservas" visibility="private" isStatic="true" method="_kYSBG-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKAUguimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWLvUuimEe-n_bccIa6R9w" type="_kLQ4wOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kKA7kOimEe-n_bccIa6R9w" name="addReserva" visibility="private" isStatic="true" method="_kYSoIuimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKA7keimEe-n_bccIa6R9w" name="listaReserva" visibility="private" isStatic="true" method="_kYSoI-imEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKA7kuimEe-n_bccIa6R9w" name="filtroReserva" visibility="private" isStatic="true" method="_kYSoJOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKA7k-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kKBioOimEe-n_bccIa6R9w" name="printClientes" visibility="private" isStatic="true" method="_kYTPMuimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKBioeimEe-n_bccIa6R9w" name="selectorClientes" visibility="private" isStatic="true" method="_kYTPM-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKBiouimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kKCJsOimEe-n_bccIa6R9w" name="deleteCliente" visibility="private" isStatic="true" method="_kYTPNeimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKCJseimEe-n_bccIa6R9w" name="modifyCliente" visibility="private" isStatic="true" method="_kYTPNuimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKCwwOimEe-n_bccIa6R9w" name="selectorModifyClientes" visibility="private" isStatic="true" method="_kYTPOuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKCwweimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWNkg-imEe-n_bccIa6R9w" type="_kKqb0uimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kKDX0OimEe-n_bccIa6R9w" name="addCliente" visibility="private" isStatic="true" method="_kYT2QOimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKDX0eimEe-n_bccIa6R9w" name="listaClientes" visibility="private" isStatic="true" method="_kYT2QeimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKDX0uimEe-n_bccIa6R9w" name="filtroCliente" visibility="private" isStatic="true" method="_kYT2QuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKD-4OimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kKD-4eimEe-n_bccIa6R9w" name="printResultadoCliente" visibility="private" isStatic="true" method="_kYUdUOimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKEl8OimEe-n_bccIa6R9w" name="printHoteles" visibility="private" isStatic="true" method="_kYUdUeimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKEl8eimEe-n_bccIa6R9w" name="selectorHoteles" visibility="private" isStatic="true" method="_kYUdUuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKEl8uimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kKFNAOimEe-n_bccIa6R9w" name="deleteHotel" visibility="private" isStatic="true" method="_kYUdVOimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKFNAeimEe-n_bccIa6R9w" name="modifyHotel" visibility="private" isStatic="true" method="_kYUdVeimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKFNAuimEe-n_bccIa6R9w" name="selectorModifyHoteles" visibility="private" isStatic="true" method="_kYUdVuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKFNA-imEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWOyoOimEe-n_bccIa6R9w" type="_kLN1cOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kKF0EOimEe-n_bccIa6R9w" name="addHotel" visibility="private" isStatic="true" method="_kYUdXOimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKGbIOimEe-n_bccIa6R9w" name="listaHoteles" visibility="private" isStatic="true" method="_kYVEYOimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKGbIeimEe-n_bccIa6R9w" name="filtroHotel" visibility="private" isStatic="true" method="_kYVEYeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKGbIuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kKHCMOimEe-n_bccIa6R9w" name="printHabitaciones" visibility="private" isStatic="true" method="_kYVEa-imEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKHCMeimEe-n_bccIa6R9w" name="selectorHabitaciones" visibility="private" isStatic="true" method="_kYVEbOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKHCMuimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kKHpQOimEe-n_bccIa6R9w" name="deleteHabitacion" visibility="private" isStatic="true" method="_kYVEbuimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKHpQeimEe-n_bccIa6R9w" name="modifyHabitacion" visibility="private" isStatic="true" method="_kYVrcOimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKIQUOimEe-n_bccIa6R9w" name="selectorModifyHabitaciones" visibility="private" isStatic="true" method="_kYVrdOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKIQUeimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWQAw-imEe-n_bccIa6R9w" type="_kLIV4OimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kKI3YOimEe-n_bccIa6R9w" name="addHabitacion" visibility="private" isStatic="true" method="_kYVrd-imEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKI3YeimEe-n_bccIa6R9w" name="listaHabitaciones" visibility="private" isStatic="true" method="_kYVreOimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKI3YuimEe-n_bccIa6R9w" name="filtroHabitaciones" visibility="private" isStatic="true" method="_kYVreeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKI3Y-imEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kKJecOimEe-n_bccIa6R9w" name="filtroTipoHab" visibility="private" isStatic="true" method="_kYWShuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWTEEOimEe-n_bccIa6R9w" type="_kLI88OimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kKKFgOimEe-n_bccIa6R9w" name="printOtros" visibility="private" isStatic="true" method="_kYWSiOimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKKskOimEe-n_bccIa6R9w" name="selectorOtros" visibility="private" isStatic="true" method="_kYWSieimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKKskeimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kKKskuimEe-n_bccIa6R9w" name="printComunes" visibility="private" isStatic="true" method="_kYWSi-imEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKKsk-imEe-n_bccIa6R9w" name="selectorComunes" visibility="private" isStatic="true" method="_kYW5kOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKKslOimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kKLToOimEe-n_bccIa6R9w" name="deleteComun" visibility="private" isStatic="true" method="_kYW5kuimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKLToeimEe-n_bccIa6R9w" name="modifyComun" visibility="private" isStatic="true" method="_kYW5k-imEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKL6sOimEe-n_bccIa6R9w" name="selectorModifyComunes" visibility="private" isStatic="true" method="_kYW5l-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKL6seimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWTEFOimEe-n_bccIa6R9w" type="_kLBoMOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kKL6suimEe-n_bccIa6R9w" name="addComun" visibility="private" isStatic="true" method="_kYW5muimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKL6s-imEe-n_bccIa6R9w" name="listaComunes" visibility="private" isStatic="true" method="_kYW5m-imEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKMhwOimEe-n_bccIa6R9w" name="filtroComunes" visibility="private" isStatic="true" method="_kYW5nOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKMhweimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kKNI0OimEe-n_bccIa6R9w" name="printReuniones" visibility="private" isStatic="true" method="_kYXgqOimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKNv4OimEe-n_bccIa6R9w" name="selectorReuniones" visibility="private" isStatic="true" method="_kYXgqeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKNv4eimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kKNv4uimEe-n_bccIa6R9w" name="deleteReuniones" visibility="private" isStatic="true" method="_kYXgq-imEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKOW8OimEe-n_bccIa6R9w" name="modifyReuniones" visibility="private" isStatic="true" method="_kYXgrOimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKOW8eimEe-n_bccIa6R9w" name="selectorModifyReuniones" visibility="private" isStatic="true" method="_kYYHsOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKOW8uimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWU5Q-imEe-n_bccIa6R9w" type="_kLbQ0OimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kKPlEOimEe-n_bccIa6R9w" name="addReunion" visibility="private" isStatic="true" method="_kYYHs-imEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKQMIOimEe-n_bccIa6R9w" name="listaReuniones" visibility="private" isStatic="true" method="_kYYHtOimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKQMIeimEe-n_bccIa6R9w" name="filtroReuniones" visibility="private" isStatic="true" method="_kYYHteimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKQMIuimEe-n_bccIa6R9w" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kWLIQOimEe-n_bccIa6R9w" name="selectorModifyReserva" visibility="private" isStatic="true" method="_kYSBGOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWLvUOimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWLvUeimEe-n_bccIa6R9w" name="aModificar" type="_kLQ4wOimEe-n_bccIa6R9w"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWLvU-imEe-n_bccIa6R9w" name="printReservasCliente" visibility="private" isStatic="true" method="_kYSoIOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWLvVOimEe-n_bccIa6R9w" name="filtro" type="_kLQ4wOimEe-n_bccIa6R9w"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWMWYOimEe-n_bccIa6R9w" name="printMenuFiltroReserva" visibility="private" isStatic="true" method="_kYSoJuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWMWYeimEe-n_bccIa6R9w" name="filtro" type="_kLQ4wOimEe-n_bccIa6R9w"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWMWYuimEe-n_bccIa6R9w" name="selectorMenuFiltroReserva" visibility="private" isStatic="true" method="_kYSoKOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWMWY-imEe-n_bccIa6R9w" name="filtro" type="_kLQ4wOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWMWZOimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWM9cOimEe-n_bccIa6R9w" type="_kLQ4wOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWM9ceimEe-n_bccIa6R9w" name="printResultadoFiltroReserva" visibility="private" isStatic="true" method="_kYTPMOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWM9cuimEe-n_bccIa6R9w" name="filtro" type="_kLQ4wOimEe-n_bccIa6R9w"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWNkgOimEe-n_bccIa6R9w" name="selectorModifyCliente" visibility="private" isStatic="true" method="_kYTPN-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWNkgeimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWNkguimEe-n_bccIa6R9w" name="aModificar" type="_kKqb0uimEe-n_bccIa6R9w"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWOLkOimEe-n_bccIa6R9w" name="printMenuFiltroCliente" visibility="private" isStatic="true" method="_kYT2ROimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWOLkeimEe-n_bccIa6R9w" name="filtro" type="_kKqb0uimEe-n_bccIa6R9w"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWOLkuimEe-n_bccIa6R9w" name="selectorMenuFiltroCliente" visibility="private" isStatic="true" method="_kYT2RuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWOLk-imEe-n_bccIa6R9w" name="filtro" type="_kKqb0uimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWOLlOimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWOLleimEe-n_bccIa6R9w" type="_kKqb0uimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWOLluimEe-n_bccIa6R9w" name="printResultadoFiltroCliente" visibility="private" isStatic="true" method="_kYT2SuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWOLl-imEe-n_bccIa6R9w" name="filtro" type="_kKqb0uimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWOLmOimEe-n_bccIa6R9w" name="trabajador">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kWOyoeimEe-n_bccIa6R9w" name="selectorModifyHotel" visibility="private" isStatic="true" method="_kYUdWeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWOyouimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWOyo-imEe-n_bccIa6R9w" name="aModificar" type="_kLN1cOimEe-n_bccIa6R9w"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWOypOimEe-n_bccIa6R9w" name="printResultadoFiltroHotel" visibility="private" isStatic="true" method="_kYVEY-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWOypeimEe-n_bccIa6R9w" name="filtro" type="_kLN1cOimEe-n_bccIa6R9w"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWPZsOimEe-n_bccIa6R9w" name="selectorMenuFiltroHotel" visibility="private" isStatic="true" method="_kYVEZeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWPZseimEe-n_bccIa6R9w" name="filtro" type="_kLN1cOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWPZsuimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWPZs-imEe-n_bccIa6R9w" type="_kLN1cOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWPZtOimEe-n_bccIa6R9w" name="printMenuFiltroHotel" visibility="private" isStatic="true" method="_kYVEaeimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWPZteimEe-n_bccIa6R9w" name="filtro" type="_kLN1cOimEe-n_bccIa6R9w"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWQAwOimEe-n_bccIa6R9w" name="selectorModifyHabitacion" visibility="private" isStatic="true" method="_kYVrceimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWQAweimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWQAwuimEe-n_bccIa6R9w" name="aModificar" type="_kLIV4OimEe-n_bccIa6R9w"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWQAxOimEe-n_bccIa6R9w" name="printMenuFiltroHabitaciones" visibility="private" isStatic="true" method="_kYWSgOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWQAxeimEe-n_bccIa6R9w" name="filtro" type="_kLIV4OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWRO4OimEe-n_bccIa6R9w" name="disponible">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kWSdAOimEe-n_bccIa6R9w" name="printResultadoFiltroHabitacion" visibility="private" isStatic="true" method="_kYWSg-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWSdAeimEe-n_bccIa6R9w" name="filtro" type="_kLIV4OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWSdAuimEe-n_bccIa6R9w" name="disponible">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kWTEEeimEe-n_bccIa6R9w" name="selectorModifyComun" visibility="private" isStatic="true" method="_kYW5lOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWTEEuimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWTEE-imEe-n_bccIa6R9w" name="aModificar" type="_kLBoMOimEe-n_bccIa6R9w"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWTrIOimEe-n_bccIa6R9w" name="printMenuFiltroComunes" visibility="private" isStatic="true" method="_kYXgoOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWTrIeimEe-n_bccIa6R9w" name="filtro" type="_kLBoMOimEe-n_bccIa6R9w"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWTrIuimEe-n_bccIa6R9w" name="printResultadoFiltroComunes" visibility="private" isStatic="true" method="_kYXgouimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWTrI-imEe-n_bccIa6R9w" name="filtro" type="_kLBoMOimEe-n_bccIa6R9w"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWUSMOimEe-n_bccIa6R9w" name="selectorMenuFiltroComunes" visibility="private" isStatic="true" method="_kYXgpOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWUSMeimEe-n_bccIa6R9w" name="filtro" type="_kLBoMOimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWUSMuimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWUSM-imEe-n_bccIa6R9w" type="_kLBoMOimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWU5QOimEe-n_bccIa6R9w" name="selectorModifyReunion" visibility="private" isStatic="true" method="_kYXgreimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWU5QeimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWU5QuimEe-n_bccIa6R9w" name="aModificar" type="_kLbQ0OimEe-n_bccIa6R9w"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWU5ROimEe-n_bccIa6R9w" name="printMenuFiltroReuniones" visibility="private" isStatic="true" method="_kYYHt-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWU5ReimEe-n_bccIa6R9w" name="filtro" type="_kLbQ0OimEe-n_bccIa6R9w"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWVgUOimEe-n_bccIa6R9w" name="printResultadoFiltroReuniones" visibility="private" isStatic="true" method="_kYYHueimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWVgUeimEe-n_bccIa6R9w" name="filtro" type="_kLbQ0OimEe-n_bccIa6R9w"/>
        </ownedOperation>
        <ownedOperation xmi:id="_kWWHYOimEe-n_bccIa6R9w" name="selectorMenuFiltroReuniones" visibility="private" isStatic="true" method="_kYYHu-imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWWHYeimEe-n_bccIa6R9w" name="filtro" type="_kLbQ0OimEe-n_bccIa6R9w"/>
          <ownedParameter xmi:id="_kWWHYuimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kWWHY-imEe-n_bccIa6R9w" type="_kLbQ0OimEe-n_bccIa6R9w" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kKkVMOimEe-n_bccIa6R9w" name="MenuCarrito">
        <ownedComment xmi:id="_kYs30OimEe-n_bccIa6R9w">
          <body>Menu de finalizacion de compra</body>
        </ownedComment>
        <ownedAttribute xmi:id="_kXglAOimEe-n_bccIa6R9w" name="carrito" isStatic="true" type="_kVvqcOimEe-n_bccIa6R9w" association="_kZEEMeimEe-n_bccIa6R9w">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_kXhMEeimEe-n_bccIa6R9w" value="new ArrayList&lt;>()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYZV0OimEe-n_bccIa6R9w" name="print" specification="_kKmKYOimEe-n_bccIa6R9w">
          <language>java</language>
          <body>if (!carrito.isEmpty()) {&#xD;
			System.out.print(&quot;\n~~~ Carrito ~~~\n&quot;);&#xD;
			RepoHabitacion rH = new RepoHabitacion();&#xD;
			double subtotal = 0;&#xD;
			for(Reserva c : carrito) {&#xD;
				// Obtengo una habitacion con la reserva del carrito, y la imprimo&#xD;
				System.out.print(&#xD;
						&quot;.....................................\n&quot; + &#xD;
						/* Get IdHotel				 		   NumSala				 Imprime&#xD;
						   --- ------------------------------  --------------------  --------- */&#xD;
						rH.get(c.getSala().getHotel().getID(), c.getSala().getNum()).toString() + &#xD;
						&quot;\nDesde el &quot; + c.getFecIni().toString() + &quot; hasta el &quot; + c.getFecFin().toString() +&#xD;
						&quot;\nPrecio con descuento aplicado: &quot; + c.getPrecioTotal() + &#xD;
						&quot;\n.....................................\n&quot;);&#xD;
				subtotal += c.getPrecioTotal();&#xD;
			}&#xD;
			System.out.print(&#xD;
					Login.user.toString()&#xD;
					+&quot;\n\nSUBTOTAL: &quot; + subtotal&#xD;
					+&quot;\n¿Es correcto? (no para volver atras) &quot;);&#xD;
			boolean respuesta = Input.inYesNo();&#xD;
			if (respuesta) {&#xD;
				pasarelaPago();&#xD;
				carrito.clear();&#xD;
				MenuCarrito.print();&#xD;
			} else {&#xD;
				modificarCarrito();&#xD;
				MenuPrincipal.print();&#xD;
			}&#xD;
			&#xD;
		} else {&#xD;
			System.out.print(&quot;\n\n\n\n\n\n\n\n>>> Fin de programa &lt;&lt;&lt;\n\n\n\n\n\n\n&quot;);&#xD;
			System.exit(0);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYZ84OimEe-n_bccIa6R9w" name="modificarCarrito" specification="_kKmKYeimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print(&quot;¿Deseas modificar el carrito? (no para volver atras) &quot;);&#xD;
		boolean respuesta = Input.inYesNo();&#xD;
		if (respuesta) {&#xD;
			System.out.print(&quot;\n~~~ Reservas ~~~\n&quot;);&#xD;
			for (Reserva r : carrito) {&#xD;
				System.out.print(	&#xD;
									&quot;...............\n &quot; + &#xD;
									r.toString() + &#xD;
									&quot;\n..............\n&quot;&#xD;
								);&#xD;
			}&#xD;
			System.out.print(&quot;Elige el id de la reserva que deseas modificar: &quot;);&#xD;
			int id = Input.inOpc();&#xD;
			printModificarReserva(id);&#xD;
			&#xD;
		} 	&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYZ84eimEe-n_bccIa6R9w" name="printModificarReserva" specification="_kKmxcOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYZ84uimEe-n_bccIa6R9w" name="id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&quot;\n----- Modificar reserva -----\n&quot;&#xD;
				+ &quot;1. Eliminar\n&quot;&#xD;
				+ &quot;2. Modificar fechas\n&quot;&#xD;
				+ &quot;Seleccione lo que desea hacer: &quot;);&#xD;
		selectorModificarReserva(Input.inOpc(), id);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYaj8OimEe-n_bccIa6R9w" name="selectorModificarReserva" specification="_kKmxcuimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYaj8eimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kYaj8uimEe-n_bccIa6R9w" name="id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>switch (opc) {&#xD;
		case 1:&#xD;
			int i = 0;&#xD;
			boolean bEncontrado = false;&#xD;
			while (i &lt; carrito.size() &amp;&amp; !bEncontrado) {&#xD;
				if (id != carrito.get(i).getID()) {&#xD;
					i++;&#xD;
				} else {&#xD;
					bEncontrado = true;&#xD;
					carrito.remove(i);&#xD;
					if (carrito.isEmpty()) {&#xD;
						MenuPrincipal.print();&#xD;
					} else {&#xD;
						print();&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			System.out.print(&quot;Error al introducir el id de reserva\n&quot;);&#xD;
			modificarCarrito();&#xD;
&#xD;
		case 2:&#xD;
			System.out.print(&quot;\n\n >>> Elimina la reserva y vuelve a crear la reserva &lt;&lt;&lt;\n\n&quot;);&#xD;
			modificarCarrito();&#xD;
		default:&#xD;
			System.out.print(&quot;\n\n>>> ERROR: Elige una opcion valida &lt;&lt;&lt;\n\n&quot;);&#xD;
			printModificarReserva(id);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYaj8-imEe-n_bccIa6R9w" name="pasarelaPago" specification="_kKnYgeimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print(&quot;\n\n~~~ Pasarela de pago ~~~\n&quot;&#xD;
				+ &quot;¿Que metodo de pago va a usar?\n&quot;&#xD;
				+ &quot;1. Tarjeta de credito\n&quot;&#xD;
				+ &quot;2. Transferencia bancaria\n&quot;&#xD;
				+ &quot;3. PayPal\n&quot;&#xD;
				+ &quot;4. Bizum\n&quot;&#xD;
				+ &quot;5. In situ\n&quot;&#xD;
				+ &quot;Seleccione el metodo que desee: &quot;&#xD;
				);&#xD;
		selectorPasarelaPago(Input.inOpc());&#xD;
		System.out.print(&quot;\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nMuchas gracias por su compra, \nesperamos que vuelva a contar con nosotros\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;);&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYaj9OimEe-n_bccIa6R9w" name="selectorPasarelaPago" specification="_kKnYguimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYaj9eimEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>RepoReserva rR = new RepoReserva();&#xD;
		System.out.print(&quot;\n----------------------------------------------------------------\n&quot;);&#xD;
		switch (opc) {&#xD;
		case 1:&#xD;
			Input.inTarjeta();&#xD;
			System.out.print(&#xD;
					&quot;Estamos procesando el pago...\n\n\n&quot;&#xD;
					);&#xD;
			for(Reserva c : carrito) {&#xD;
				c.setbPagada(true);&#xD;
				rR.insert(c);&#xD;
			}&#xD;
			break;&#xD;
		case 2:&#xD;
			System.out.print(&#xD;
					&quot;Nuestra cuenta corriente es: ES46 6353 1454 6132 1546\n&quot; +&#xD;
					&quot;Proceda al pago con su DNI y cuando recibamos el pago confirmaremos su reserva.\n\n&quot;&#xD;
					);&#xD;
			for(Reserva c : carrito) {&#xD;
				rR.insert(c);&#xD;
			}&#xD;
			break;&#xD;
		case 3:&#xD;
			System.out.print(&#xD;
					&quot;Le estamos redirigiendo...\n\n\n&quot;&#xD;
					);&#xD;
			for(Reserva c : carrito) {&#xD;
				c.setbPagada(true);&#xD;
				rR.insert(c);&#xD;
			}&#xD;
			break;&#xD;
		case 4:&#xD;
			System.out.print(&#xD;
					&quot;Le enviaremos una peticion a su numero de telefono en breves...\n&quot; +&#xD;
					&quot;Proceda al pago con su DNI y cuando recibamos el pago confirmaremos su reserva.\n\n&quot;&#xD;
					);&#xD;
			for(Reserva c : carrito) {&#xD;
				rR.insert(c);&#xD;
			}&#xD;
			break;&#xD;
		case 5:&#xD;
			for(Reserva c : carrito) {&#xD;
				rR.insert(c);&#xD;
			}&#xD;
			break;&#xD;
		default:&#xD;
			pasarelaPago();&#xD;
		}&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYaj9uimEe-n_bccIa6R9w" name="addCarrito" specification="_kWa_4OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYaj9-imEe-n_bccIa6R9w" name="r" type="_kLQ4wOimEe-n_bccIa6R9w"/>
          <language>java</language>
          <body>carrito.add(r);&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kKmKYOimEe-n_bccIa6R9w" name="print" isStatic="true" method="_kYZV0OimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKmKYeimEe-n_bccIa6R9w" name="modificarCarrito" visibility="private" isStatic="true" method="_kYZ84OimEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKmxcOimEe-n_bccIa6R9w" name="printModificarReserva" visibility="private" isStatic="true" method="_kYZ84eimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKmxceimEe-n_bccIa6R9w" name="id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kKmxcuimEe-n_bccIa6R9w" name="selectorModificarReserva" visibility="private" isStatic="true" method="_kYaj8OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKmxc-imEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_kKnYgOimEe-n_bccIa6R9w" name="id">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kKnYgeimEe-n_bccIa6R9w" name="pasarelaPago" visibility="private" isStatic="true" method="_kYaj8-imEe-n_bccIa6R9w"/>
        <ownedOperation xmi:id="_kKnYguimEe-n_bccIa6R9w" name="selectorPasarelaPago" visibility="private" isStatic="true" method="_kYaj9OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKnYg-imEe-n_bccIa6R9w" name="opc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_kWa_4OimEe-n_bccIa6R9w" name="addCarrito" isStatic="true" method="_kYaj9uimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kWa_4eimEe-n_bccIa6R9w" name="r" type="_kLQ4wOimEe-n_bccIa6R9w"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kKn_kOimEe-n_bccIa6R9w" name="MenuPrincipal">
        <ownedComment xmi:id="_kYs30eimEe-n_bccIa6R9w">
          <body>Menu principal donde eliges el hotel y te mueves entre menus</body>
        </ownedComment>
        <ownedAttribute xmi:id="_kXhzIOimEe-n_bccIa6R9w" name="hotel" isStatic="true" type="_kLN1cOimEe-n_bccIa6R9w" association="_kZErQOimEe-n_bccIa6R9w"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYaj-OimEe-n_bccIa6R9w" name="print" specification="_kKomoOimEe-n_bccIa6R9w">
          <language>java</language>
          <body>System.out.print(&#xD;
				&quot;\n\n~~~ Menu principal ~~~\n&quot; +&#xD;
				((Login.user.isbTrabajador()) ? &quot;-1. Para entrar en el menu de admin\n&quot; : &quot;&quot;) +&#xD;
				&quot;0. Para finalizar la compra o salir\n&quot; +&#xD;
				&quot;------------------------------\n&quot;&#xD;
				);&#xD;
		&#xD;
		RepoHotel rH = new RepoHotel();&#xD;
		ArrayList&lt;String> hoteles = rH.getMenuPrincipal();&#xD;
		int i = 0;&#xD;
		while(i &lt; hoteles.size()) {&#xD;
			System.out.print((i+1) + &quot;. &quot; + hoteles.get(i) + &quot;\n&quot;);&#xD;
			i++;&#xD;
		}&#xD;
		&#xD;
		System.out.print(&#xD;
				&quot;-----------------------------\n&quot;&#xD;
				+ &quot;Cualquier otro numero para volver atras\n&quot; +&#xD;
				&quot;Seleccione el hotel que desea: &quot;&#xD;
				);&#xD;
		int opc = Input.inOpc();&#xD;
		&#xD;
		if (opc == 0) {&#xD;
			System.out.print(&quot;¿Quieres deslogearte? &quot;);&#xD;
			if (Input.inYesNo()) {&#xD;
				Login.main(null);&#xD;
			} else {&#xD;
				print();&#xD;
			}&#xD;
		} else if (opc == -1 &amp;&amp; Login.user.isbTrabajador()) {&#xD;
			MenuAdmin.print();&#xD;
		} else if (opc &lt;= i &amp;&amp; opc > 0) {&#xD;
			int idhotel = rH.getPKByName(hoteles.get(opc-1));&#xD;
			hotel = rH.get(idhotel);			&#xD;
			MenuProductos.print(hotel.getID());&#xD;
		} else {&#xD;
			Login.main(null);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kKomoOimEe-n_bccIa6R9w" name="print" isStatic="true" method="_kYaj-OimEe-n_bccIa6R9w"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kKomoeimEe-n_bccIa6R9w" name="MenuProductos">
        <ownedComment xmi:id="_kYte4OimEe-n_bccIa6R9w">
          <body>Menu de productos disponibles</body>
        </ownedComment>
        <ownedAttribute xmi:id="_kXiaMOimEe-n_bccIa6R9w" name="fecIni" isStatic="true" type="_kVkrUOimEe-n_bccIa6R9w"/>
        <ownedAttribute xmi:id="_kXiaMuimEe-n_bccIa6R9w" name="fecFin" isStatic="true" type="_kVkrUOimEe-n_bccIa6R9w"/>
        <ownedAttribute xmi:id="_kXjBQOimEe-n_bccIa6R9w" name="fecNow" visibility="private" isStatic="true" type="_kVkrUOimEe-n_bccIa6R9w">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_kXjBQeimEe-n_bccIa6R9w" value="new Date(System.currentTimeMillis())"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYaj-eimEe-n_bccIa6R9w" name="print" specification="_kKpNsOimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYaj-uimEe-n_bccIa6R9w" name="idHotel">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>RepoSala rS = new RepoSala();&#xD;
		fecIni = Input.inFecIni();&#xD;
		fecFin = Input.inFecFin();&#xD;
		if (fecIni.compareTo(fecFin) > 0) {&#xD;
			Date fecTemp = fecIni;&#xD;
			fecIni = fecFin;&#xD;
			fecFin = fecTemp;&#xD;
		}&#xD;
		&#xD;
		if (fecIni.compareTo(fecNow) &lt; 0) {&#xD;
			System.out.print(&quot;\n>>> No se puede reservar fechas pasadas &lt;&lt;&lt;\n\n&quot;);&#xD;
			print(idHotel);&#xD;
		}&#xD;
		&#xD;
		System.out.print(&#xD;
				&quot;\n\n~~~ Menu Productos ~~~\n&quot;&#xD;
				+ &quot;------------------------------\n&quot;&#xD;
				+ &quot;Tipo de Habitacion\t| Precio\n&quot;&#xD;
				+ &quot;---------------------------------------------------------------\n&quot;&#xD;
				);&#xD;
		ArrayList&lt;Habitacion> habitaciones = rS.getMenuProductos();&#xD;
		int i = 1;&#xD;
		for(Habitacion h : habitaciones) {&#xD;
			System.out.print(&#xD;
					i + &quot;. &quot; + h.getTipo().toString() + &quot;\t\t| &quot; + h.getPvp() + &quot;€\n&quot;&#xD;
					);&#xD;
			i++;&#xD;
		}&#xD;
		System.out.print(&quot;0. otros\n&quot;&#xD;
				+ &quot;-----------------------------\n&quot;&#xD;
				+ &quot;Cualquier otro numero para volver atras\n&quot;&#xD;
				+ &quot;Seleccione la habitacion que desea: &quot;);&#xD;
		int opc = Input.inOpc();&#xD;
		RepoHotel rH = new RepoHotel();&#xD;
		if (opc == 0) {&#xD;
			System.out.print(&quot;\n\nPor favor contacte con nuestro hotel en el: &quot; + rH.get(idHotel).getTlfno() + &quot;\n&quot;&#xD;
				+ &quot;Nuestros trabajadores le atenderan con su peticion\n\n&quot;);&#xD;
			MenuPrincipal.print();&#xD;
		} else if (opc &lt; i) {	&#xD;
			MenuReserva.print(habitaciones.get(opc-1).getTipo().toString());&#xD;
		} else {&#xD;
			MenuPrincipal.print();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kKpNsOimEe-n_bccIa6R9w" name="print" isStatic="true" method="_kYaj-eimEe-n_bccIa6R9w">
          <ownedComment xmi:id="_kYte4eimEe-n_bccIa6R9w">
            <body>Imprime el menu&#xD;
	 * @param idHotel</body>
          </ownedComment>
          <ownedParameter xmi:id="_kKpNseimEe-n_bccIa6R9w" name="idHotel">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_kKp0wOimEe-n_bccIa6R9w" name="MenuReserva">
        <ownedComment xmi:id="_kYte4uimEe-n_bccIa6R9w">
          <body>Menu para confirmar la reserva antes de meterla en el carro</body>
        </ownedComment>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kYaj--imEe-n_bccIa6R9w" name="print" specification="_kKqb0OimEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kYaj_OimEe-n_bccIa6R9w" name="tipoDeHab">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.print(&#xD;
				&quot;\n\n~~~ Reserva ~~~\n&quot;&#xD;
				+ &quot;------------------------------\n&quot;&#xD;
				);&#xD;
		RepoHabitacion rH = new RepoHabitacion();&#xD;
		Habitacion h = rH.getByTypeAndFirstDate(tipoDeHab);&#xD;
		RepoReserva rR = new RepoReserva();&#xD;
		Reserva r = new Reserva(&#xD;
			rR.getNewID(), &#xD;
			MenuProductos.fecIni, &#xD;
			MenuProductos.fecFin, &#xD;
			Login.user, &#xD;
			h,&#xD;
			Login.user.aplicarDcto(h.getPvp())&#xD;
		);&#xD;
		MenuCarrito.addCarrito(r);&#xD;
		for(Reserva c : MenuCarrito.carrito) {&#xD;
			System.out.print(&#xD;
					&quot;.....................................\n&quot; + &#xD;
					/* Get IdHotel				 		   NumSala				 Imprime&#xD;
					   --- ------------------------------  --------------------  --------- */&#xD;
					rH.get(c.getSala().getHotel().getID(), c.getSala().getNum()).toString() + &#xD;
					&quot;\nDesde el &quot; + c.getFecIni().toString() + &quot; hasta el &quot; + c.getFecFin().toString() +&#xD;
					&quot;\nPrecio con descuento aplicado: &quot; + c.getPrecioTotal() + &#xD;
					&quot;\n.....................................\n&quot;);&#xD;
		}&#xD;
		System.out.print(&quot;&quot;&#xD;
				+ &quot;\nAñadida al carrito correctamente\n\n&quot;&#xD;
				+ &quot;------------------------------\n&quot;);&#xD;
&#xD;
		MenuPrincipal.print();&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_kKqb0OimEe-n_bccIa6R9w" name="print" isStatic="true" method="_kYaj--imEe-n_bccIa6R9w">
          <ownedParameter xmi:id="_kKqb0eimEe-n_bccIa6R9w" name="tipoDeHab">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kZDdJOimEe-n_bccIa6R9w" name="" memberEnd="_kZDdJeimEe-n_bccIa6R9w _kXfW4OimEe-n_bccIa6R9w">
        <ownedEnd xmi:id="_kZDdJeimEe-n_bccIa6R9w" name="" type="_kJ3xoOimEe-n_bccIa6R9w" association="_kZDdJOimEe-n_bccIa6R9w"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kZEEMeimEe-n_bccIa6R9w" name="" memberEnd="_kZEEMuimEe-n_bccIa6R9w _kXglAOimEe-n_bccIa6R9w">
        <ownedEnd xmi:id="_kZEEMuimEe-n_bccIa6R9w" name="" type="_kKkVMOimEe-n_bccIa6R9w" association="_kZEEMeimEe-n_bccIa6R9w"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_kZErQOimEe-n_bccIa6R9w" name="" memberEnd="_kZErQeimEe-n_bccIa6R9w _kXhzIOimEe-n_bccIa6R9w">
        <ownedEnd xmi:id="_kZErQeimEe-n_bccIa6R9w" name="" type="_kKn_kOimEe-n_bccIa6R9w" association="_kZErQOimEe-n_bccIa6R9w"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_jxixMOimEe-n_bccIa6R9w">
      <eAnnotations xmi:id="_jxmbkOimEe-n_bccIa6R9w" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_jxo30OimEe-n_bccIa6R9w" base_Package="_jwLfQOimEe-n_bccIa6R9w">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Array xmi:id="_kJFHcOimEe-n_bccIa6R9w" base_Element="_kJEgYOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Generics xmi:id="_kJaeoOimEe-n_bccIa6R9w" genericsValue="Cliente" base_Element="_kJZQgOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Generics xmi:id="_kJohEOimEe-n_bccIa6R9w" genericsValue="String" base_Element="_kJn6AOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Generics xmi:id="_kJySEOimEe-n_bccIa6R9w" genericsValue="Habitacion" base_Element="_kJxrAOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kKsRAOimEe-n_bccIa6R9w" base_Element="_kKrp8OimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kK0M0OimEe-n_bccIa6R9w" base_Element="_kKzlweimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Annotations xmi:id="_kK33MOimEe-n_bccIa6R9w" base_Element="_kKzlweimEe-n_bccIa6R9w">
    <annotations xmi:id="_kK66gOimEe-n_bccIa6R9w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kK8IoeimEe-n_bccIa6R9w" base_Element="_kK7hkOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Annotations xmi:id="_kK8IouimEe-n_bccIa6R9w" base_Element="_kK7hkOimEe-n_bccIa6R9w">
    <annotations xmi:id="_kK8Io-imEe-n_bccIa6R9w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLEEcOimEe-n_bccIa6R9w" base_Element="_kLDdYOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Annotations xmi:id="_kLErgOimEe-n_bccIa6R9w" base_Element="_kLDdYOimEe-n_bccIa6R9w">
    <annotations xmi:id="_kLErgeimEe-n_bccIa6R9w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLF5ouimEe-n_bccIa6R9w" base_Element="_kLF5oOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Annotations xmi:id="_kLGgsOimEe-n_bccIa6R9w" base_Element="_kLF5oOimEe-n_bccIa6R9w">
    <annotations xmi:id="_kLGgseimEe-n_bccIa6R9w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLGgtOimEe-n_bccIa6R9w" base_Element="_kLGgsuimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Annotations xmi:id="_kLGgteimEe-n_bccIa6R9w" base_Element="_kLGgsuimEe-n_bccIa6R9w">
    <annotations xmi:id="_kLGgtuimEe-n_bccIa6R9w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLJkAOimEe-n_bccIa6R9w" base_Element="_kLI88OimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLMAQeimEe-n_bccIa6R9w" base_Element="_kLLZMuimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Annotations xmi:id="_kLMAQuimEe-n_bccIa6R9w" base_Element="_kLLZMuimEe-n_bccIa6R9w">
    <annotations xmi:id="_kLMAQ-imEe-n_bccIa6R9w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLPqpOimEe-n_bccIa6R9w" base_Element="_kLPqouimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Annotations xmi:id="_kLQRsOimEe-n_bccIa6R9w" base_Element="_kLPqouimEe-n_bccIa6R9w">
    <annotations xmi:id="_kLQRseimEe-n_bccIa6R9w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLSt8OimEe-n_bccIa6R9w" base_Element="_kLSG5OimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Annotations xmi:id="_kLSt8eimEe-n_bccIa6R9w" base_Element="_kLSG5OimEe-n_bccIa6R9w">
    <annotations xmi:id="_kLSt8uimEe-n_bccIa6R9w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLUjIeimEe-n_bccIa6R9w" base_Element="_kLUjIOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kLYNgOimEe-n_bccIa6R9w" base_Element="_kLXmcOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Annotations xmi:id="_kLYNgeimEe-n_bccIa6R9w" base_Element="_kLXmcOimEe-n_bccIa6R9w">
    <annotations xmi:id="_kLYNguimEe-n_bccIa6R9w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_kVkEQOimEe-n_bccIa6R9w" base_Element="_kVi2IOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kVl5cOimEe-n_bccIa6R9w" base_Element="_kVkrUOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kVmggeimEe-n_bccIa6R9w" base_Element="_kVmggOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kVo8wOimEe-n_bccIa6R9w" base_Element="_kVnHkOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kVqK4OimEe-n_bccIa6R9w" base_Element="_kVpj0OimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kVqx8OimEe-n_bccIa6R9w" base_Element="_kVqK4uimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kVt1QOimEe-n_bccIa6R9w" base_Element="_kVtOMOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kVucUOimEe-n_bccIa6R9w" base_Element="_kVt1QeimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kVwRgOimEe-n_bccIa6R9w" base_Element="_kVvqcOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Generics xmi:id="_kVytwOimEe-n_bccIa6R9w" genericsValue="Cliente" base_Element="_kVyGsOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kV1xEOimEe-n_bccIa6R9w" base_Element="_kV1KAOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kV2YIeimEe-n_bccIa6R9w" base_Element="_kV2YIOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kV2_MOimEe-n_bccIa6R9w" base_Element="_kV2YIuimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Generics xmi:id="_kV3mQuimEe-n_bccIa6R9w" genericsValue="EspacioComun" base_Element="_kV3mQOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Generics xmi:id="_kV7Qo-imEe-n_bccIa6R9w" genericsValue="HabDisponible" base_Element="_kV7QoOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Generics xmi:id="_kV-T8OimEe-n_bccIa6R9w" genericsValue="Hotel" base_Element="_kV9s4OimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Generics xmi:id="_kWBXQOimEe-n_bccIa6R9w" genericsValue="Reserva" base_Element="_kWAwMeimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kWClYeimEe-n_bccIa6R9w" base_Element="_kWClYOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kWDMcOimEe-n_bccIa6R9w" base_Element="_kWClYuimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Generics xmi:id="_kWJTEOimEe-n_bccIa6R9w" genericsValue="SalaReunion" base_Element="_kWIE8eimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kWeqQOimEe-n_bccIa6R9w" base_Element="_kWdcIOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kXA1wOimEe-n_bccIa6R9w" base_Element="_kXAOsOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kXJYoeimEe-n_bccIa6R9w" base_Element="_kXJYoOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kXJ_s-imEe-n_bccIa6R9w" base_Element="_kXJ_sOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Annotations xmi:id="_kXKmwOimEe-n_bccIa6R9w" base_Element="_kXJ_sOimEe-n_bccIa6R9w">
    <annotations xmi:id="_kXKmweimEe-n_bccIa6R9w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kXMb8-imEe-n_bccIa6R9w" base_Element="_kXMb8OimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Annotations xmi:id="_kXNDAOimEe-n_bccIa6R9w" base_Element="_kXMb8OimEe-n_bccIa6R9w">
    <annotations xmi:id="_kXNDAeimEe-n_bccIa6R9w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kXYpMOimEe-n_bccIa6R9w" base_Element="_kXXbEOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kXaeYOimEe-n_bccIa6R9w" base_Element="_kXZ3UOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Generics xmi:id="_kXaeYuimEe-n_bccIa6R9w" genericsValue="String" base_Element="_kXaeYeimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kXbFcOimEe-n_bccIa6R9w" base_Element="_kXaeYeimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Generics xmi:id="_kXbsgOimEe-n_bccIa6R9w" genericsValue="String" base_Element="_kXbFceimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kXbsguimEe-n_bccIa6R9w" base_Element="_kXbFceimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Generics xmi:id="_kXc6oOimEe-n_bccIa6R9w" genericsValue="String" base_Element="_kXcTkOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kXc6ouimEe-n_bccIa6R9w" base_Element="_kXcTkOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Generics xmi:id="_kXdhseimEe-n_bccIa6R9w" genericsValue="String" base_Element="_kXdhsOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kXeIwOimEe-n_bccIa6R9w" base_Element="_kXdhsOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Generics xmi:id="_kXev0OimEe-n_bccIa6R9w" genericsValue="String" base_Element="_kXeIweimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kXev0uimEe-n_bccIa6R9w" base_Element="_kXeIweimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kXfW4eimEe-n_bccIa6R9w" base_Element="_kXfW4OimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Generics xmi:id="_kXhMEOimEe-n_bccIa6R9w" genericsValue="Reserva" base_Element="_kXglAOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kXhMEuimEe-n_bccIa6R9w" base_Element="_kXglAOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kXhzIeimEe-n_bccIa6R9w" base_Element="_kXhzIOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kXiaMeimEe-n_bccIa6R9w" base_Element="_kXiaMOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kXiaM-imEe-n_bccIa6R9w" base_Element="_kXiaMuimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kXjBQuimEe-n_bccIa6R9w" base_Element="_kXjBQOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kXkPYeimEe-n_bccIa6R9w" base_Element="_kXkPYOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kXmroOimEe-n_bccIa6R9w" base_Element="_kXmEkuimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kXpH4OimEe-n_bccIa6R9w" base_Element="_kXog1OimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kXpu8eimEe-n_bccIa6R9w" base_Element="_kXpu8OimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kXqWAOimEe-n_bccIa6R9w" base_Element="_kXpu8uimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kXqWAuimEe-n_bccIa6R9w" base_Element="_kXqWAeimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kXq9EOimEe-n_bccIa6R9w" base_Element="_kXqWA-imEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kXq9EuimEe-n_bccIa6R9w" base_Element="_kXq9EeimEe-n_bccIa6R9w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_kXrkIOimEe-n_bccIa6R9w" base_Element="_kXq9E-imEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kZBA4OimEe-n_bccIa6R9w" base_Element="_kZAZ0OimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kZBn8eimEe-n_bccIa6R9w" base_Element="_kZBA4eimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kZBn9OimEe-n_bccIa6R9w" base_Element="_kZBn8uimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kZCPAuimEe-n_bccIa6R9w" base_Element="_kZCPAOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kZC2EOimEe-n_bccIa6R9w" base_Element="_kZCPA-imEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kZDdIOimEe-n_bccIa6R9w" base_Element="_kZC2EeimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kZDdI-imEe-n_bccIa6R9w" base_Element="_kZDdIeimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kZEEMOimEe-n_bccIa6R9w" base_Element="_kZDdJOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kZEEM-imEe-n_bccIa6R9w" base_Element="_kZEEMeimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kZErQuimEe-n_bccIa6R9w" base_Element="_kZErQOimEe-n_bccIa6R9w"/>
  <UMLLabProfile:Reference xmi:id="_kZFSUOimEe-n_bccIa6R9w" base_Element="_kZErQ-imEe-n_bccIa6R9w"/>
  <UMLLabProfile:Patch xmi:id="_nJ2JwOimEe-n_bccIa6R9w" base_Element="_kKqb0uimEe-n_bccIa6R9w" patchText="@@ -226,18 +226,16 @@&#xA;  tarifas&#xA;-()&#xA; %7B%0D%0A%09%09est&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_nJ3-8OimEe-n_bccIa6R9w" base_Element="_kLIV4OimEe-n_bccIa6R9w" patchText="@@ -180,18 +180,16 @@&#xA;  tipoHab&#xA;-()&#xA;  %7B%0D%0A%09%09in&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_nJ3-8eimEe-n_bccIa6R9w" base_Element="_kLT8EOimEe-n_bccIa6R9w" patchText="@@ -143,26 +143,24 @@&#xA; c enum tSala&#xA;-()&#xA;  %7B%0D%0A%09%09Habita&#xA;" conflicting="false"/>
</xmi:XMI>
